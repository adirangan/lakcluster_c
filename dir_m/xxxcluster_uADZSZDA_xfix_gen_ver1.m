function ...
[ ...
 output_string ...
,gamma_d ...
] = ...
xxxcluster_uADZSZDA_xfix_gen_ver1( ...
 str_lak_vs_dex ...
,flag_reverse ...
,A_n_rind_ ...
,Z_n_rind_ ...
,T_n_cind ...
,GLOBAL_TEST_sparse ...
,gamma ...
,B_MLT ...
,Ireq ...
,shuffle_num ...
);

nbins=length(A_n_rind_);
Z_bother = 0;
for nb1=0:nbins-1;
if (length(Z_n_rind_{1+nb1})>0); Z_bother = 1; end;
end;%for nb1=0:nbins-1;
if ~Z_bother; flag_reverse = 0; end;

if Z_bother & flag_reverse==1; str_reverse = '_X'; end;
if Z_bother & flag_reverse==0; str_reverse = '_D'; end;
if ~Z_bother; str_reverse = ''; end;
gamma_d = floor(gamma*1000); str_gamma = sprintf('_g%.3d',gamma_d);
if nbins>1; u_str = 'u'; else; u_str = ''; end;
if GLOBAL_TEST_sparse==1; D_str = 'D'; else; D_str = ''; end;
if length(T_n_cind)>1; S_str = 'S'; else; S_str = ''; end;
if Z_bother; Z_str = 'Z'; else; Z_str = 'A'; end;
str_type = sprintf('_%sA%s%s%s%s%sA',u_str,D_str,Z_str,S_str,Z_str,D_str);
if strcmp(str_type,'_AAAA'); str_type = ''; end;
if (B_MLT>0); str_B = sprintf('_B%.2d',B_MLT); else; str_B = ''; end;
if nbins>1; str_I = sprintf('_I%d',Ireq); else; str_I = ''; end;
if shuffle_num>0; str_shuffle = sprintf('_s%.4d',shuffle_num); else; str_shuffle = ''; end;
output_string = sprintf('%s%s%s%s%s%s%s',str_lak_vs_dex,str_type,str_reverse,str_gamma,str_B,str_I,str_shuffle);
