function [parameter,p_all_out,p_avg_out,p_top_out] = p_from_trace__ver0(parameter,trace__);
%%%%%%%%;
% Here we assume that trace__ has been loaded with load_trace__from_dir_ver0.m. ;
% This calculation assumes that all the traces have been fully calculated (i.e., none are missing). ;
%%%%%%%%;
str_thisfunction = 'p_from_trace__ver0';

if isempty(parameter); parameter = struct('type','parameter'); end;
if ~isfield(parameter,'flag_verbose'); parameter.flag_verbose = 0; end;
if ~isfield(parameter,'niteration_alo'); parameter.niteration_alo = []; end; %<-- this is the first iteration from which the 'maximum' is calculated (i.e., 'top'). ;
if ~isfield(parameter,'niteration_ahi'); parameter.niteration_ahi = []; end; %<-- this is the final iteration from which the 'maximum' is calculated (i.e., 'top'). ;
flag_verbose = parameter.flag_verbose;
niteration_alo = parameter.niteration_alo;
niteration_ahi = parameter.niteration_ahi;
flag_disp = flag_verbose; nf=0;

if flag_verbose; disp(sprintf(' %% [entering %s]',str_thisfunction)); end;

n_shuffle = trace__.n_shuffle;
niter_i_ = trace__.niter_is__(:,1+0);
n_iteration = numel(niter_i_);
r_rem_i_ = trace__.r_rem_is__(:,1+0);
c_rem_i_ = trace__.c_rem_is__(:,1+0);
ZR_is__ = trace__.ZR_is__;
if isempty(niteration_alo); niteration_alo = floor(0.05*(n_iteration-1)); end;
if isempty(niteration_ahi); niteration_ahi = floor(0.95*(n_iteration-1)); end;
niteration_avg_ = transpose(             0:niteration_ahi); %<-- these are the iterations for which the 'average' is calculated (i.e., 'avg'). ;
niteration_top_ = transpose(niteration_alo:niteration_ahi); %<-- these are the iterations for which the 'maximum' is calculated (i.e., 'top'). ;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% plot colored scatterplot using ZR_ ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
dr_i_ = -diff(r_rem_i_); dc_i_ = -diff(c_rem_i_);  %<-- negate the difference to obtain the (positive) number of rows/cols removed at each iteration. ;
dr2_i_ = reshape(dr_i_(1+niteration_avg_)/max(1,sum(dr_i_(1+niteration_avg_))),[1,numel(niteration_avg_)]);
dc2_i_ = reshape(dc_i_(1+niteration_avg_)/max(1,sum(dc_i_(1+niteration_avg_))),[1,numel(niteration_avg_)]);
tr_avg_s_    = dr2_i_*ZR_is__(1+niteration_avg_,:);
tr_avg_p_ = zeros(1+n_shuffle,1);
tr_top_s_ = max(ZR_is__(1+niteration_top_,:),[],1);
tr_top_p_ = zeros(1+n_shuffle,1);
tr_all_p_ = zeros(1+n_shuffle,1);
tr_avg_use_s_ = tr_avg_s_(2:end);
tr_top_use_s_ = tr_top_s_(2:end);
for nshuffle=0:n_shuffle;
tr_top_p_(1+nshuffle) = (length(find(tr_top_use_s_>tr_top_s_(1+nshuffle))) + 0.5*length(find(tr_top_use_s_==tr_top_s_(1+nshuffle))))/max(1,n_shuffle);
tr_avg_p_(1+nshuffle) = (length(find(tr_avg_use_s_>tr_avg_s_(1+nshuffle))) + 0.5*length(find(tr_avg_use_s_==tr_avg_s_(1+nshuffle))))/max(1,n_shuffle);
tau_tmp = max( 0.5/max(1,n_shuffle) , min([tr_top_p_(1+nshuffle),tr_avg_p_(1+nshuffle)]) );
ls_rm_ = find(tr_top_use_s_>=prctile(tr_top_use_s_,100*(1-tau_tmp)));
ls_ra_ = find(tr_avg_use_s_>=prctile(tr_avg_use_s_,100*(1-tau_tmp)));
tr_all_p_(1+nshuffle) = length(unionall({ls_rm_,ls_ra_}))/max(1,n_shuffle);
end;%for nshuffle=0:n_shuffle;
p_avg_out = tr_avg_p_(1+0);
p_top_out = tr_top_p_(1+0);
p_all_out = tr_all_p_(1+0);
disp(sprintf('p_avg_out %0.3f p_top_out %0.3f p_all_out %0.3f',p_avg_out,p_top_out,p_all_out));

if flag_disp;
figure(1+nf);nf=nf+1;clf;figsml;
linewidth_big = 3;
linewidth_sml = 1;
nl10plim=[0,2];
c_80s__ = colormap_80s; n_c_80s = size(c_80s__,1);
Msize1 = 25; Msize2 = 35; fontsize_use = 12;
tmp_r_eli_i_ = r_rem_i_(1+0) - r_rem_i_;
%%%%;
subplot(3,2,1);
hold on;
plot(niter_i_,ZR_is__(:,2:end),'k-','LineWidth',linewidth_sml);
plot(niter_i_,ZR_is__(:,1 + 0),'r-','LineWidth',linewidth_big);
hold off;
xlim([0,niter_i_(end)+1]); xlabel('niteration'); ylim([-10,+10]); ylabel('ZR');
subplot(3,2,2);
hold on;
plot(tmp_r_eli_i_,ZR_is__(:,2:end),'k-','LineWidth',linewidth_sml);
plot(tmp_r_eli_i_,ZR_is__(:,1 + 0),'r-','LineWidth',linewidth_big);
hold off;
xlim([min(tmp_r_eli_i_),max(tmp_r_eli_i_)]); xlabel('rows eliminated'); ylim([-10,+10]); ylabel('ZR');
%%%%;
subplot(3,2,[3,4,5,6]);
hold on;
for nshuffle=1:n_shuffle;
nc_80s = max(1,min(n_c_80s,floor(n_c_80s*((-log10(tr_all_p_(1+nshuffle))-min(nl10plim))/diff(nl10plim)))));
plot(tr_top_s_(1+nshuffle),tr_avg_s_(1+nshuffle),'.','Color',c_80s__(nc_80s,:),'MarkerSize',Msize1);
end;%for nshuffle=1:n_shuffle;
nshuffle=0;
plot(tr_top_s_(1+nshuffle),tr_avg_s_(1+nshuffle),'x','Color',[0,0,0],'MarkerSize',Msize2);
plot(tr_top_s_(1+nshuffle),tr_avg_s_(1+nshuffle),'o','Color',[0,0,0],'MarkerSize',Msize2);
hold off;
disp(sprintf('xlim %0.2f %0.2f ylim %0.2f %0.2f',xlim(),ylim()));
xlabel('row Z-score (top)'); ylabel('row Z-score (avg)'); 
title('scatterplot of distribution of top vs avg: bicluster (x) and permutations (dots)');
title(sprintf('p_avg_out %0.6f p_top_out %0.6f p_all_out %0.6f',p_avg_out,p_top_out,p_all_out),'Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
set(gcf,'Position',1+[0,0,1024*1,1024*1.5]);
end;%if flag_disp;

if flag_verbose; disp(sprintf(' %% [finished %s]',str_thisfunction)); end;

