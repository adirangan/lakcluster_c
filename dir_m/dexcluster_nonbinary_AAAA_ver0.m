function [out_xdrop_,trace_] = dexcluster_nonbinary_AAAA_ver0(A_n_,gamma);
% Simple differentially-expressed biclustering algorithm. ;
% Does not binarize. ;

if nargin<1;
%%%%%%%%;
flag_test_calculation=0;
if flag_test_calculation;
M=9;N=12;A_n_ = randn(M,N); gamma = 0.0;
[out_xdrop_A_,trace_A_] = dexcluster_nonbinary_AAAA_slow_ver0(A_n_,gamma);
[out_xdrop_B_,trace_B_] = dexcluster_nonbinary_AAAA_ver0(A_n_,gamma);
%disp(sprintf(' %% xdrop error: %0.6f',fnorm(out_xdrop_A_-out_xdrop_B_)));
disp(sprintf(' %% trace error: %0.6f',fnorm(trace_A_-trace_B_)));
disp('returning');return;
end;%if flag_test_calculation;
%%%%%%%%;
flag_test_speed=0;
if flag_test_speed;
M=1780;N=1e4;A_n_ = randn(M,N); gamma = 0.0;
tic; [out_xdrop_A_,trace_A_] = dexcluster_nonbinary_AAAA_ver0(A_n_,gamma); disp(sprintf(' %% dexcluster_nonbinary_AAAA_ver0 time %0.2f',toc));
tic; [out_xdrop_B_,trace_B_] = dexcluster_nonbinary_AAAA_slow_ver0(A_n_,gamma); disp(sprintf(' %% dexcluster_nonbinary_AAAA_slow_ver0 time %0.2f',toc));
disp(sprintf(' %% trace error: %0.6f',fnorm(trace_A_-trace_B_)));
disp('returning');return;
end;%if flag_test_speed;
%%%%%%%%;
n_iteration = 512;
clf; hold on;
plot([0,1],[0,1],'k-');plot([0.5,0.5],[0,1],'k-');plot([0,1],[0.5,0.5],'k-');
grid on;xlim([0.35,1]);ylim([0.35,1]);axis square;xlabel('spectral');ylabel('dexcluster');
title('Auc for dexcluster vs spectral');
for niteration=1:n_iteration;
%rng(1);
%M=1780; N=1e4; gamma = 0.05;
M=178; N=1e3; gamma = 0.05;
X = 0.55; MX = ceil(M^X); NX = ceil(N^X);
A = randn(M,N); B=randn(MX,NX)+0.65*ones(MX,1)*(2*(rand(1,NX)>0.5) - 1); 
for nj=1:2; 
pf_{nj} = randperm(size(A,nj)); 
[~,pi_{nj}] = sort(pf_{nj}); [~,pi_{nj}] = sort(pi_{nj}); 
end;% for nj=1:2;
A(pf_{1}(1:MX),pf_{2}(1:NX)) = B;
%%%%%%%%;
% Binarize? ;
%%%%%%%%;
% A = 2*(A>0)-1;
%%%%%%%%;
tic; [tmp_U_,tmp_S_,tmp_V_] = svds(A,1); t_s_ = toc;
[~,tmp_U_ij_] = sort(abs(tmp_U_),'descend'); [~,tmp_V_ij_] = sort(abs(tmp_V_),'descend');
rkeep_s_ = tmp_U_ij_; ckeep_s_ = tmp_V_ij_;
[~,tmp_Bn_] = intersect(rkeep_s_,pi_{1}(1:size(B,1)),'stable'); [~,tmp_Bc_] = intersect(rkeep_s_,pi_{1}(size(B,1)+1:end),'stable'); Auc_s_(1) = auc_0(tmp_Bn_,tmp_Bc_);
[~,tmp_Bn_] = intersect(ckeep_s_,pi_{2}(1:size(B,2)),'stable'); [~,tmp_Bc_] = intersect(ckeep_s_,pi_{2}(size(B,2)+1:end),'stable'); Auc_s_(2) = auc_0(tmp_Bn_,tmp_Bc_);
Auc_s_avg = mean(Auc_s_); disp(sprintf(' %% spectral   t%4.2f [%0.2f %0.2f] --> %0.2f',t_s_,Auc_s_,Auc_s_avg));
%%%%%%%%;
tic; out_xdrop_m_ = dexcluster_nonbinary_AAAA_ver0(A,gamma); t_m_ = toc;
rdrop_m_ = out_xdrop_m_(:,1); rdrop_m_ = 1+rdrop_m_(find(rdrop_m_>-1)); 
cdrop_m_ = out_xdrop_m_(:,2); cdrop_m_ = 1+cdrop_m_(find(cdrop_m_>-1)); 
rkeep_m_ = rdrop_m_(end:-1:1); ckeep_m_ = cdrop_m_(end:-1:1);
[~,tmp_Bn_] = intersect(rkeep_m_,pi_{1}(1:size(B,1)),'stable'); [~,tmp_Bc_] = intersect(rkeep_m_,pi_{1}(size(B,1)+1:end),'stable'); Auc_m_(1) = auc_0(tmp_Bn_,tmp_Bc_);
[~,tmp_Bn_] = intersect(ckeep_m_,pi_{2}(1:size(B,2)),'stable'); [~,tmp_Bc_] = intersect(ckeep_m_,pi_{2}(size(B,2)+1:end),'stable'); Auc_m_(2) = auc_0(tmp_Bn_,tmp_Bc_);
Auc_m_avg = mean(Auc_m_); disp(sprintf(' %% dexcluster t%4.2f [%0.2f %0.2f] --> %0.2f',t_m_,Auc_m_,Auc_m_avg));
%%%%%%%%;
flag_plot=0;
if flag_plot;
colormap(colormap_beach());
subplot(1,3,1); imagesc(A(pi_{1},pi_{2}),[-1,1]); set(gca,'XTick',[],'Ytick',[]); title('A orig');
subplot(1,3,2); imagesc(A(rkeep_s_,ckeep_s_),[-1,1]); set(gca,'XTick',[],'Ytick',[]); title(sprintf('spectral A%0.2f',Auc_s_avg));
subplot(1,3,3); imagesc(A(rkeep_m_,ckeep_m_),[-1,1]); set(gca,'XTick',[],'Ytick',[]); title(sprintf('dexcluster A%0.2f',Auc_m_avg));
set(gcf,'Position',1+[0,0,1024,512]);
end;%if flag_plot;
%%%%%%%%;
plot(Auc_s_avg,Auc_m_avg,'ko'); 
drawnow();
end;%for niteration=1:n_iteration;
hold off; 
disp('returning');return;
end;%if nargin<1;

if nargin<2; gamma = 0.0; end;
verbose=1;
[n_r,n_c] = size(A_n_);
if min(n_r,n_c)<1024; verbose=0; end;

[rdrop_,cdrop_,lrij_,lcij_] = get_xdrop_(n_r,n_c,gamma);
r_ij_ = 1:n_r; c_ij_ = 1:n_c;
n_a = length(rdrop_);
e_t_ = ones(1,n_r);
out_xdrop_ = zeros(n_r+n_c,2);
trace_ = zeros(n_a,6); %<-- [iteration , length(r_ij_) , length(c_ij_) , mean(QR_) , mean(QC_) , 1] ;
etAn_ = e_t_*A_n_; etAn2_ = e_t_*(A_n_.^2);
QR_pre_ = transpose((e_t_*A_n_)*transpose(A_n_)) - sum(A_n_.^2,2) ;
QC_pre_ = (e_t_*A_n_).^2 - e_t_*(A_n_.^2) ;
%%%%%%%%;
% A_n_ represented as: ;
% [ w_n_ y_n_ ] ;
% [ x_n_ z_n_ ] ;
% where x_n_ and y_n_ are removed. ;
%%%%%%%%;
nx=0;
tic;
t_s = toc;
for na=1:n_a;
if (verbose);
if (mod(na,10)==0); 
t_a = toc; t_e = t_a*n_a/na; 
disp(sprintf(' %% na %d/%d, time %0.2fs, estimated %0.2fs (%0.2fh)',na,n_a,t_a,t_e,t_e/3600)); 
end;%if (mod(na,10)==0); 
end;%if (verbose);
trace_(na,:) = [na , length(r_ij_) , length(c_ij_) , mean(QR_pre_) , mean(QC_pre_) , 1.0];
[~,tmp_r_ij_] = sort(QR_pre_(r_ij_));
r_rmv_ = r_ij_(tmp_r_ij_(1:rdrop_(na))); r_rtn_ = r_ij_(tmp_r_ij_(rdrop_(na)+1:end));
tmp_x_n_ = A_n_(r_rmv_,c_ij_); tmp_etxn_ = sum(tmp_x_n_,1); tmp_etxn2_ = sum(tmp_x_n_.^2,1);
tmp_etwn_ = etAn_(c_ij_) - tmp_etxn_; tmp_etwn2_ = etAn2_(c_ij_) - tmp_etxn2_;
etAn_(c_ij_) = etAn_(c_ij_) - tmp_etxn_; etAn2_(c_ij_) = etAn2_(c_ij_) - tmp_etxn2_;
QC_pos_ = zeros(1,n_c); QC_pos_(c_ij_) = QC_pre_(c_ij_) - (2*tmp_etwn_.*tmp_etxn_ + tmp_etxn_.^2 - tmp_etxn2_);
QC_pre_ = QC_pos_;
[~,tmp_c_ij_] = sort(QC_pre_(c_ij_));
c_rmv_ = c_ij_(tmp_c_ij_(1:cdrop_(na))); c_rtn_ = c_ij_(tmp_c_ij_(cdrop_(na)+1:end));
tmp_w_n_ = A_n_(r_rtn_,c_rtn_); tmp_y_n_ = A_n_(r_rtn_,c_rmv_);
tmp_x_n_ = A_n_(r_rmv_,c_rtn_); tmp_z_n_ = A_n_(r_rmv_,c_rmv_);
tmp_ynyten_ = tmp_y_n_*(transpose(sum(tmp_y_n_,1)));
tmp_wnxten_ = tmp_w_n_*(transpose(sum(tmp_x_n_,1)));
tmp_ynzten_ = tmp_y_n_*(transpose(sum(tmp_z_n_,1)));
tmp_yn2fn_ = sum(tmp_y_n_.^2,2);
QR_pos_ = zeros(n_r,1); QR_pos_(r_rtn_) = QR_pre_(r_rtn_) - (tmp_ynyten_ + tmp_wnxten_ + tmp_ynzten_ - tmp_yn2fn_);
QR_pre_ = QR_pos_;
etAn_(c_rmv_) = 0; etAn2_(c_rmv_) = 0;
QC_pre_(c_rmv_) = 0;
r_ij_(tmp_r_ij_(1:rdrop_(na))) = [];
c_ij_(tmp_c_ij_(1:cdrop_(na))) = [];
out_xdrop_(nx + (1:rdrop_(na)),:) = [r_rmv_(:)-1 , -ones(rdrop_(na),1)]; nx = nx+rdrop_(na);
out_xdrop_(nx + (1:cdrop_(na)),:) = [-ones(cdrop_(na),1) , c_rmv_(:)-1]; nx = nx+cdrop_(na);
end;%for na=1:n_a;
