function ...
[ ...
 parameter ...
,dat_fil__ ...
,P_pos_nvv___ ...
,dat_res__ ...
] = ...
dolphin_estimate_kalman_filter_0( ...
 parameter ...
,aid_ ...
,age_ ...
,dat__ ...
,a_ ...
,A__ ...
,BB_inv__ ...
,CC_inv__ ...
,P_nvv___ ...
);

verbose=0;

na=0;
if (nargin<(1+na)); parameter=[]; end; na=na+1;
if (nargin<(1+na)); aid_=[]; end; na=na+1;
if (nargin<(1+na)); age_=[]; end; na=na+1;
if (nargin<(1+na)); dat__=[]; end; na=na+1;
if (nargin<(1+na)); a_=[]; end; na=na+1;
if (nargin<(1+na)); A__=[]; end; na=na+1;
if (nargin<(1+na)); BB_inv__=[]; end; na=na+1;
if (nargin<(1+na)); CC_inv__=[]; end; na=na+1;
if (nargin<(1+na)); P_nvv___={}; end; na=na+1;

if isempty(parameter); parameter = struct('type','parameter'); end;
if (~isfield(parameter,'tolerance_master')); parameter.tolerance_master = 1e-2; end;
tolerance_master = parameter.tolerance_master;

u_aid_ = unique(aid_);
n_aid = numel(u_aid_);
n_aid_ = zeros(n_aid,1);
index_aid__ = cell(n_aid,1);
for naid=0:n_aid-1;
index_aid__{1+naid} = efind(aid_==u_aid_(1+naid));
n_aid_(1+naid) = numel(index_aid__{1+naid});
end;%for naid=0:n_aid-1;

[n_smp,n_var] = size(dat__);

dat_fil__ = zeros(n_smp,n_var);
dat_res__ = zeros(n_smp,n_var);
P_pos_nvv___ = cell(n_aid,1);
for naid=0:n_aid-1;
index_aid_ = index_aid__{1+naid};
P__ = [];
if ~isempty(P_nvv___); P__ = P_nvv___{1+naid}; end;
[ ...
 parameter ...
,dat_fil__(1+index_aid_,:) ...
,dat_res__(1+index_aid_,:) ...
,P_pos__ ...
] = ...
dolphin_estimate_kalman_filter_single_trial_0( ...
 parameter ...
,age_(1+index_aid_,:) ...
,dat__(1+index_aid_,:) ...
,a_ ...
,A__ ...
,BB_inv__ ...
,CC_inv__ ...
,P__ ...
);
P_pos_nvv___{1+naid} = P_pos__;
end;%for naid=0:n_aid-1;
