function ...
[ ...
 parameter ...
] = ...
label_tree_SVD_discat_wrap_0( ...
 parameter ...
,dir_base ...
,str_infix ...
,str_sgtitle ...
,local_fname_output_label ...
,local_fname_nlpbra_label ...
,local_fname_nlpnex_label ...
,X_ ...
,rank_estimate_X ...
,label_A_ ...
);

verbose=1;
if (verbose); disp(sprintf(' %% [entering label_tree_SVD_discat_wrap_0]')); end;

if isempty(parameter);
parameter = struct('type','parameter');
end;%if isempty(parameter);
if (~isfield(parameter,'date_diff_threshold')); parameter.date_diff_threshold = 0.5; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_force_create_mat')); parameter.flag_force_create_mat = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_force_create_tmp')); parameter.flag_force_create_tmp = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_replot')); parameter.flag_replot = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'SVD_discat_alpha_over_beta')); parameter.SVD_discat_alpha_over_beta = 1; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'label_tree_SVD_discat_depth_upb')); parameter.label_tree_SVD_discat_depth_upb = 1; end; %<-- parameter_bookmark. ;
date_diff_threshold = parameter.date_diff_threshold;
flag_force_create_mat = parameter.flag_force_create_mat;
flag_force_create_tmp = parameter.flag_force_create_tmp;
flag_replot = parameter.flag_replot;
SVD_discat_alpha_over_beta = parameter.SVD_discat_alpha_over_beta;
label_tree_SVD_discat_depth_upb = parameter.label_tree_SVD_discat_depth_upb;

dir_jpg = sprintf('%s/dir_jpg',dir_base);
if (~exist(dir_jpg,'dir')); disp(sprintf(' %% mkdir %s',dir_jpg)); mkdir(dir_jpg); end;

local_output_label__ = [];
local_nlpbra_label__ = [];
local_nlpnex_label__ = [];
flag_exist = exist(local_fname_output_label,'file') & exist(local_fname_nlpbra_label,'file') & exist(local_fname_nlpnex_label,'file');
if (~flag_exist);
disp(sprintf(' %% Warning, ~flag_exist in label_tree_SVD_discat_wrap_0'));
end;%if (~flag_exist);
if (flag_exist);
fp = fopen(local_fname_output_label); local_output_label__ = textscan(fp,'%s','Delimiter','\n'); local_output_label__ = local_output_label__{1}; fclose(fp);
fp = fopen(local_fname_nlpbra_label); local_nlpbra_label__ = textscan(fp,'%s','Delimiter','\n'); local_nlpbra_label__ = local_nlpbra_label__{1}; fclose(fp);
fp = fopen(local_fname_nlpnex_label); local_nlpnex_label__ = textscan(fp,'%s','Delimiter','\n'); local_nlpnex_label__ = local_nlpnex_label__{1}; fclose(fp);
%%%%%%%%;
try;
label_tree ...
= ...
label_to_tree_2( ...
 0 ...
,[] ...
,[] ...
,[] ...
,local_output_label__ ...
,local_nlpbra_label__ ...
,local_nlpnex_label__ ...
);
disp(sprintf(' %% tree compatible with label_to_tree_2, not trying label_to_tree_1'));
catch;
disp(sprintf(' %% tree not compatible with label_to_tree_2, trying label_to_tree_1'));
label_tree ...
= ...
label_to_tree_1( ...
 0 ...
,[] ...
,[] ...
,[] ...
,local_output_label__ ...
,local_nlpbra_label__ ...
,local_nlpnex_label__ ...
);
end;%try;
%%%%%%%%;
[U_,S_,V_] = svds(X_,rank_estimate_X);
US_X_sg__ = U_*S_; clear U_ S_ V_;
%%%%%%%%;
label_tree_SVD_discat_0( ...
 0 ...
,label_tree_SVD_discat_depth_upb ...
,label_tree ...
,SVD_discat_alpha_over_beta ...
,US_X_sg__ ...
,label_A_ ...
,dir_jpg ...
,str_infix ...
,str_sgtitle ...
,flag_replot ...
);
%%%%%%%%;
end;%if (flag_exist);

if (verbose); disp(sprintf(' %% [finished label_tree_SVD_discat_wrap_0]')); end;
