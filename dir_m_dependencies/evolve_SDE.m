function [R_avg,dt_,age_,Y__] = evolve_SDE(rseed,n_T,n_var,dt_avg,A_inv_a_,Psi__,Lambda_,Psi_inv__,B__,C__,snr,log_amplitude);
flag_verbose=0;
if flag_verbose; disp(sprintf(' %% [entering evolve_SDE] log_amplitude %0.2f --> amplitude %0.2f',log_amplitude,exp(log_amplitude))); end;
rng(rseed);
Y__ = zeros(n_var,n_T);
Y__(:,1+0) = randn(n_var,1);
age_ = zeros(n_T,1);
dt_ = zeros(n_T-1,1);
R_ = zeros(n_T-1,1);
for nT=1:n_T-1;
dt=-dt_avg * log(1-rand());
dt_(1+nT-1) = dt;
age_(1+nT) = age_(1+nT-1) + dt;
Y_pre_ = Y__(:,1+nT-1);
tmp_exp_Adt__ = Psi__ * diag(exp(+exp(log_amplitude)*Lambda_*dt)) * Psi_inv__;
Y_pos_ = real( -A_inv_a_ + tmp_exp_Adt__ * (Y_pre_ + A_inv_a_ + SDE_sample_int_expAsBdW(dt,Psi__,exp(log_amplitude)*Lambda_,exp(log_amplitude)/snr*Psi_inv__*B__,1e-2)) );
Y__(:,1+nT+0) = Y_pos_ + exp(log_amplitude)/snr*C__*randn(n_var,1);
R_(1+nT-1) = fnorm(Y__(:,1+nT+0) - Y__(:,1+nT-1))/fnorm(Y__(:,1+nT-1));
end;%for nT=1:n_T-1;
R_avg = mean(R_);
if flag_verbose; disp(sprintf(' %% [finished evolve_SDE] R_avg %0.2f',R_avg)); end;
