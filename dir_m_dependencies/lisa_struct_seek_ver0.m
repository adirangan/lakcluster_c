function [lisa] = lisa_struct_seek_ver0(specification) ;
%{

  %%%%%%%%;
  % Basic run. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  cl_num = 4;%<-- train on platform 4;
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; mr_string = '';mc_string = ''; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; No special mc_string. ;
  n_maf = 5; n_cov = 2; %<-- minor-allele-frequency cutoff 25-50, 2 covariates (mds-components) used, repeated twice. ;
  n_scramble = 0; n_shuffle = 0; %<-- no previous bicluster extracted/scrambled first, no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  n_iteration_stride = 25/2;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string = mr_string;
specification.mc_string = mc_string;
  specification.cl_num = cl_num;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.n_iteration_stride = n_iteration_stride;
  lisa_struct_seek_ver0(specification) ;

  %}

dir_trunk = specification.dir_trunk;
dir_code = specification.dir_code;
mr_string = specification.mr_string;
mc_string = specification.mc_string;
cl_num = specification.cl_num;
flag_dex_vs_lak = specification.flag_dex_vs_lak;
gamma = specification.gamma;
B_MLT = specification.B_MLT;
n_mds = specification.n_mds;
flag_reverse = specification.flag_reverse;
n_maf = specification.n_maf;
n_cov = specification.n_cov;
n_scramble = specification.n_scramble;
n_shuffle = specification.n_shuffle;
flag_rerun = specification.flag_rerun;
n_iteration_stride = specification.n_iteration_stride;

%%%%%%%%;
lisa = lisa_struct_make_ver0(mr_string,mc_string,cl_num,flag_dex_vs_lak,gamma,B_MLT,n_mds,flag_reverse,n_maf,n_cov,n_scramble,n_shuffle) ;
lisa = lisa_struct_prefix_ver0(lisa,dir_code,dir_trunk); 
lisa.nshuffle = 0;  lisa = lisa_struct_names_ver0(lisa); 
lisa = lisa_struct_xdrop_ver0(lisa); lisa = lisa_struct_mdsfam_ver0(lisa); 
lisa = lisa_struct_bim_ver0(lisa); %<-- this is large and takes a while to load. ;
lisa = lisa_struct_mx_ver0(lisa); lisa = lisa_struct_studyindex_ver0(lisa); 
lisa = lisa_struct_trace_ver0(lisa);
%%%%%%%%;

lisa.dir_out_s0_seek = sprintf('%s/dir_seek',lisa.dir_out_s0);
if (~exist(lisa.dir_out_s0_seek,'dir')); disp(sprintf(' %% mkdir %s',lisa.dir_out_s0_seek)); mkdir(lisa.dir_out_s0_seek); end;
lisa.dir_out_s0_seek_jpg = sprintf('%s/dir_jpg',lisa.dir_out_s0_seek);
if (~exist(lisa.dir_out_s0_seek_jpg,'dir')); disp(sprintf(' %% creating %s',lisa.dir_out_s0_seek_jpg)); mkdir(lisa.dir_out_s0_seek_jpg); end;
n_iteration = lisa.n_iteration;
niteration_ = round(0:n_iteration_stride:n_iteration); 
niteration_(1)=1; niteration_(end) = min(niteration_(end),n_iteration-1);
niteration_ = niteration_(length(niteration_):-1:1);

%%%%%%%%;
% generate .assoc files for each niteration. ;
%%%%%%%%;
for ni=1:length(niteration_);
niteration = niteration_(ni);
cdrop_rem_ = lisa.cdrop_a_(end-lisa.c_rem_(niteration)+1:end);
rdrop_rem_ = lisa.rdrop_a_(end-lisa.r_rem_(niteration)+1:end);
disp(sprintf(' %% niteration %d cdrop_rem %d',niteration,length(cdrop_rem_)));
cdrop_SNP_ = lisa.bim_{1}(cdrop_rem_);
[~,tmp_SNP_ij] = unique(cdrop_SNP_);
fname_prefix = sprintf('%s/%s_ni%.3d',lisa.dir_out_s0_seek,lisa.string_name_s0,niteration);
fname_cdrop = sprintf('%s.assoc',fname_prefix);
if ( exist(fname_cdrop,'file')); disp(sprintf(' %% found %s',fname_cdrop)); end;
if (~exist(fname_cdrop,'file')); disp(sprintf(' %% did not find %s, creating...',fname_cdrop));
disp(sprintf(' %% writing to %s',fname_cdrop));
fid = fopen(fname_cdrop,'w');
fprintf(fid,'%s\n','SNP');
for nc=1:length(tmp_SNP_ij);
fprintf(fid,'%s\n',cdrop_SNP_{tmp_SNP_ij(nc)});
end;%for nc=1:length(tmp_SNP_ij);
fclose(fid);
end;%if (~exist(fname_cdrop,'file'));
end;%for ni=1:length(niteration_);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% generate seek output for each niteration. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%;
% load library. ;
%%%%%%%%;
fname_mat = '/data/rangan/dir_bcc/dir_PGC_20190328/dir_misc/bip_all_bim_uniq_38_annotat_35_10.genes.annot.mat';
load(fname_mat);
for ni=1:length(niteration_);
niteration = niteration_(ni);
%%%%%%%%;
% load rs. ;
%%%%%%%%;
fname = sprintf('%s/%s_ni%.3d.assoc',lisa.dir_out_s0_seek,lisa.string_name_s0,niteration);
fid = fopen(fname,'r'); 
tmp_ = textscan(fid,'%s\n','headerlines',1);
fclose(fid);
tmp_rs_ = tmp_{1};
%%%%%%%%;
% index into library. ;
%%%%%%%%;
[~,tmp_ij_,~] =  intersect(rs_sort_,tmp_rs_,'stable');
%%%%%%%%;
% calculate length of EZ list. ;
%%%%%%%%;
n_EZ = 0;
for nrs=1:length(tmp_ij_);
tmp_len = length(EZ__{tmp_ij_(nrs)});
n_EZ = n_EZ + tmp_len;
end;%for nrs=1:length(tmp_ij_);
%%%%%%%%;
% generate EZ list. ;
%%%%%%%%;
EZ_list_ = cell(n_EZ,1);
nEZ = 0;
for nrs=1:length(tmp_ij_);
tmp_len = length(EZ__{tmp_ij_(nrs)});
for nll=1:tmp_len;
nEZ = nEZ + 1;
EZ_list_{nEZ} = EZ__{tmp_ij_(nrs)}{nll};
end;%for nll=1:tmp_len;
end;%for nrs=1:length(tmp_ij_);
EZ_unique_ = unique(EZ_list_);
%%%%%%%%;
% write EZ unique to file. ;
%%%%%%%%;
fname_EZ = sprintf('%s/%s_ni%.3d.EZ2',lisa.dir_out_s0_seek,lisa.string_name_s0,niteration);
fid = fopen(fname_EZ,'w');
for nEZ=1:length(EZ_unique_);
fprintf(fid,'%s\n',EZ_unique_{nEZ});
end;%for nEZ=1:length(EZ_unique_);
fclose(fid);
%%%%%%%%;
% Now run: ;
%%%%%%%%;
%{
cd /data/rangan/dir_bcc/dir_seek_072916/;
bash;
source init.sh ;
javac src/seek/?*.java ;
%}
%for str_go = {'go_bp_iea','go_bp','go_cp_iea','go_cp','go_mf_iea','go_mf','kegg'};
for str_go = {'go_bp'};
fname_EZ_out = sprintf('%s.%s.out',fname_EZ,str_go{1});
disp(sprintf('java seek.GeneEnrichment -d /data/rangan/dir_bcc/dir_seek_072916/data/ -i %s -s %s -t %d > %s;',fname_EZ,str_go{1},wc_0(fname_EZ),fname_EZ_out));
end;%for str_go;
end;%for ni=1:length(niteration_);


%%%%%%%%;
% Now collect: ;
%%%%%%%%;
%tmp_str = ' tar cfvz /data/rangan/dir_bcc/dir_PGC_20190328/test_seek_20190101.tar.gz ';
%for str_go = {'go_bp_iea','go_bp','go_cp_iea','go_cp','go_mf_iea','go_mf','kegg'};
%fname_EZ_out = sprintf('%s.%s.out',fname_EZ,str_go{1});
%tmp_str = sprintf('%s %s',tmp_str,fname_EZ_out);
%end;%for str_go;
%tmp_str = sprintf('%s ;\n',tmp_str);
%disp(tmp_str);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
