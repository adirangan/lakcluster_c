function [lisa_arm1,lisa_arm2] = lisa_struct_pca_migrate_ver0(specification) ;
%{

  %%%%%%%%;
  % Basic run. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  for cl_num_arm1 = 1:4;%cl_num_arm1 = 4; %<-- train on platform 4, ;
  cl_num_arm2 = 1; %<-- replicate on platform 1. ;
  cl_num_arm1_mc_A = []; cl_num_arm1_mr_A_full_ = []; cl_num_arm1_mr_Z_full_ = []; cl_num_arm1_string = []; 
  cl_num_arm2_mc_A = []; cl_num_arm2_mr_A_full_ = []; cl_num_arm2_mr_Z_full_ = []; cl_num_arm2_string = []; 
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; 
  mr_string_arm1 = '';mc_string_arm1 = ''; mr_string_arm2 = '';mc_string_arm2 = ''; %No special mc_string. ;
  %mr_string_arm1 = 'BDX';mc_string_arm1 = 'BDX'; mr_string_arm2 = 'BDX';mc_string_arm2 = 'BDX'; %No special mc_string. ;
  for n_maf = [1,6,4,5]; %n_maf = 5; %<-- minor-allele-frequency cutoff 25-50;
  n_cov = 2; %<-- 2 covariates (mds-components) used, repeated twice. ;
  for n_scramble = 0:1; %<-- no previous bicluster extracted/scrambled first ;
  n_shuffle = 0; %<-- no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
  n_iteration_stride = 25/2;
  for flag_reverse = [0:1];%for flag_reverse = 0:1;
  for cl_num_arm2 = 1:4;%for cl_num_arm2 = 1:4;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string_arm1 = mr_string_arm1;
  specification.mc_string_arm1 = mc_string_arm1;
  specification.mr_string_arm2 = mr_string_arm2;
  specification.mc_string_arm2 = mc_string_arm2;
  specification.cl_num_arm1 = cl_num_arm1;
  specification.cl_num_arm1_mc_A = cl_num_arm1_mc_A;
  specification.cl_num_arm1_mr_A_full_ = cl_num_arm1_mr_A_full_;
  specification.cl_num_arm1_mr_Z_full_ = cl_num_arm1_mr_Z_full_;
  specification.cl_num_arm1_string = cl_num_arm1_string;
  specification.cl_num_arm2 = cl_num_arm2;
  specification.cl_num_arm2_mc_A = cl_num_arm2_mc_A;
  specification.cl_num_arm2_mr_A_full_ = cl_num_arm2_mr_A_full_;
  specification.cl_num_arm2_mr_Z_full_ = cl_num_arm2_mr_Z_full_;
  specification.cl_num_arm2_string = cl_num_arm2_string;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.pca_b_mlt = pca_b_mlt;
  specification.pca_tolerance = pca_tolerance;
  specification.pca_rank = pca_rank;
  specification.n_iteration_stride = n_iteration_stride;
  try; lisa_struct_pca_migrate_ver0(specification) ; catch; end;%try;
  end;%for cl_num_arm2 = 1:4;
  end;%for flag_reverse = 0:1;
  end;%for n_scramble = 0:1; %<-- no previous bicluster extracted/scrambled first ;
  end;%for n_maf = [1,4,5,6]; %n_maf = 5; %<-- minor-allele-frequency cutoff 25-50;
  end;%for cl_num_arm1 = 1:4;%cl_num_arm1 = 4; %<-- train on platform 4, ;

  %%%%%%%%;
  % exclude some columns from cl1. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  tmpchar_cap = sprintf('%s/dir_misc/p25_cap_cl%d_cl%d_mc_A_.b16',dir_trunk,1,2);
  tmp_mc_A_ = (tutorial_binary_uncompress(tmpchar_cap)>0);
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  cl_num_arm1 = 4; cl_num_arm2 = 1; %<-- train on platform 4, replicate on platform 1. ;
  cl_num_arm1_mc_A = []; cl_num_arm1_mr_A_full_ = []; cl_num_arm1_mr_Z_full_ = []; cl_num_arm1_string = []; 
  cl_num_arm2_mc_A = tmp_mc_A_; cl_num_arm2_mr_A_full_ = []; cl_num_arm2_mr_Z_full_ = []; cl_num_arm2_string = 'cap2'; 
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; mr_string_arm1 = '';mc_string_arm1 = ''; mr_string_arm2 = '';mc_string_arm2 = ''; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; No special mc_string. ;
  n_maf = 5; n_cov = 2; %<-- minor-allele-frequency cutoff 25-50, 2 covariates (mds-components) used, repeated twice. ;
  n_scramble = 0; n_shuffle = 0; %<-- no previous bicluster extracted/scrambled first, no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
  n_iteration_stride = 25/2;
  for flag_reverse = 0;
  for cl_num_arm2 = 1;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string_arm1 = mr_string_arm1;
  specification.mc_string_arm1 = mc_string_arm1;
  specification.mr_string_arm2 = mr_string_arm2;
  specification.mc_string_arm2 = mc_string_arm2;
  specification.cl_num_arm1 = cl_num_arm1;
  specification.cl_num_arm1_mc_A = cl_num_arm1_mc_A;
  specification.cl_num_arm1_mr_A_full_ = cl_num_arm1_mr_A_full_;
  specification.cl_num_arm1_mr_Z_full_ = cl_num_arm1_mr_Z_full_;
  specification.cl_num_arm1_string = cl_num_arm1_string;
  specification.cl_num_arm2 = cl_num_arm2;
  specification.cl_num_arm2_mc_A = cl_num_arm2_mc_A;
  specification.cl_num_arm2_mr_A_full_ = cl_num_arm2_mr_A_full_;
  specification.cl_num_arm2_mr_Z_full_ = cl_num_arm2_mr_Z_full_;
  specification.cl_num_arm2_string = cl_num_arm2_string;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.pca_b_mlt = pca_b_mlt;
  specification.pca_tolerance = pca_tolerance;
  specification.pca_rank = pca_rank;
  specification.n_iteration_stride = n_iteration_stride;
  lisa_struct_pca_migrate_ver0(specification) ;
  end;%for cl_num_arm2 = 1:4;
  end;%for flag_reverse = 0:1;

  %%%%%%%%;
  % BX1. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  cl_num_arm1 = 1; cl_num_arm2 = 4; %<-- train on platform 4, replicate on platform 1. ;
  cl_num_arm1_mc_A = []; cl_num_arm1_mr_A_full_ = []; cl_num_arm1_mr_Z_full_ = []; cl_num_arm1_string = []; 
  cl_num_arm2_mc_A = []; cl_num_arm2_mr_A_full_ = []; cl_num_arm2_mr_Z_full_ = []; cl_num_arm2_string = []; 
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; mr_string_arm1 = '';mc_string_arm1 = ''; mr_string_arm2 = '';mc_string_arm2 = ''; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; No special mc_string. ;
  n_maf = 5; n_cov = 2; %<-- minor-allele-frequency cutoff 25-50, 2 covariates (mds-components) used, repeated twice. ;
  n_scramble = 0; n_shuffle = 0; %<-- no previous bicluster extracted/scrambled first, no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
  n_iteration_stride = 25/2;
  mr_string_arm1 = 'BX1'; mc_string_arm1 = 'BX1';
  mr_string_arm2 = ''; mc_string_arm2 = '';
  for flag_reverse = 1;%for flag_reverse = 0:1;
  for cl_num_arm2 = 1:4;%for cl_num_arm2 = 1:4;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string_arm1 = mr_string_arm1;
  specification.mc_string_arm1 = mc_string_arm1;
  specification.mr_string_arm2 = mr_string_arm2;
  specification.mc_string_arm2 = mc_string_arm2;
  specification.cl_num_arm1 = cl_num_arm1;
  specification.cl_num_arm1_mc_A = cl_num_arm1_mc_A;
  specification.cl_num_arm1_mr_A_full_ = cl_num_arm1_mr_A_full_;
  specification.cl_num_arm1_mr_Z_full_ = cl_num_arm1_mr_Z_full_;
  specification.cl_num_arm1_string = cl_num_arm1_string;
  specification.cl_num_arm2 = cl_num_arm2;
  specification.cl_num_arm2_mc_A = cl_num_arm2_mc_A;
  specification.cl_num_arm2_mr_A_full_ = cl_num_arm2_mr_A_full_;
  specification.cl_num_arm2_mr_Z_full_ = cl_num_arm2_mr_Z_full_;
  specification.cl_num_arm2_string = cl_num_arm2_string;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.pca_b_mlt = pca_b_mlt;
  specification.pca_tolerance = pca_tolerance;
  specification.pca_rank = pca_rank;
  specification.n_iteration_stride = n_iteration_stride;
  lisa_struct_pca_migrate_ver0(specification) ;
  end;%for cl_num_arm2 = 1:4;
  end;%for flag_reverse = 0:1;

  %%%%%%%%;
  % BDX. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  cl_num_arm1 = 1; cl_num_arm2 = 4; %<-- train on platform 4, replicate on platform 1. ;
  cl_num_arm1_mc_A = []; cl_num_arm1_mr_A_full_ = []; cl_num_arm1_mr_Z_full_ = []; cl_num_arm1_string = []; 
  cl_num_arm2_mc_A = []; cl_num_arm2_mr_A_full_ = []; cl_num_arm2_mr_Z_full_ = []; cl_num_arm2_string = []; 
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; mr_string_arm1 = '';mc_string_arm1 = ''; mr_string_arm2 = '';mc_string_arm2 = ''; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; No special mc_string. ;
  n_maf = 5; %<-- minor-allele-frequency cutoff 25-50;
  n_cov = 2; %<-- covariates (mds-components) used, repeated twice. ;
  n_scramble = 0; n_shuffle = 0; %<-- no previous bicluster extracted/scrambled first, no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
  n_iteration_stride = 25/2;
  mr_string_arm1 = 'BDX'; mc_string_arm1 = 'BDX';
  mr_string_arm2 = 'BDX'; mc_string_arm2 = 'BDX';
  for flag_reverse = [0:1];%for flag_reverse = 0:1;
  for cl_num_arm2 = 4;%for cl_num_arm2 = 1:4;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string_arm1 = mr_string_arm1;
  specification.mc_string_arm1 = mc_string_arm1;
  specification.mr_string_arm2 = mr_string_arm2;
  specification.mc_string_arm2 = mc_string_arm2;
  specification.cl_num_arm1 = cl_num_arm1;
  specification.cl_num_arm1_mc_A = cl_num_arm1_mc_A;
  specification.cl_num_arm1_mr_A_full_ = cl_num_arm1_mr_A_full_;
  specification.cl_num_arm1_mr_Z_full_ = cl_num_arm1_mr_Z_full_;
  specification.cl_num_arm1_string = cl_num_arm1_string;
  specification.cl_num_arm2 = cl_num_arm2;
  specification.cl_num_arm2_mc_A = cl_num_arm2_mc_A;
  specification.cl_num_arm2_mr_A_full_ = cl_num_arm2_mr_A_full_;
  specification.cl_num_arm2_mr_Z_full_ = cl_num_arm2_mr_Z_full_;
  specification.cl_num_arm2_string = cl_num_arm2_string;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.pca_b_mlt = pca_b_mlt;
  specification.pca_tolerance = pca_tolerance;
  specification.pca_rank = pca_rank;
  specification.n_iteration_stride = n_iteration_stride;
  lisa_struct_pca_migrate_ver0(specification) ;
  end;%for cl_num_arm2 = 1:4;
  end;%for flag_reverse = 0:1;

 %}

dir_trunk = specification.dir_trunk;
dir_code = specification.dir_code;
mr_string_arm1 = specification.mr_string_arm1;
mc_string_arm1 = specification.mc_string_arm1;
cl_num_arm1 = specification.cl_num_arm1;
cl_num_arm1_mc_A = specification.cl_num_arm1_mc_A;
cl_num_arm1_mr_A_full_ = specification.cl_num_arm1_mr_A_full_;
cl_num_arm1_mr_Z_full_ = specification.cl_num_arm1_mr_Z_full_;
cl_num_arm1_string = specification.cl_num_arm1_string;
mr_string_arm2 = specification.mr_string_arm2;
mc_string_arm2 = specification.mc_string_arm2;
cl_num_arm2 = specification.cl_num_arm2;
cl_num_arm2_mc_A = specification.cl_num_arm2_mc_A;
cl_num_arm2_mr_A_full_ = specification.cl_num_arm2_mr_A_full_;
cl_num_arm2_mr_Z_full_ = specification.cl_num_arm2_mr_Z_full_;
cl_num_arm2_string = specification.cl_num_arm2_string;
flag_dex_vs_lak = specification.flag_dex_vs_lak;
gamma = specification.gamma;
B_MLT = specification.B_MLT;
n_mds = specification.n_mds;
flag_reverse = specification.flag_reverse;
n_maf = specification.n_maf;
n_cov = specification.n_cov;
n_scramble = specification.n_scramble;
n_shuffle = specification.n_shuffle;
flag_rerun = specification.flag_rerun;
pca_b_mlt = specification.pca_b_mlt;
pca_tolerance = specification.pca_tolerance;
pca_rank = specification.pca_rank;
n_iteration_stride = specification.n_iteration_stride;

%%%%%%%%;
lisa_arm1 = lisa_struct_make_ver0(mr_string_arm1,mc_string_arm1,cl_num_arm1,flag_dex_vs_lak,gamma,B_MLT,n_mds,flag_reverse,n_maf,n_cov,n_scramble,n_shuffle) ;
lisa_arm1 = lisa_struct_prefix_ver0(lisa_arm1,dir_code,dir_trunk); 
lisa_arm1.nshuffle = 0;  lisa_arm1 = lisa_struct_names_ver0(lisa_arm1); 
lisa_arm1 = lisa_struct_xdrop_ver0(lisa_arm1); lisa_arm1 = lisa_struct_mdsfam_ver0(lisa_arm1); 
%lisa_arm1 = lisa_struct_bim_ver0(lisa_arm1); %<-- this is large and takes a while to load. ;
lisa_arm1 = lisa_struct_mx_ver0(lisa_arm1); lisa_arm1 = lisa_struct_studyindex_ver0(lisa_arm1); 
lisa_arm1 = lisa_struct_trace_ver0(lisa_arm1);
%%%%%%%%;
lisa_arm2 = lisa_struct_make_ver0(mr_string_arm2,mc_string_arm2,cl_num_arm2,flag_dex_vs_lak,gamma,B_MLT,n_mds,flag_reverse,n_maf,n_cov,0,n_shuffle) ;
lisa_arm2 = lisa_struct_prefix_ver0(lisa_arm2,dir_code,dir_trunk); 
lisa_arm2.nshuffle = 0;  lisa_arm2 = lisa_struct_names_ver0(lisa_arm2); 
lisa_arm2 = lisa_struct_xdrop_ver0(lisa_arm2); lisa_arm2 = lisa_struct_mdsfam_ver0(lisa_arm2); 
%lisa_arm2 = lisa_struct_bim_ver0(lisa_arm2); %<-- this is large and takes a while to load. ;
lisa_arm2 = lisa_struct_mx_ver0(lisa_arm2); lisa_arm2 = lisa_struct_studyindex_ver0(lisa_arm2); 
lisa_arm2 = lisa_struct_trace_ver0(lisa_arm2);
%%%%%%%%;

lisa_arm1.dir_out_s0_pca = sprintf('%s/dir_pca_trn%d%s_tst%d%s',lisa_arm1.dir_out_s0,lisa_arm1.cl_num,cl_num_arm1_string,lisa_arm2.cl_num,cl_num_arm2_string);
if (~exist(lisa_arm1.dir_out_s0_pca,'dir')); disp(sprintf(' %% mkdir %s',lisa_arm1.dir_out_s0_pca)); mkdir(lisa_arm1.dir_out_s0_pca); end;

lisa_arm1.dir_out_s0_pca_jpg_old = sprintf('%s/dir_jpg',lisa_arm1.dir_out_s0_pca);
lisa_arm1.dir_out_s0_pca_jpg_new = sprintf('%s/dir_pca_jpg',lisa_arm1.dir_out_s0_pca);
if (~exist(lisa_arm1.dir_out_s0_pca_jpg_new,'dir')); 
disp(sprintf(' %% moving %s %s',lisa_arm1.dir_out_s0_pca_jpg_old,lisa_arm1.dir_out_s0_pca_jpg_new)); 
str_cmd = sprintf(' mv %s %s;\n',lisa_arm1.dir_out_s0_pca_jpg_old,lisa_arm1.dir_out_s0_pca_jpg_new);
disp(str_cmd);
system(str_cmd);
 else;
disp(sprintf(' %% found %s',lisa_arm1.dir_out_s0_pca_jpg_new));
end;%if (~exist(lisa_arm1.dir_out_s0_pca_jpg_new,'dir')); 

lisa_arm1.dir_out_s0_pca_jpg = sprintf('%s/dir_pca_jpg',lisa_arm1.dir_out_s0_pca);
if (~exist(lisa_arm1.dir_out_s0_pca_jpg,'dir')); disp(sprintf(' %% mkdir %s',lisa_arm1.dir_out_s0_pca_jpg)); mkdir(lisa_arm1.dir_out_s0_pca_jpg); end;
disp(sprintf(' %% moving %s %s',lisa_arm1.dir_out_s0_pca_jpg_old,lisa_arm1.dir_out_s0_pca_jpg_new)); 
str_cmd = sprintf(' mv %s/*.jpg %s/;\n',lisa_arm1.dir_out_s0_pca_jpg_old,lisa_arm1.dir_out_s0_pca_jpg_new);
disp(str_cmd);
system(str_cmd);

lisa_arm1.dir_out_s0_prs_mat = sprintf('%s/dir_prs_mat',lisa_arm1.dir_out_s0_pca);
if (~exist(lisa_arm1.dir_out_s0_prs_mat,'dir')); disp(sprintf(' %% mkdir %s',lisa_arm1.dir_out_s0_prs_mat)); mkdir(lisa_arm1.dir_out_s0_prs_mat);
 else;
disp(sprintf(' %% found %s',lisa_arm1.dir_out_s0_prs_mat));
end;%if (~exist(lisa_arm1.dir_out_s0_prs_mat,'dir'));
disp(sprintf(' %% moving prs*.mat into %s',lisa_arm1.dir_out_s0_prs_mat));
str_cmd = sprintf(' mv %s/prs*.mat %s;\n',lisa_arm1.dir_out_s0_pca,lisa_arm1.dir_out_s0_prs_mat);
disp(str_cmd);
system(str_cmd);

lisa_arm1.dir_out_s0_pca_b16 = sprintf('%s/dir_pca_b16',lisa_arm1.dir_out_s0_pca);
if (~exist(lisa_arm1.dir_out_s0_pca_b16,'dir')); disp(sprintf(' %% mkdir %s',lisa_arm1.dir_out_s0_pca_b16)); mkdir(lisa_arm1.dir_out_s0_pca_b16);
 else;
disp(sprintf(' %% found %s',lisa_arm1.dir_out_s0_pca_b16));
end;%if (~exist(lisa_arm1.dir_out_s0_pca_b16,'dir'));
disp(sprintf(' %% moving *.b16 into %s',lisa_arm1.dir_out_s0_pca_b16));
str_cmd = sprintf(' mv %s/*.b16 %s;\n',lisa_arm1.dir_out_s0_pca,lisa_arm1.dir_out_s0_pca_b16);
disp(str_cmd);
system(str_cmd);

lisa_arm1.dir_out_s0_pca_inp = sprintf('%s/dir_pca_inp',lisa_arm1.dir_out_s0_pca);
if (~exist(lisa_arm1.dir_out_s0_pca_inp,'dir')); disp(sprintf(' %% mkdir %s',lisa_arm1.dir_out_s0_pca_inp)); mkdir(lisa_arm1.dir_out_s0_pca_inp);
 else;
disp(sprintf(' %% found %s',lisa_arm1.dir_out_s0_pca_inp));
end;%if (~exist(lisa_arm1.dir_out_s0_pca_inp,'dir'));
disp(sprintf(' %% moving *.in into %s',lisa_arm1.dir_out_s0_pca_inp));
str_cmd = sprintf(' mv %s/*.in %s;\n',lisa_arm1.dir_out_s0_pca,lisa_arm1.dir_out_s0_pca_inp);
disp(str_cmd);
system(str_cmd);

lisa_arm1.dir_out_s0_pca_mda = sprintf('%s/dir_pca_mda',lisa_arm1.dir_out_s0_pca);
if (~exist(lisa_arm1.dir_out_s0_pca_mda,'dir')); disp(sprintf(' %% mkdir %s',lisa_arm1.dir_out_s0_pca_mda)); mkdir(lisa_arm1.dir_out_s0_pca_mda);
 else;
disp(sprintf(' %% found %s',lisa_arm1.dir_out_s0_pca_mda));
end;%if (~exist(lisa_arm1.dir_out_s0_pca_mda,'dir'));
disp(sprintf(' %% moving *.mda into %s',lisa_arm1.dir_out_s0_pca_mda));
str_cmd = sprintf(' mv %s/*.mda %s;\n',lisa_arm1.dir_out_s0_pca,lisa_arm1.dir_out_s0_pca_mda);
disp(str_cmd);
system(str_cmd);

lisa_arm1.dir_out_s0_pca_mat = sprintf('%s/dir_pca_mat',lisa_arm1.dir_out_s0_pca);
if (~exist(lisa_arm1.dir_out_s0_pca_mat,'dir')); disp(sprintf(' %% mkdir %s',lisa_arm1.dir_out_s0_pca_mat)); mkdir(lisa_arm1.dir_out_s0_pca_mat);
 else;
disp(sprintf(' %% found %s',lisa_arm1.dir_out_s0_pca_mat));
end;%if (~exist(lisa_arm1.dir_out_s0_pca_mat,'dir'));
disp(sprintf(' %% moving *.mat into %s',lisa_arm1.dir_out_s0_pca_mat));
str_cmd = sprintf(' mv %s/*.mat %s;\n',lisa_arm1.dir_out_s0_pca,lisa_arm1.dir_out_s0_pca_mat);
disp(str_cmd);
system(str_cmd);



