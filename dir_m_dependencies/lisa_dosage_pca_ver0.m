% Note the following asymmetry regarding sparse matrices: ;
% summing over columns is *much* faster than summing over rows. ;
% (i.e., about 25 times faster for the example below). ;
%{
tmp_N = 1024*8;
tmp_ = sparse(randperm(tmp_N),randperm(tmp_N),1,tmp_N,tmp_N);
disp('sum(*,2)'); tic;for nl=1:1024;sum(tmp_(:,max(1,min(tmp_N,floor(tmp_N*rand())))),2); end;toc;
disp('sum(*,1)'); tic;for nl=1:1024;sum(tmp_(max(1,min(tmp_N,floor(tmp_N*rand()))),:),1); end;toc;
 %}

clear; verbose=1; 
cl_num_arm1 = 4; cl_num_arm2 = 1;
flag_dex_vs_lak = 'dex'; if (strcmp(flag_dex_vs_lak,'lak')); gamma = 0.001; mc_string = ''; else; gamma = 0.004; mc_string = ''; end; 
flag_reverse_use = 0;
B_MLT=34;n_mds=20;
pca_rank = 2; pca_b_mlt = 44;
set(groot,'defaultFigureCreateFcn',@(fig,~)addToolbarExplorationButtons(fig));
set(groot,'defaultAxesCreateFcn',@(ax,~)set(ax.Toolbar,'Visible','off'));
addpath('/data/rangan/dir_bcc/dir_code_022316');
addpath('/data/rangan/dir_bcc/dir_PGC_20180304/dir_m');
dir_trunk = '/data/rangan/dir_bcc/dir_PGC_20180304';
%%%%%%%%;
verbose = 1; n_figure = 1;
B_MLT = 34; n_mds = 20; n_scramble = 1; n_shuffle = 0;
flag_dex_vs_lak = {'dex'};
if (strcmp(flag_dex_vs_lak{1},'dex')); gamma = 0.004; mc_string = ''; end; 
if (strcmp(flag_dex_vs_lak{1},'lak')); gamma = 0.001; mc_string = 'm20_p85'; end;
flag_reverse = flag_reverse_use;
cl_num = cl_num_arm1;
n_maf = 5; n_cov = 2;
%%%%%%%%;
lisa_setprefix_ver2 ;
lisa_setnames_ver2 ;
lisa_xdropextract_ver2 ;
lisa_loadmdsfambim_ver2 ;
lisa_mxcheck_ver2 ;
lisa_studyindex_ver2 ;
lisa_traceextract_ver2 ;
%%%%%%%%;
bim_arm1_ = bim_;
fam_arm1_ = fam_;
fam_name_arm1_ = fam_name_;
mds_sort_arm1_ = mds_sort_;
string_prefix_arm1 = string_prefix;
%string_name_arm1 = string_name;
string_name_r1_arm1 = string_name;
string_name_r0_arm1 = string_name_r0;
dir__in_arm1 = dir__in;
%dir_out_s0000_arm1 = dir_out_s0000;
dir_out_s0000_r1_arm1 = dir_out_s0000;
dir_out_s0000_r0_arm1 = dir_out_s0000_r0;
%dir_out_trace_arm1 = dir_out_trace;
dir_out_trace_r1_arm1 = dir_out_trace;
dir_out_trace_r0_arm1 = dir_out_trace_r0;
trace_r1_arm1_ = trace_;
%%%%%%%%;
clear bim_ fam_ mds_sort_ mds_;
%%%%%%%%;
verbose = 1;
B_MLT = 34; n_mds = 20; n_scramble = 1; n_shuffle = 0;
flag_dex_vs_lak = {'dex'};
if (strcmp(flag_dex_vs_lak{1},'dex')); gamma = 0.004; mc_string = ''; end; 
if (strcmp(flag_dex_vs_lak{1},'lak')); gamma = 0.001; mc_string = 'm20_p85'; end;
flag_reverse = flag_reverse_use;
cl_num = cl_num_arm2;
n_maf = 5; n_cov = 2;
%%%%%%%%;
lisa_setprefix_ver2 ;
lisa_setnames_ver2 ;
lisa_xdropextract_ver2 ;
lisa_loadmdsfambim_ver2 ;
lisa_mxcheck_ver2 ;
lisa_studyindex_ver2 ;
lisa_traceextract_ver2 ;
%%%%%%%%;
study_trunk_arm2_ = study_trunk_;
study_name_arm2_ = study_name_;
n_study_arm2 = n_study;
bim_arm2_ = bim_;
fam_arm2_ = fam_;
fam_name_arm2_ = fam_name_;
mds_sort_arm2_ = mds_sort_;
string_prefix_arm2 = string_prefix;
%string_name_arm2 = string_name;
string_name_r1_arm2 = string_name;
string_name_r0_arm2 = string_name_r0;
dir__in_arm2 = dir__in;
%dir_out_s0000_arm2 = dir_out_s0000;
dir_out_s0000_r1_arm2 = dir_out_s0000;
dir_out_s0000_r0_arm2 = dir_out_s0000_r0;
%dir_out_trace_arm2 = dir_out_trace;
dir_out_trace_r1_arm2 = dir_out_trace;
dir_out_trace_r0_arm2 = dir_out_trace_r0;
trace_r1_arm2_ = trace_;
%%%%%%%%;
clear bim_ fam_ mds_sort_ mds_;
%%%%%%%%;

%%%%%%%%%%%%%%%%;
% copy fam file. ;
%%%%%%%%%%%%%%%%;
ni=1;
fam_fam_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_iid_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_pat_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_mat_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_sex_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_phe_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_dir_arm1_ = fam_arm1_{ni}; ni=ni+1;
%%%%%%%%%%%%%%%%;
% extract mc;
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_D_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_X_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_D_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_X_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==1);
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
disp(sprintf('mr_D_arm1_ error: %0.16f',norm(cast(mr_D_arm1_,'double')-cast(fam_phe_arm1_==2,'double'))));
disp(sprintf('mr_X_arm1_ error: %0.16f',norm(cast(mr_X_arm1_,'double')-cast(fam_phe_arm1_==1,'double'))));
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
disp(sprintf('mr_D_arm1_ error: %0.16f',norm(cast(mr_D_arm1_,'double')-cast(fam_phe_arm1_==1,'double'))));
disp(sprintf('mr_X_arm1_ error: %0.16f',norm(cast(mr_X_arm1_,'double')-cast(fam_phe_arm1_==2,'double'))));
end;%if (flag_reverse_use==1);

%%%%%%%%%%%%%%%%;
% copy fam file. ;
%%%%%%%%%%%%%%%%;
ni=1;
fam_fam_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_iid_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_pat_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_mat_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_sex_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_phe_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_dir_arm2_ = fam_arm2_{ni}; ni=ni+1;
%%%%%%%%%%%%%%%%;
% extract mc;
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_D_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_X_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_D_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_X_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==1);
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
disp(sprintf('mr_D_arm2_ error: %0.16f',norm(cast(mr_D_arm2_,'double')-cast(fam_phe_arm2_==2,'double'))));
disp(sprintf('mr_X_arm2_ error: %0.16f',norm(cast(mr_X_arm2_,'double')-cast(fam_phe_arm2_==1,'double'))));
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
disp(sprintf('mr_D_arm2_ error: %0.16f',norm(cast(mr_D_arm2_,'double')-cast(fam_phe_arm2_==1,'double'))));
disp(sprintf('mr_X_arm2_ error: %0.16f',norm(cast(mr_X_arm2_,'double')-cast(fam_phe_arm2_==2,'double'))));
end;%if (flag_reverse_use==1);

dir_out_s0000_pca_r0_arm1 = sprintf('%s/dir_pca',dir_out_s0000_r0_arm1);
if (~exist(dir_out_s0000_pca_r0_arm1,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_r0_arm1)); mkdir(dir_out_s0000_pca_r0_arm1); end;
dir_out_s0000_pca_r1_arm1 = sprintf('%s/dir_pca',dir_out_s0000_r1_arm1);
if (~exist(dir_out_s0000_pca_r1_arm1,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_r1_arm1)); mkdir(dir_out_s0000_pca_r1_arm1); end;

niteration = 275;
%%%%%%%%%%%%%%%%;
%extract rdrop ;
%%%%%%%%%%%%%%%%;
out_xdrop_a_r0_arm1_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r0_arm1));
tmp_ = out_xdrop_a_r0_arm1_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r0_arm1_ = tmp_; clear out_xdrop_a_r0_arm1_; clear tmp_;
out_xdrop_a_r1_arm1_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r1_arm1));
tmp_ = out_xdrop_a_r1_arm1_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r1_arm1_ = tmp_; clear out_xdrop_a_r1_arm1_; clear tmp_;
out_xdrop_a_r0_arm2_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r0_arm2));
tmp_ = out_xdrop_a_r0_arm2_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r0_arm2_ = tmp_; clear out_xdrop_a_r0_arm2_; clear tmp_;
out_xdrop_a_r1_arm2_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r1_arm2));
tmp_ = out_xdrop_a_r1_arm2_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r1_arm2_ = tmp_; clear out_xdrop_a_r1_arm2_; clear tmp_;
%%%%%%%%%%%%%%%%;
%extract trace ;
%%%%%%%%%%%%%%%%;
out_trace_r0_arm1_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r0_arm1));
out_trace_r1_arm1_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r1_arm1));
out_trace_r0_arm2_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r0_arm2));
out_trace_r1_arm2_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r1_arm2));
%%%%%%%%%%%%%%%%;
disp(sprintf(' %% niteration %d',niteration));
%%%%%%%%;
pca_infix_r0_base = sprintf('pca_ni%d_tst%d',niteration,cl_num_arm1);
V_r0_base_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_.mda',dir_out_s0000_pca_r0_arm1,pca_infix_r0_base,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with (all) the snps in arm1, ordered to apply to arm1. ;
pca_infix_r0_arm1 = sprintf('pca_ni%d_tst%d',niteration,cl_num_arm2);
V_r0_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_.mda',dir_out_s0000_pca_r0_arm1,pca_infix_r0_arm1,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with the snps in both arm1 and arm2, ordered to apply to arm1. ;
V_r0_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_arm2_.mda',dir_out_s0000_pca_r0_arm1,pca_infix_r0_arm1,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with the snps in both arm1 and arm2, ordered to apply to arm2. ;
% Note that V_r0_arm1_ and V_r0_arm2_ are simply permutations of one another. ;
% While V_r0_base_ is not a permutation of V_r0_arm1_, these two vectors are quite correlated. ; plot(V_r0_base_(:,1),V_r0_arm1_(:,1),'.') ;
%%%%%%%%;
pca_proj_infix_r0_arm1 = sprintf('pca_proj_arm1_ni%d_tst%d',niteration,cl_num_arm2); %<-- Note that here we use the projection of arm1, with snps limited by overlap with arm two ;
DnV_r0_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_AnV_.mda',dir_out_s0000_pca_r0_arm1,pca_proj_infix_r0_arm1,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_r0 from arm one, since this is where the bicluster is. ;
XnV_r0_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_ZnV_.mda',dir_out_s0000_pca_r0_arm1,pca_proj_infix_r0_arm1,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_r0 from arm one, since this is where the bicluster is. ;
%if (strcmp(flag_dex_vs_lak,'lak')); DnV_r0_arm1_ = abs(DnV_r0_arm1_); XnV_r0_arm1_ = abs(XnV_r0_arm1_); end;%if (strcmp(flag_dex_vs_lak,'lak'));
mr_D_rmv_r0_arm1_ = mr_D_arm1_*0; mr_D_rmv_r0_arm1_(rdrop_a_r0_arm1_(1:end-out_trace_r0_arm1_(niteration,2)))=1;
mr_D_ret_r0_arm1_ = mr_D_arm1_*0; mr_D_ret_r0_arm1_(rdrop_a_r0_arm1_(end-out_trace_r0_arm1_(niteration,2)+1:end))=1;
%%%%%%%%;
pca_proj_infix_r0_arm2 = sprintf('pca_proj_arm2_ni%d_tst%d',niteration,cl_num_arm2); %<-- Note that here we use the projection of arm2, with snps limited by overlap with arm two ;
DnV_r0_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_AnV_.mda',dir_out_s0000_pca_r0_arm1,pca_proj_infix_r0_arm2,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_r0 from arm one, since this is where the bicluster is. ;
XnV_r0_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_ZnV_.mda',dir_out_s0000_pca_r0_arm1,pca_proj_infix_r0_arm2,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_r0 from arm one, since this is where the bicluster is. ;
%if (strcmp(flag_dex_vs_lak,'lak')); DnV_r0_arm2_ = abs(DnV_r0_arm2_); XnV_r0_arm2_ = abs(XnV_r0_arm2_); end;%if (strcmp(flag_dex_vs_lak,'lak'));

%%%%%%%%;
% establish snp-indices for each allelic combination. ;
%%%%%%%%;
b0_ = bim_arm1_{2};
[b1_,b0_to_b1_,b1_to_b0_] = unique(b0_);
b0_by_b1_xref_ = sparse(1:length(b0_),b1_to_b0_,1,length(b0_),length(b1_));
%%%%%%%%;
flag_check=0;
if flag_check;
disp(sprintf(' %% checking b0_by_b1_xref_'));
nb1=max(1,min(length(b1_),floor(length(b1_)*rand())));
disp(sprintf(' %% nb1 %d: b1_{nb1} %s',nb1,b1_{nb1}));
tmp_ij0_ = find(sum(b0_by_b1_xref_(:,nb1),2));
for nl0=1:length(tmp_ij0_);
disp(sprintf(' %% tmp_ij0_(nl0) %d: b0_{tmp_ij0_(nl0)} %s (%s)',tmp_ij0_(nl0),b0_{tmp_ij0_(nl0)},bim_arm1_{7}{tmp_ij0_(nl0)}));
assert(strcmp(b0_{tmp_ij0_(nl0)},b1_{nb1}));
end;%for nl0=1:length(tmp_ij0_);
end;%if flag_check;
%%%%%%%%;
c0_ = find(strcmp(bim_arm1_{7},'and'));
[c1_,c0_to_c1_,c1_to_c0_] = unique(b0_(c0_));
c0_by_c1_xref_ = sparse(1:length(c0_),c1_to_c0_,1,length(c0_),length(c1_));
[d1_,d1_to_b1_,d1_to_c1_] = intersect(b1_,c1_,'stable');
b1_by_d1_xref_ = sparse(d1_to_b1_,1:length(d1_),1,length(b1_),length(d1_));
c1_by_d1_xref_ = sparse(d1_to_c1_,1:length(d1_),1,length(c1_),length(d1_));
V_r0_base_and_ = zeros(length(b1_),2);
for nd1=1:length(d1_);
nb1 = find(sum(b1_by_d1_xref_(:,nd1),2));
nc1 = find(sum(c1_by_d1_xref_(:,nd1),2));
nc0 = find(sum(c0_by_c1_xref_(:,nc1),2));
nb0 = c0_(nc0);
V_r0_base_and_(nb1,:) = V_r0_base_(nb0,:);
end;%for nd1=1:length(d1_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_r0_base_and_'));
nb1=max(1,min(length(b1_),floor(length(b1_)*rand())));
tmp_snp = b1_{nb1};
nb0_and = find(strcmp(b0_,tmp_snp) & strcmp(bim_arm1_{7},'and'));
if ~isempty(nb0_and);
assert(length(intersect(nb0_and,find(sum(b0_by_b1_xref_(:,nb1),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,b0_{nb0_and},bim_arm1_{7}{nb0_and}));
disp(sprintf(' %% V_r0_base_ (%0.6f,%0.6f) , V_r0_base_and_ (%0.6f,%0.6f)',V_r0_base_(nb0_and,:),V_r0_base_and_(nb1,:)));
end;%if ~isempty(nb0_and);
end;%if flag_check;
clear c0_ c1_ c0_to_c1_ c1_to_c0_ d1_ d1_to_b1_ d1_to_c1_ b1_by_d1_xref_ c1_by_d1_xref_ ;
%%%%%%%%;
c0_ = find(strcmp(bim_arm1_{7},'xor'));
[c1_,c0_to_c1_,c1_to_c0_] = unique(b0_(c0_));
c0_by_c1_xref_ = sparse(1:length(c0_),c1_to_c0_,1,length(c0_),length(c1_));
[d1_,d1_to_b1_,d1_to_c1_] = intersect(b1_,c1_,'stable');
b1_by_d1_xref_ = sparse(d1_to_b1_,1:length(d1_),1,length(b1_),length(d1_));
c1_by_d1_xref_ = sparse(d1_to_c1_,1:length(d1_),1,length(c1_),length(d1_));
V_r0_base_xor_ = zeros(length(b1_),2);
for nd1=1:length(d1_);
nb1 = find(sum(b1_by_d1_xref_(:,nd1),2));
nc1 = find(sum(c1_by_d1_xref_(:,nd1),2));
nc0 = find(sum(c0_by_c1_xref_(:,nc1),2));
nb0 = c0_(nc0);
V_r0_base_xor_(nb1,:) = V_r0_base_(nb0,:);
end;%for nd1=1:length(d1_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_r0_base_xor_'));
nb1=max(1,min(length(b1_),floor(length(b1_)*rand())));
tmp_snp = b1_{nb1};
nb0_xor = find(strcmp(b0_,tmp_snp) & strcmp(bim_arm1_{7},'xor'));
if ~isempty(nb0_xor);
assert(length(intersect(nb0_xor,find(sum(b0_by_b1_xref_(:,nb1),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,b0_{nb0_xor},bim_arm1_{7}{nb0_xor}));
disp(sprintf(' %% V_r0_base_ (%0.6f,%0.6f) , V_r0_base_xor_ (%0.6f,%0.6f)',V_r0_base_(nb0_xor,:),V_r0_base_xor_(nb1,:)));
end;%if ~isempty(nb0_xor);
end;%if flag_check;
clear c0_ c1_ c0_to_c1_ c1_to_c0_ d1_ d1_to_b1_ d1_to_c1_ b1_by_d1_xref_ c1_by_d1_xref_ ;
%%%%%%%%;
c0_ = find(strcmp(bim_arm1_{7},'nor'));
[c1_,c0_to_c1_,c1_to_c0_] = unique(b0_(c0_));
c0_by_c1_xref_ = sparse(1:length(c0_),c1_to_c0_,1,length(c0_),length(c1_));
[d1_,d1_to_b1_,d1_to_c1_] = intersect(b1_,c1_,'stable');
b1_by_d1_xref_ = sparse(d1_to_b1_,1:length(d1_),1,length(b1_),length(d1_));
c1_by_d1_xref_ = sparse(d1_to_c1_,1:length(d1_),1,length(c1_),length(d1_));
V_r0_base_nor_ = zeros(length(b1_),2);
for nd1=1:length(d1_);
nb1 = find(sum(b1_by_d1_xref_(:,nd1),2));
nc1 = find(sum(c1_by_d1_xref_(:,nd1),2));
nc0 = find(sum(c0_by_c1_xref_(:,nc1),2));
nb0 = c0_(nc0);
V_r0_base_nor_(nb1,:) = V_r0_base_(nb0,:);
end;%for nd1=1:length(d1_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_r0_base_nor_'));
nb1=max(1,min(length(b1_),floor(length(b1_)*rand())));
tmp_snp = b1_{nb1};
nb0_nor = find(strcmp(b0_,tmp_snp) & strcmp(bim_arm1_{7},'nor'));
if ~isempty(nb0_nor);
assert(length(intersect(nb0_nor,find(sum(b0_by_b1_xref_(:,nb1),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,b0_{nb0_nor},bim_arm1_{7}{nb0_nor}));
disp(sprintf(' %% V_r0_base_ (%0.6f,%0.6f) , V_r0_base_nor_ (%0.6f,%0.6f)',V_r0_base_(nb0_nor,:),V_r0_base_nor_(nb1,:)));
end;%if ~isempty(nb0_nor);
end;%if flag_check;
clear c0_ c1_ c0_to_c1_ c1_to_c0_ d1_ d1_to_b1_ d1_to_c1_ b1_by_d1_xref_ c1_by_d1_xref_ ;
%%%%%%%%;
% Plotting allelic-types against one another. ;
%%%%%%%%;
flag_plot=0;
if flag_plot;
tmp_ij_ = find( ~ ( (V_r0_base_and_(:,1)==0) & (V_r0_base_xor_(:,1)==0) & (V_r0_base_nor_(:,1)==0) ) );
plot3(V_r0_base_and_(tmp_ij_,1),V_r0_base_xor_(tmp_ij_,1),V_r0_base_nor_(tmp_ij_,1),'.');
xlabel('and'); ylabel('xor'); zlabel('nor'); axis vis3d;
end;% if flag_plot;
flag_plot=1;
if flag_plot;
tmp_ij_ = find( ~ ( (V_r0_base_and_(:,1)==0) & (V_r0_base_xor_(:,1)==0) & (V_r0_base_nor_(:,1)==0) ) );
subplot(3,3,1); plot(V_r0_base_and_(tmp_ij_,1),V_r0_base_xor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('xor'); title('and-vs-xor 1');
subplot(3,3,2); plot(V_r0_base_and_(tmp_ij_,1),V_r0_base_nor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('nor'); title('and-vs-nor 1');
subplot(3,3,3); plot(V_r0_base_xor_(tmp_ij_,1),V_r0_base_nor_(tmp_ij_,1),'b.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor 1');
subplot(3,3,4); plot(V_r0_base_and_(tmp_ij_,2),V_r0_base_xor_(tmp_ij_,2),'r.'); xlabel('and'); ylabel('xor'); title('and-vs-xor 2');
subplot(3,3,5); plot(V_r0_base_and_(tmp_ij_,2),V_r0_base_nor_(tmp_ij_,2),'r.'); xlabel('and'); ylabel('nor'); title('and-vs-nor 2');
subplot(3,3,6); plot(V_r0_base_xor_(tmp_ij_,2),V_r0_base_nor_(tmp_ij_,2),'r.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor 2');
subplot(3,3,7); plot(V_r0_base_and_(tmp_ij_,1),V_r0_base_and_(tmp_ij_,2),'g.'); xlabel('and 1'); ylabel('and 2'); title('and 1-vs-2');
subplot(3,3,8); plot(V_r0_base_xor_(tmp_ij_,1),V_r0_base_xor_(tmp_ij_,2),'g.'); xlabel('xor 1'); ylabel('xor 2'); title('xor 1-vs-2');
subplot(3,3,9); plot(V_r0_base_nor_(tmp_ij_,1),V_r0_base_nor_(tmp_ij_,2),'g.'); xlabel('nor 1'); ylabel('nor 2'); title('nor 1-vs-2');
end;% if flag_plot;

% test file. ;
nstudy = 2;
study_name_arm2 = study_name_arm2_{nstudy};
tmp_ij = strfind(study_name_arm2,'bip_');
study_name_arm2_prefix = study_name_arm2(tmp_ij+(4:7));
fname_dosage = sprintf('%s/dir_misc/%s_eur_sr-qc.hg19.ch.fl.out.dosage_%s_out_cdrop_ni%d.out.dosage',dir_trunk,study_name_arm2_prefix,string_name_r0_arm1,niteration);
%fname_dosage = sprintf('%s/dir_misc/%s_eur_sr-qc.hg19.ch.fl.out.dosage_%s_out_cdrop_ni%d.out.dosage.cropped',dir_trunk,study_name_arm2_prefix,string_name_r0_arm1,niteration);
fcheck(fname_dosage);
%tic;[tmp_data_,tmp_varnames_,tmp_casenames_] = tblread(fname_dosage);toc;
n_dosage_snp = wc_0(fname_dosage)-1;

fid = fopen(fname_dosage);
tmp_line_ = fgetl(fid);
tmp_dosage_patient_ = strsplit(tmp_line_);
assert(strcmp(tmp_dosage_patient_{1},'SNP'));
assert(strcmp(tmp_dosage_patient_{2},'A1'));
assert(strcmp(tmp_dosage_patient_{3},'A2'));
n_dosage_patient = floor((length(tmp_dosage_patient_)-3)/2);
dosage_fam_name_ = cell(n_dosage_patient,1);
for ndosage_patient=1:n_dosage_patient;
dosage_fam_name_{ndosage_patient} = sprintf('%s&%s',strtrim(tmp_dosage_patient_{2 + 2*ndosage_patient}),strtrim(tmp_dosage_patient_{3 + 2*ndosage_patient}));
end;%for ndosage_patient=1:n_dosage_patient;
dosage_bim_snp_ = cell(n_dosage_snp,1);
dosage_bim_al1_ = cell(n_dosage_snp,1);
dosage_bim_al2_ = cell(n_dosage_snp,1);
for ndosage_snp=1:n_dosage_snp;
if (mod(ndosage_snp,1000)==0); disp(sprintf(' %% ndosage_snp %d/%d',ndosage_snp,n_dosage_snp)); end;
tmp_line_ = fgetl(fid);
tmp_dosage_snp_ = textscan(tmp_line_,'%s',3);%tmp_dosage_snp_ = strsplit(tmp_line_);
tmp_dosage_snp_ = tmp_dosage_snp_{1};
flag_check=0;
if flag_check;
tmp_ij_ = find(strcmp(bim_arm1_{2},tmp_dosage_snp_{1}));
for nl=1:length(tmp_ij_);
disp(sprintf(' %% found snp %s (%s,%s) <-- bim %s (%c,%c): %s',tmp_dosage_snp_{1},tmp_dosage_snp_{2},tmp_dosage_snp_{3},bim_arm1_{2}{tmp_ij_(nl)},bim_arm1_{5}(tmp_ij_(nl)),bim_arm1_{6}(tmp_ij_(nl)),bim_arm1_{7}{tmp_ij_(nl)}));
end;%for nl=1:length(tmp_ij_);
end;%if flag_check;
dosage_bim_snp_{ndosage_snp} = tmp_dosage_snp_{1};
dosage_bim_al1_{ndosage_snp} = tmp_dosage_snp_{2};
dosage_bim_al2_{ndosage_snp} = tmp_dosage_snp_{3};
end;%for ndosage_snp=1:n_dosage_snp;
fclose(fid);

% c0_ = bim_arm1_snp_ = bim_arm1_{2};
c0_ = bim_arm1_{2};
% c1_ = bim_arm1_snp_uni_ ;
[c1_,c0_to_c1_,c1_to_c0_] = unique(c0_);
c0_by_c1_xref_ = sparse(1:length(c0_),c1_to_c0_,1,length(c0_),length(c1_));
%%%%%%%%;
flag_check=0;
if flag_check;
nl1=max(1,min(length(c1_),floor(length(c1_)*rand())));
disp(sprintf(' %% nl1 %d: c1_{nl1} %s',nl1,c1_{nl1}));
tmp_ij0_ = find(sum(c0_by_c1_xref_(:,nl1),2));
for nl0=1:length(tmp_ij0_);
disp(sprintf(' %% tmp_ij0_(nl0) %d: c0_{tmp_ij0_(nl0)} %s',tmp_ij0_(nl0),c0_{tmp_ij0_(nl0)}));
assert(strcmp(c0_{tmp_ij0_(nl0)},c1_{nl1}));
end;%for nl0=1:length(tmp_ij0_);
end;%if flag_check;
%%%%%%%%;
% c2_ = dosage_bim_snp_ ;
c2_ = dosage_bim_snp_ ; %<-- we assume this is already unique. ;
% c3_ = cap_c2_c1_ ;
[c3_,c3_to_c2_,c3_to_c1_] = intersect(c2_,c1_,'stable'); %<-- c2_ should be entirely contained within c1_. ;
c2_by_c3_xref_ = sparse(c3_to_c2_,1:length(c3_),1,length(c2_),length(c3_)); %<-- this should be the identity. ;
c1_by_c3_xref_ = sparse(c3_to_c1_,1:length(c3_),1,length(c1_),length(c3_));
%%%%%%%%;
flag_check=1;
if flag_check;
nl3=max(1,min(length(c3_),floor(length(c3_)*rand())));
disp(sprintf(' %% nl3 %d: c3_{nl3} %s',nl3,c3_{nl3}));
tmp_ij2_ = find(sum(c2_by_c3_xref_(:,nl3),2));
for nl2=1:length(tmp_ij2_);
disp(sprintf(' %% tmp_ij2_(nl2) %d: c2_{tmp_ij2_(nl2)} %s',tmp_ij2_(nl2),c2_{tmp_ij2_(nl2)}));
assert(strcmp(c2_{tmp_ij2_(nl2)},c3_{nl3}));
end;%for nl2=1:length(tmp_ij2_);
tmp_ij1_ = find(sum(c1_by_c3_xref_(:,nl3),2));
for nl1=1:length(tmp_ij1_);
disp(sprintf(' %% tmp_ij1_(nl1) %d: c1_{tmp_ij1_(nl1)} %s',tmp_ij1_(nl1),c1_{tmp_ij1_(nl1)}));
assert(strcmp(c1_{tmp_ij1_(nl1)},c3_{nl3}));
end;%for nl1=1:length(tmp_ij1_);
tmp_ij0_ = find(sum(c0_by_c1_xref_(:,tmp_ij1_(nl1)),2));
for nl0=1:length(tmp_ij0_);
disp(sprintf(' %% tmp_ij0_(nl0) %d: c0_{tmp_ij0_(nl0)} %s: %s',tmp_ij0_(nl0),c0_{tmp_ij0_(nl0)},bim_{7}{tmp_ij0_(nl0))}));
assert(strcmp(c0_{tmp_ij0_(nl0)},c3_{nl3}));
end;%for nl0=0:length(tmp_ij0_);
end;%if flag_check;


