function [AB_] = test_loader_cluster_C_AB_0(n_iteration,str_CLabel_,C_rank_);
%%%%%%%%;
% For each covariate, we can record the sorted-list of Label-pairs (in AB_.C_AB_*). ;
% We can compare this to the distribution of sorted-lists obtained in a (Label-Label) permutation-test. ;
% Similarly, for each Label-pair, we can record the sorted-list of covariates (in AB_.AB_C_*). ;
% Again, we can compare this to the distribution of sorted-lists obtained in a (Label-Label) permutation-test. ;
%%%%%%%%;
u_CLabel_ = unique(str_CLabel_); n_CLabel = length(u_CLabel_); n_CCOV = size(C_rank_,2);
%%%%%%%%;
n_u = size(C_rank_,1);
%%%%%%%%;
AB_ = struct('n_u',n_u);
AB_.n_u = n_u;
AB_.n_CLabel = n_CLabel;
AB_.n_CCOV = n_CCOV;
%%%%%%%%;
AB_.AB_C_sort_list_ori__ = zeros(n_CLabel,n_CLabel,n_CCOV);
AB_.C_AB_sort_list_ori__ = zeros(n_CLabel.^2,n_CCOV);
AB_.AB_C_sort_list_ij__ = zeros(n_CLabel,n_CLabel,n_CCOV);
AB_.C_AB_sort_list_ij__ = zeros(n_CLabel.^2,n_CCOV);
%%%%%%%%;
AB_.n_iteration = n_iteration;
%%%%%%%%;
AB_.AB_C_sort_list_avg__ = zeros(n_CLabel,n_CLabel,n_CCOV);
AB_.C_AB_sort_list_avg__ = zeros(n_CLabel.^2,n_CCOV);
AB_.AB_C_sort_list_std__ = zeros(n_CLabel,n_CLabel,n_CCOV);
AB_.C_AB_sort_list_std__ = zeros(n_CLabel.^2,n_CCOV);
%%%%%%%%;
AB_.AB_C_sort_list_p__ = zeros(n_CLabel,n_CLabel,n_CCOV);
AB_.C_AB_sort_list_p__ = zeros(n_CLabel.^2,n_CCOV);
%%%%%%%%;
rng(1);
for niteration=0:n_iteration;
if (mod(niteration,128)==0); disp(sprintf(' %% niteration %d/%d',niteration,n_iteration)); end;
if (niteration==0); tmp_p_ = 1:n_u; else; tmp_p_ = randperm(n_u); end;
tmp_C_aucX__ = zeros(n_CLabel,n_CLabel,n_CCOV);
tmp_C_rank_avg_ = zeros(n_CLabel,n_CCOV);
%%%%%%%%;
for nA = 1:n_CLabel;
tmp_Label_A_ij_ = find(strcmp(str_CLabel_(tmp_p_),u_CLabel_{nA})); tmp_n_A = length(tmp_Label_A_ij_);
tmp_C_rank_avg_(nA,:) = mean(C_rank_(tmp_Label_A_ij_,:),1);
end;%for nA = 1:n_CLabel;
%%%%%%%%;
for nA = 1:n_CLabel;
for nB = 1:n_CLabel;
tmp_C_aucX__(nA,nB,:) = tmp_C_rank_avg_(nA,:) - tmp_C_rank_avg_(nB,:);
end;%for nB = 1:n_CLabel;
end;%for nA = 1:n_CLabel;
%%%%%%%%;
[tmp_AB_.AB_C_sort_list__,tmp_AB_.AB_C_sort_ij__] = sort(tmp_C_aucX__,3,'ascend');
[tmp_AB_.C_AB_sort_list__,tmp_AB_.C_AB_sort_ij__] = sort(reshape(tmp_C_aucX__,n_CLabel.^2,n_CCOV),2,'ascend');
%%%%%%%%;
if (niteration==0); 
%%%%%%%%;
AB_.AB_C_sort_list_ori__ = tmp_AB_.AB_C_sort_list__;
AB_.C_AB_sort_list_ori__ = tmp_AB_.C_AB_sort_list__;
AB_.AB_C_sort_list_ij__ = tmp_AB_.AB_C_sort_ij__;
AB_.C_AB_sort_list_ij__ = tmp_AB_.C_AB_sort_ij__;
%%%%%%%%;
end; %if (niteration==0);
if (niteration>0);
AB_.AB_C_sort_list_avg__ = AB_.AB_C_sort_list_avg__ + tmp_AB_.AB_C_sort_list__;
AB_.C_AB_sort_list_avg__ = AB_.C_AB_sort_list_avg__ + tmp_AB_.C_AB_sort_list__;
AB_.AB_C_sort_list_std__ = AB_.AB_C_sort_list_std__ + tmp_AB_.AB_C_sort_list__.^2;
AB_.C_AB_sort_list_std__ = AB_.C_AB_sort_list_std__ + tmp_AB_.C_AB_sort_list__.^2;
%%%%%%%%;
end;%if (niteration>0);
%%%%%%%%;
clear tmp_C_aucX__ tmp_C_rank_avg_ ;
clear tmp_Label_A_ij_ tmp_C_rank_avg_ tmp_n_A ;
clear tmp_C_aucX__ ;
clear tmp_AB_.AB_C_sort_list__ tmp_AB_.C_AB_sort_list__ ;
clear tmp_AB_.AB_C_sort_ij__ tmp_AB_.C_AB_sort_ij__ ;
end;%for niteration=0:n_iteration;
AB_.AB_C_sort_list_avg__ = AB_.AB_C_sort_list_avg__/n_iteration;
AB_.C_AB_sort_list_avg__ = AB_.C_AB_sort_list_avg__/n_iteration;
AB_.AB_C_sort_list_std__ = sqrt(AB_.AB_C_sort_list_std__/n_iteration - AB_.AB_C_sort_list_avg__.^2);
AB_.C_AB_sort_list_std__ = sqrt(AB_.C_AB_sort_list_std__/n_iteration - AB_.C_AB_sort_list_avg__.^2);
%%%%%%%%;
AB_.AB_C_sort_list_p__ = a_to_z_to_p_0(AB_.AB_C_sort_list_ori__,AB_.AB_C_sort_list_avg__,AB_.AB_C_sort_list_std__);
AB_.C_AB_sort_list_p__ = a_to_z_to_p_0(AB_.C_AB_sort_list_ori__,AB_.C_AB_sort_list_avg__,AB_.C_AB_sort_list_std__);
%%%%%%%%;

%%%%%%%%;
% Now run through the cluster pairs, ;
% accumulating the covariates which contribute most to the differences. ;
%%%%%%%%;
AB_.AB_C_absZ_avg__ = zeros(n_CCOV,1);
AB_.AB_C_rawZ_avg__ = zeros(n_CCOV,1);
tmp_s = (n_CLabel - 1) * n_CLabel ;
for nA = 1:n_CLabel;
for nB = 1:n_CLabel;
if (nA~=nB);
tmp_sgn = 0; if (nA>nB); tmp_sgn = -1; end; if (nB>nA); tmp_sgn = +1; end;
%%%%%%%%;
tmp_ij_ = squeeze(AB_.AB_C_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze( abs(AB_.AB_C_sort_list_ori__(nA,nB,:) - AB_.AB_C_sort_list_avg__(nA,nB,:))./AB_.AB_C_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_C_absZ_avg__(tmp_ij_) = AB_.AB_C_absZ_avg__(tmp_ij_) + tmp_z_/tmp_s;
tmp_ij_ = squeeze(AB_.AB_C_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze(    (AB_.AB_C_sort_list_ori__(nA,nB,:) - AB_.AB_C_sort_list_avg__(nA,nB,:))./AB_.AB_C_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_C_rawZ_avg__(tmp_ij_) = AB_.AB_C_rawZ_avg__(tmp_ij_) + tmp_sgn*tmp_z_/tmp_s;
%%%%%%%%;
%end;%if flag_Z;
end;%if (nA~=nB);
end;%for nB = 1:n_CLabel;
end;%for nA = 1:n_CLabel;
clear tmp_ij_ tmp_z_ tmp_s;

%%%%%%%%;
% Now run through the cluster pairs, ;
% recording the labels for each pair. ;
%%%%%%%%
n_s = n_CLabel*n_CLabel;
AB_.CLabel_pair_ = cell(n_s,1);
ns=0;
for nA=1:n_CLabel;
for nB=1:n_CLabel;
AB_.CLabel_pair_{1+ns} = sprintf('%s,%s',u_CLabel_{nA},u_CLabel_{nB});
ns = ns+1;
end;%for nB=1:n_CLabel;
end;%for nA=1:n_CLabel;

%%%%%%%%;
% Now run through the cluster pairs, ;
% recording the absolute-value of the z-score for each covariate. ;
%%%%%%%%
n_CCOV = AB_.n_CCOV;
n_CLabel = AB_.n_CLabel;
n_s = n_CLabel*n_CLabel;
AB_.AB_C_absZ_ = zeros(n_s,n_CCOV);
AB_.AB_C_rawZ_ = zeros(n_s,n_CCOV);
ns=0;
for nA=1:n_CLabel;
for nB=1:n_CLabel;
%%%%%%%%;
tmp_ij1_ = squeeze(AB_.AB_C_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze( abs(AB_.AB_C_sort_list_ori__(nA,nB,:) - AB_.AB_C_sort_list_avg__(nA,nB,:))./AB_.AB_C_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_C_absZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
%%%%%%%%;
tmp_ij1_ = squeeze(AB_.AB_C_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze(    (AB_.AB_C_sort_list_ori__(nA,nB,:) - AB_.AB_C_sort_list_avg__(nA,nB,:))./AB_.AB_C_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_C_rawZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
%%%%%%%%;
ns = ns+1;
end;%for nB=1:n_CLabel;
end;%for nA=1:n_CLabel;
