function test_dexcluster_multi_0(M,N,gamma,X,mu,n_rank,n_iteration,n_shuffle,flag_rerun);
% tries to find up to 8 clusters. ;
%{

  %M = 178; N = 1e3; gamma = 0.01; n_rank = 6; n_iteration = 256; n_shuffle = 256; flag_rerun = 0;
  M = 1781; N = 2e4; gamma = 0.01; n_rank = 6; n_iteration = 8; n_shuffle = 32; flag_rerun = 0;
  n_step = 21;
  X_ = linspace(0.50,0.65,n_step); mu_ = linspace(0.0,1.0,n_step);
  p_step_ = randperm(n_step);
  for nstep=1:n_step;
  X = X_(p_step_(nstep)); mu = mu_(p_step_(nstep));
  test_dexcluster_multi_0(M,N,gamma,X,mu,n_rank,n_iteration,n_shuffle,flag_rerun);
  end;%for nstep=1:n_step;

  M = 1781; N = 2e4; gamma = 0.01; n_rank = 6; n_iteration = 8; n_shuffle = 32; flag_rerun = 0;
  n_step = 21;
  snr_ = zeros(n_step,1);
  lP0_si__ = zeros(n_step,n_rank);
  lP0_sk__ = zeros(n_step,n_rank);
  lP0_ti__ = zeros(n_step,min(2,n_rank));
  lP0_tk__ = zeros(n_step,min(2,n_rank));
  lP0_m0_ = zeros(n_step,1);
  lP0_mr_ = zeros(n_step,1);
  X_ = linspace(0.50,0.65,n_step); mu_ = linspace(0.0,1.0,n_step);
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  str_xfix = test_dexcluster_xfix_0('dextest8',M,N,gamma,X,mu);
  str_mat = sprintf('./dir_mat/%s.mat',str_xfix);
  if (~exist(str_mat,'file')); disp(sprintf(' %% could not find %s',str_mat)); end;
  if ( exist(str_mat,'file'));
  tmp_ = load(str_mat,'M','N','gamma','X','mu','n_cluster','n_rank','niteration','n_iteration','n_shuffle','lpv_si__','lP0_si__','fla_si__','lpv_sk__','lP0_sk__','fla_sk__','lpv_ti__','lP0_ti__','fla_ti__','lpv_tk__','lP0_tk__','fla_tk__','lpv_m0_','lP0_m0_','fla_m0_','lpv_mr_','lP0_mr_','fla_mr_');
  lP0_si__(nstep,:) = mean(tmp_.lP0_si__,1);
  lP0_sk__(nstep,:) = mean(tmp_.lP0_sk__,1);
  lP0_ti__(nstep,:) = mean(tmp_.lP0_ti__,1);
  lP0_tk__(nstep,:) = mean(tmp_.lP0_tk__,1);
  lP0_m0_(nstep) = mean(tmp_.lP0_m0_);
  lP0_mr_(nstep) = mean(tmp_.lP0_mr_);
  end;%if ( exist(str_mat,'file'));  
  end;%for nstep=1:n_step;
  figure(1);clf; hold on;
  plot(snr_,lP0_m0_,'r.-');
  plot(snr_,lP0_mr_,'m.-');
  plot(snr_,lP0_si__,'bo-');
  plot(snr_,lP0_sk__,'bx-');
  plot(snr_,lP0_ti__,'go-');
  plot(snr_,lP0_tk__,'gx-');
  xlim([snr_(1),snr_(end)]);
  xlabel('snr');ylabel('P0'); title('P0 vs snr');
  legend({'m0','mr','si','sk','ti','tk'},'Location','SouthWest');
  figbig;
  str_fig = sprintf('./dir_jpg/test_dexcluster_multi_0.jpg');
  print('-djpeg',sprintf('%s.jpg',str_fig));
  print('-depsc',sprintf('%s.eps',str_fig));

  %}

%M=178; N=1e3; gamma = 0.01; X = 0.65; mu = 0.85;
%M=1781; N=2e4; gamma = 0.01; X = 0.55; mu = 0.65;
%M=1781; N=2e4; gamma = 0.01; X = 0.575; mu = 0.75;
%n_rank = 6;
%n_iteration = 128;
setup();
str_xfix = test_dexcluster_xfix_0('dextest8',M,N,gamma,X,mu);
str_mat = sprintf('./dir_mat/%s.mat',str_xfix);
if  ( exist(str_mat,'file') & flag_rerun==0); 
disp(sprintf(' %% %s found, not creating',str_mat));
end;%if  ( exist(str_mat,'file') & flag_rerun==0); 
if (~exist(str_mat,'file') | flag_rerun>0); 
disp(sprintf(' %% %s not found, creating',str_mat));
%%%%%%%%;
rng(1);
MX = ceil(M^X); NX = ceil(N^X); 
%%%%%%%%;
lpv_si__ = zeros(n_iteration,n_rank);
lP0_si__ = zeros(n_iteration,n_rank);
fla_si__ = zeros(n_iteration,n_rank);
lpv_sk__ = zeros(n_iteration,n_rank);
lP0_sk__ = zeros(n_iteration,n_rank);
fla_sk__ = zeros(n_iteration,n_rank);
lpv_ti__ = zeros(n_iteration,min(2,n_rank));
lP0_ti__ = zeros(n_iteration,min(2,n_rank));
fla_ti__ = zeros(n_iteration,min(2,n_rank));
lpv_tk__ = zeros(n_iteration,min(2,n_rank));
lP0_tk__ = zeros(n_iteration,min(2,n_rank));
fla_tk__ = zeros(n_iteration,min(2,n_rank));
lpv_m0_ = zeros(n_iteration,1);
lP0_m0_ = zeros(n_iteration,1);
fla_m0_ = zeros(n_iteration,1);
lpv_mr_ = zeros(n_iteration,1);
lP0_mr_ = zeros(n_iteration,1);
fla_mr_ = zeros(n_iteration,1);
%%%%%%%%;
for niteration=1:n_iteration;
A_n_ = randn(M,N); 
for nj=1:2; 
pf_{nj} = randperm(size(A_n_,nj)); 
[~,pi_{nj}] = sort(pf_{nj}); [~,pi_{nj}] = sort(pi_{nj}); 
end;% for nj=1:2;
n_cluster = max(8,floor(M/M^0.65));
B_n_ = cell(n_cluster,1);
B_label_ = zeros(M,1); 
for ncluster=1:n_cluster;
B_n_{ncluster}=randn(MX,NX)+mu*ones(MX,1)*(2*(rand(1,NX)>0.5) - 1); 
A_n_(pf_{1}(MX*(ncluster-1) + (1:MX)),pf_{2}(NX*(ncluster-1) + (1:NX))) = B_n_{ncluster};
B_label_(pi_{1}(MX*(ncluster-1) + (1:MX))) = ncluster;
end;%for ncluster=1:n_cluster;
%%%%%%%%;
% Binarize? ;
%%%%%%%%;
% A_n_ = 2*(A_n_>0)-1;
%%%%%%%%;
disp(sprintf(' %% niteration %d/%d',niteration,n_iteration));
%%%%%%%%;
% spectral. ; 
% pca --> isosplit. ;
% pca --> kmeans2. ;
%%%%%%%%;
try;
tic; [tmp_U_,tmp_S_,tmp_V_] = svds(A_n_,n_rank); t_s_ = toc;
[~,tmp_U_ij_] = sort(abs(tmp_U_(:,1)),'descend'); [~,tmp_V_ij_] = sort(abs(tmp_V_(:,1)),'descend');
for nrank=1:n_rank;
%A_n_sub_ = tmp_U_(:,1:nrank)*tmp_S_(1:nrank,1:nrank)*transpose(tmp_V_(:,1:nrank));
A_n_sub_ = tmp_U_(:,1:nrank);
opts_isosplit5 = struct('K_init',200,'isocut_threshold',1.0);
try;
isosplit5_label_ = transpose(isosplit5(transpose(A_n_sub_),opts_isosplit5));
[lpv,lP0,fla] = label_to_label_enrichment_1(B_label_,isosplit5_label_);
disp(sprintf(' %% pca->isosplit5: lpv %0.2f lP0 %0.2f fla %d ',lpv,lP0,fla));
lpv_si__(niteration,nrank) = lpv;
lP0_si__(niteration,nrank) = lP0;
fla_si__(niteration,nrank) = fla;
catch; disp(sprintf(' %% niteration %d/%d: error in spectral-->isosplit5.',niteration,n_iteration)); end;%try;
try;
kmeans_label_ = kmeans(A_n_sub_,2);
[lpv,lP0,fla] = label_to_label_enrichment_1(B_label_,kmeans_label_);
disp(sprintf(' %% pca->kmeans: lpv %0.2f lP0 %0.2f fla %d ',lpv,lP0,fla));
lpv_sk__(niteration,nrank) = lpv;
lP0_sk__(niteration,nrank) = lP0;
fla_sk__(niteration,nrank) = fla;
catch; disp(sprintf(' %% niteration %d/%d: error in spectral-->kmeans2.',niteration,n_iteration)); end;%try;
end;%for nrank=1:n_rank;
catch; disp(sprintf(' %% niteration %d/%d: error in spectral.',niteration,n_iteration)); end;%try;
%%%%%%%%;
% tsne --> isosplit. ;
% tsne --> kmeans2. ; 
%%%%%%%%;
for nrank=1:min(2,n_rank);
try;
A_n_sub_ = fast_tsne_dr_0(A_n_,struct('rand_seed',1,'no_dims',nrank,'theta',0));
try;
opts_isosplit5 = struct('K_init',200,'isocut_threshold',1.0);
isosplit5_label_ = transpose(isosplit5(transpose(A_n_sub_),opts_isosplit5));
[lpv,lP0,fla] = label_to_label_enrichment_1(B_label_,isosplit5_label_);
disp(sprintf(' %% tsne->isosplit5: lpv %0.2f lP0 %0.2f fla %d ',lpv,lP0,fla));
lpv_ti__(niteration,nrank) = lpv;
lP0_ti__(niteration,nrank) = lP0;
fla_ti__(niteration,nrank) = fla;
catch; disp(sprintf(' %% niteration %d/%d: error in tsne-->isosplit5.',niteration,n_iteration)); end;%try;
try;
kmeans_label_ = kmeans(A_n_sub_,n_cluster);
[lpv,lP0,fla] = label_to_label_enrichment_1(B_label_,kmeans_label_);
lpv_tk__(niteration,nrank) = lpv;
lP0_tk__(niteration,nrank) = lP0;
fla_tk__(niteration,nrank) = fla;
disp(sprintf(' %% tsne->kmeans: lpv %0.2f lP0 %0.2f fla %d ',lpv,lP0,fla));
catch; disp(sprintf(' %% niteration %d/%d: error in tsne-->kmeans2.',niteration,n_iteration)); end;%try;
catch; disp(sprintf(' %% niteration %d/%d: error in tsne.',niteration,n_iteration)); end;%try;
%{
  subplot(1,3,1);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,B_label_,'filled');
  subplot(1,3,2);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,isosplit5_label_,'filled');
  subplot(1,3,3);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,kmeans_label_,'filled');
  colormap('lines');
  %}
end;%for nrank=1:min(2,n_rank);
%%%%%%%%;
% dexcluster. ;
%%%%%%%%;
try;
tic; 
tmp_c_ = clock(); ni=ceil(tmp_c_(6)*1000000);
prefix_base = sprintf('test_%d',ni); 
%gamma = 0.01; n_shuffle = 32; %<-- passed in as input. ;
dir_out = []; E_array_base_ = A_n_; E_array_r_ij_ = []; E_array_c_ij_ = []; p_set = [];
test_loader_dexcluster_nonbinary_trace_ZRmax_recursive_0(dir_out,prefix_base,E_array_base_,E_array_r_ij_,E_array_c_ij_,gamma,n_shuffle,p_set);
ZRmax_label_ = test_loader_dexcluster_nonbinary_trace_ZRmax_recursive_0(dir_out,prefix_base,E_array_base_,E_array_r_ij_,E_array_c_ij_,gamma,n_shuffle,p_set);
nZRmax_label_0_ = label_str_to_enum_0(ZRmax_label_);
nZRmax_label_r_ = label_rearrange_0(nZRmax_label_0_,E_array_base_);
[lpv,lP0,fla] = label_to_label_enrichment_1(B_label_,nZRmax_label_0_);
disp(sprintf(' %% dexnb_0: lpv %0.2f lP0 %0.2f fla %d ',lpv,lP0,fla));
lpv_m0_(niteration) = lpv;
lP0_m0_(niteration) = lP0;
fla_m0_(niteration) = fla;
[lpv,lP0,fla] = label_to_label_enrichment_1(B_label_,nZRmax_label_r_);
disp(sprintf(' %% dexnb_r: lpv %0.2f lP0 %0.2f fla %d ',lpv,lP0,fla));
lpv_mr_(niteration) = lpv;
lP0_mr_(niteration) = lP0;
fla_mr_(niteration) = fla;
%{
figure(1); clf;
subplot(2,2,1);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,B_label_,'filled'); title('B_label','Interpreter','none');
subplot(2,2,2);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,isosplit5_label_,'filled'); title('isosplit5','Interpreter','none');
subplot(2,2,3);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,kmeans_label_,'filled'); title('kmeans','Interpreter','none');
subplot(2,2,4);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,nZRmax_label_,'filled'); title('ZRmax','Interpreter','none');
colormap('lines');
figure(2); clf;
subplot(1,2,1);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,nZRmax_label_0_,'filled'); title('ZRmax','Interpreter','none');
subplot(1,2,2);scatter(A_n_sub_(:,1),A_n_sub_(:,2),25,nZRmax_label_r_,'filled'); title('ZRmax2','Interpreter','none');
colormap(colormap_beach());
 %}
t_m_ = toc;
catch; disp(sprintf(' %% niteration %d/%d: error in dexcluster.',niteration,n_iteration)); end;%try;
if (mod(niteration,10)==0);
save(str_mat,'M','N','gamma','X','mu','n_cluster','n_rank','niteration','n_iteration','n_shuffle','lpv_si__','lP0_si__','fla_si__','lpv_sk__','lP0_sk__','fla_sk__','lpv_ti__','lP0_ti__','fla_ti__','lpv_tk__','lP0_tk__','fla_tk__','lpv_m0_','lP0_m0_','fla_m0_','lpv_mr_','lP0_mr_','fla_mr_'); %<-- save every 10 iterations. ;
end;%if (mod(niteration,10)==0);
end;%for niteration=1:n_iteration;
%%%%%%%%;
save(str_mat,'M','N','gamma','X','mu','n_cluster','n_rank','niteration','n_iteration','n_shuffle','lpv_si__','lP0_si__','fla_si__','lpv_sk__','lP0_sk__','fla_sk__','lpv_ti__','lP0_ti__','fla_ti__','lpv_tk__','lP0_tk__','fla_tk__','lpv_m0_','lP0_m0_','fla_m0_','lpv_mr_','lP0_mr_','fla_mr_'); %<-- final save. ;
%%%%%%%%;
end;%if (~exist(str_mat,'file') | flag_rerun>0); 
