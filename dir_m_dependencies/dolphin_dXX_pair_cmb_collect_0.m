function dZ = dolphin_dXX_pair_cmb_collect_0(dXX,n_shuffle);
setup_OptiPlex; dir_trunk = '/home/rangan/dir_bcc/dir_dolphin';
%setup_access1; dir_trunk = '/data/rangan/dir_bcc/dir_dolphin';
dir_jpg = sprintf('%s/dir_jpg',dir_trunk);
dir_mat = sprintf('%s/dir_mat',dir_trunk);
flag_replot=0;
flag_recalc=0;
flag_drift0=1;
flag_a_is_0=0;
flag_center=1;
verbose=0;

fname_infix = sprintf('aid%.2dd%dc%d',dXX,flag_drift0,flag_center);
fname_mat = sprintf('%s/dolphin_%s_pair_cmb_s0000.mat',dir_mat,fname_infix);
tmp_ = load(fname_mat);
n_var = numel(tmp_.pair_a_cmb_);

pair_a_cmb_Z_ = [];
pair_A_cmb_Z__ = [];
pair_BB_cmb_Z__ = [];
pair_CC_cmb_Z__ = [];
pair_a_cmb_nlp_ = [];
pair_A_cmb_nlp__ = [];
pair_BB_cmb_nlp__ = [];
pair_CC_cmb_nlp__ = [];

flag_all = 1;
for nshuffle=1:n_shuffle;
fname_mat = sprintf('%s/dolphin_%s_pair_cmb_s%.4d.mat',dir_mat,fname_infix,nshuffle);
flag_all = flag_all * exist(fname_mat,'file');
end;%for nshuffle=1:n_shuffle;
if flag_all;
%%%%%%%%;
% collect null distribution. ;
%%%%%%%%;
if flag_a_is_0==0; pair_a_cmb_null_avg_ = zeros(n_var,1); end;
pair_A_cmb_null_avg__ = zeros(n_var,n_var);
pair_BB_cmb_null_avg__ = zeros(n_var,n_var);
pair_CC_cmb_null_avg__ = zeros(n_var,n_var);
if flag_a_is_0==0; pair_a_cmb_null_std_ = zeros(n_var,1); end;
pair_A_cmb_null_std__ = zeros(n_var,n_var);
pair_BB_cmb_null_std__ = zeros(n_var,n_var);
pair_CC_cmb_null_std__ = zeros(n_var,n_var);
n_shuffle_use = 32;
for nshuffle=1:n_shuffle_use;
fname_mat = sprintf('%s/dolphin_%s_pair_cmb_s%.4d.mat',dir_mat,fname_infix,nshuffle);
tmp_ = load(fname_mat);
if (verbose); disp(sprintf(' %% norms: pair_A__ %0.2f pair_BB__ %0.2f pair_CC__ %0.2f',fnorm(tmp_.pair_A_cmb__),fnorm(tmp_.pair_BB_cmb__),fnorm(tmp_.pair_CC_cmb__))); end;
if flag_a_is_0==0; pair_a_cmb_null_avg_ = pair_a_cmb_null_avg_ + tmp_.pair_a_cmb_; end;
pair_A_cmb_null_avg__ = pair_A_cmb_null_avg__ + tmp_.pair_A_cmb__;
pair_BB_cmb_null_avg__ = pair_BB_cmb_null_avg__ + tmp_.pair_BB_cmb__;
pair_CC_cmb_null_avg__ = pair_CC_cmb_null_avg__ + tmp_.pair_CC_cmb__;
if flag_a_is_0==0; pair_a_cmb_null_std_ = pair_a_cmb_null_std_ + tmp_.pair_a_cmb_.^2; end;
pair_A_cmb_null_std__ = pair_A_cmb_null_std__ + tmp_.pair_A_cmb__.^2;
pair_BB_cmb_null_std__ = pair_BB_cmb_null_std__ + tmp_.pair_BB_cmb__.^2;
pair_CC_cmb_null_std__ = pair_CC_cmb_null_std__ + tmp_.pair_CC_cmb__.^2;
clear tmp_;
end;%for nshuffle=1:n_shuffle_use;
if flag_a_is_0==0; pair_a_cmb_null_avg_ = pair_a_cmb_null_avg_ / n_shuffle_use; end;
pair_A_cmb_null_avg__ = pair_A_cmb_null_avg__ / n_shuffle_use;
pair_BB_cmb_null_avg__ = pair_BB_cmb_null_avg__ / n_shuffle_use;
pair_CC_cmb_null_avg__ = pair_CC_cmb_null_avg__ / n_shuffle_use;
if flag_a_is_0==0; pair_a_cmb_null_std_ = sqrt(pair_a_cmb_null_std_/n_shuffle_use - pair_a_cmb_null_avg_.^2); end;
pair_A_cmb_null_std__ = sqrt(pair_A_cmb_null_std__/n_shuffle_use - pair_A_cmb_null_avg__.^2);
pair_BB_cmb_null_std__ = sqrt(pair_BB_cmb_null_std__/n_shuffle_use - pair_BB_cmb_null_avg__.^2);
pair_CC_cmb_null_std__ = sqrt(pair_CC_cmb_null_std__/n_shuffle_use - pair_CC_cmb_null_avg__.^2);
fname_mat = sprintf('%s/dolphin_%s_pair_cmb_s0000.mat',dir_mat,fname_infix);
tmp_ = load(fname_mat);
if flag_a_is_0==0; pair_a_cmb_ = tmp_.pair_a_cmb_; end;
pair_A_cmb__ = tmp_.pair_A_cmb__;
pair_BB_cmb__ = tmp_.pair_BB_cmb__;
pair_CC_cmb__ = tmp_.pair_CC_cmb__;
clear tmp_;
if flag_a_is_0==0; pair_a_cmb_Z_ = real((pair_a_cmb_ - pair_a_cmb_null_avg_)./pair_a_cmb_null_std_); end;
pair_A_cmb_Z__ = real((pair_A_cmb__ - pair_A_cmb_null_avg__)./pair_A_cmb_null_std__);
pair_BB_cmb_Z__ = real((pair_BB_cmb__ - pair_BB_cmb_null_avg__)./pair_BB_cmb_null_std__);
pair_CC_cmb_Z__ = real((pair_CC_cmb__ - pair_CC_cmb_null_avg__)./pair_CC_cmb_null_std__);
if flag_a_is_0==0; pair_a_cmb_nlp_ = -z_to_lp(pair_a_cmb_Z_); end;
pair_A_cmb_nlp__ = -z_to_lp(pair_A_cmb_Z__);
pair_BB_cmb_nlp__ = -z_to_lp(pair_BB_cmb_Z__);
pair_CC_cmb_nlp__ = -z_to_lp(pair_CC_cmb_Z__);
%%%%%%%%;
fname_fig = sprintf('%s/dolphin_%s_pair_aABC_cmb_nlp_0',dir_jpg,fname_infix);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
if (verbose); disp(sprintf(' %% %s not found, creating',fname_fig)); end;
figure(1);
clf;
if flag_a_is_0==0;
subplot(2,2,1);
bar(pair_a_cmb_nlp_);
set(gca,'XTick',1:n_var,'XTickLabel',string_dat_name_); xtickangle(90);
title('-log p for drift pair_a_cmb_','Interpreter','none');
end;%if flag_a_is_0==0;
subplot(2,2,2);
colormap(colormap_beach());
imagesc(pair_A_cmb_nlp__,[0,6]); axis image;
set(gca,'YTick',1:n_var,'YTickLabel',string_dat_name_);
set(gca,'XTick',1:n_var,'XTickLabel',string_dat_name_); xtickangle(90);
set(gca,'TickLength',[0,0]);
set(gca,'fontsize',6);
%colorbar;
title('-log p for interaction pair_A_cmb__','Interpreter','none');
subplot(2,2,3);
colormap(colormap_beach());
imagesc(pair_BB_cmb_nlp__,[0,6]); axis image;
set(gca,'YTick',1:n_var,'YTickLabel',string_dat_name_);
set(gca,'XTick',1:n_var,'XTickLabel',string_dat_name_); xtickangle(90);
set(gca,'TickLength',[0,0]);
set(gca,'fontsize',6);
%colorbar;
title('-log p for SDE noise pair_BB_cmb__','Interpreter','none');
subplot(2,2,4);
colormap(colormap_beach());
imagesc(pair_CC_cmb_nlp__,[0,6]); axis image;
set(gca,'YTick',1:n_var,'YTickLabel',string_dat_name_);
set(gca,'XTick',1:n_var,'XTickLabel',string_dat_name_); xtickangle(90);
set(gca,'TickLength',[0,0]);
set(gca,'fontsize',6);
%colorbar;
title('-log p for observation noise pair_CC_cmb__','Interpreter','none');
figbig;
sgtitle('coefficient matrices','Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));
if ( exist(sprintf('%s.jpg',fname_fig),'file'));
if (verbose); disp(sprintf(' %% %s found, not creating',fname_fig)); end;
end;%if ( exist(sprintf('%s.jpg',fname_fig),'file'));
%%%%%%%%;
end;%if flag_all;

dZ = struct('type','dZ');
dZ.pair_a_cmb_Z_ = pair_a_cmb_Z_;
dZ.pair_A_cmb_Z__ = pair_A_cmb_Z__;
dZ.pair_BB_cmb_Z__ = pair_BB_cmb_Z__;
dZ.pair_CC_cmb_Z__ = pair_CC_cmb_Z__;
dZ.pair_a_cmb_nlp_ = pair_a_cmb_nlp_;
dZ.pair_A_cmb_nlp__ = pair_A_cmb_nlp__;
dZ.pair_BB_cmb_nlp__ = pair_BB_cmb_nlp__;
dZ.pair_CC_cmb_nlp__ = pair_CC_cmb_nlp__;


