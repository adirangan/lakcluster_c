function l = lisa_struct_mx_ver0(l);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% check to make sure that the mr_A_full_ lines up with the mr_A_%0.2d_ ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
l.mr_A_default__ = cell(l.n_study,1);
l.mr_Z_default__ = cell(l.n_study,1);
for ns=1:l.n_study;
tmp_fname = sprintf('%s/%s_mr_A_%0.2d.b16',l.dir__in,l.string_prefix,ns); fcheck(tmp_fname);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mr_A_default__{ns} = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
tmp_fname = sprintf('%s/%s_mr_Z_%0.2d.b16',l.dir__in,l.string_prefix,ns); fcheck(tmp_fname);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mr_Z_default__{ns} = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
end;%for ns=1:l.n_study;
tmp_fname = sprintf('%s/%s_mr_A_full.b16',l.dir__in,l.string_prefix); fcheck(tmp_fname);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mr_A_default_full_ = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',l.dir__in,l.string_prefix); fcheck(tmp_fname);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mr_Z_default_full_ = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
mr_A_tmp_ = []; mr_Z_tmp_ = [];
for ns=1:l.n_study;
mr_A_tmp_ = [mr_A_tmp_;l.mr_A_default__{ns}];
mr_Z_tmp_ = [mr_Z_tmp_;l.mr_Z_default__{ns}];
end;% for ns=1:l.n_study;
%%%%%%%%;
tmp_fname = sprintf('%s/%s_mc_A.b16',l.dir__in,l.string_prefix);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mc_A_default_ = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
%%%%%%%%;
if (l.verbose>-1); disp(sprintf(' %% default masks: mr_A error %0.16f ; mr_Z error %0.16f ; mc_A %d',norm(mr_A_tmp_-l.mr_A_default_full_),norm(mr_Z_tmp_-l.mr_Z_default_full_),sum(l.mc_A_default_))); end;
%%%%%%%%;
if length(l.mr_string)>0;
l.mr_A__ = cell(l.n_study,1);
l.mr_Z__ = cell(l.n_study,1);
for ns=1:l.n_study;
tmp_fname = sprintf('%s/%s_mr_A_%s_%0.2d.b16',l.dir__in,l.string_prefix,l.mr_string,ns); fcheck(tmp_fname);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mr_A__{ns} = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
tmp_fname = sprintf('%s/%s_mr_Z_%s_%0.2d.b16',l.dir__in,l.string_prefix,l.mr_string,ns); fcheck(tmp_fname);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mr_Z__{ns} = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
end;%for ns=1:l.n_study;
tmp_fname = sprintf('%s/%s_mr_A_%s_full.b16',l.dir__in,l.string_prefix,l.mr_string); fcheck(tmp_fname);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mr_A_full_ = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
tmp_fname = sprintf('%s/%s_mr_Z_%s_full.b16',l.dir__in,l.string_prefix,l.mr_string); fcheck(tmp_fname);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mr_Z_full_ = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
mr_A_tmp_ = []; mr_Z_tmp_ = [];
for ns=1:l.n_study;
mr_A_tmp_ = [mr_A_tmp_;l.mr_A__{ns}];
mr_Z_tmp_ = [mr_Z_tmp_;l.mr_Z__{ns}];
end;% for ns=1:l.n_study;
if (l.verbose>-1); disp(sprintf(' %% %s masks: mr_A error %0.16f ; mr_Z error %0.16f',l.mr_string,norm(mr_A_tmp_-l.mr_A_full_),norm(mr_Z_tmp_-l.mr_Z_full_))); end;
 else;
l.mr_A__ = l.mr_A_default__;
l.mr_Z__ = l.mr_Z_default__;
l.mr_A_full_ = l.mr_A_default_full_;
l.mr_Z_full_ = l.mr_Z_default_full_;
end;%if length(l.mr_string)>0;
%%%%%%%%;
if length(l.mc_string)>0;
tmp_fname = sprintf('%s/%s_mc_A_%s.b16',l.dir__in,l.string_prefix,l.mc_string);
[~,nrows,ncols] = tutorial_binary_getsize(tmp_fname);
l.mc_A_ = (tutorial_binary_uncompress(tmp_fname,1:nrows,1:ncols)>0);
if (l.verbose>-1); disp(sprintf(' %% %s masks: mc_A %d',l.mr_string,sum(l.mc_A_))); end;
 else;
l.mc_A_ = l.mc_A_default_;
end;%if length(l.mc_string)>0;
%%%%%%%%
if (l.flag_reverse==0); l.mr_D_ = l.mr_A_full_; l.mr_X_ = l.mr_Z_full_; end;%if (l.flag_reverse==0);
if (l.flag_reverse==1); l.mr_D_ = l.mr_Z_full_; l.mr_X_ = l.mr_A_full_; end;%if (l.flag_reverse==1);
