function [index_] = localmax_zerobased(Z_);
% find all local maxima of Z_;
n_Z = numel(Z_);
[~,index_] = max(Z_); index_ = index_ - 1;
for nZ=1:n_Z-2;
if is_imax_zerobased(Z_,nZ); index_ = [index_;nZ]; end;
end;%for nZ=1:n_Z-2;
index_ = unique(index_);
[~,p_] = sort(Z_(1+index_),'descend');
index_ = index_(p_);

function flag_decrease_and = is_imax_zerobased(Z_,index);
% determines whether or not index is an interior maximum of Z_. ;
verbose=0;
n_Z = numel(Z_);
%%%%%%%%;
flag_decrease_neg = 0;
tab = index-1; continue_flag=(tab>=0);
while (continue_flag);
if (continue_flag==1 & Z_(1+tab)<Z_(1+index)); flag_decrease_neg = 1; continue_flag=0; end;
if (continue_flag==1 & Z_(1+tab)>Z_(1+index)); flag_decrease_neg = 0; continue_flag=0; end;
if (continue_flag==1 & Z_(1+tab)==Z_(1+index)); tab=tab-1; continue_flag=1; end;
if (tab<=0); continue_flag=0; end;
end;%while;
if (verbose); disp(sprintf(' %% 1+index %d tab %d neg %d',1+index,tab,flag_decrease_neg)); end;
%%%%%%%%;
flag_decrease_pos = 0;
tab = index-1+1; continue_flag=(tab<n_Z-1);
while (continue_flag);
if (continue_flag==1 & Z_(1+tab)<Z_(1+index)); flag_decrease_pos = 1; continue_flag=0; end;
if (continue_flag==1 & Z_(1+tab)>Z_(1+index)); flag_decrease_pos = 0; continue_flag=0; end;
if (continue_flag==1 & Z_(1+tab)==Z_(1+index)); tab=tab+1; continue_flag=1; end;
if (tab>=n_Z); continue_flag=0; end;
end;%while;
if (verbose); disp(sprintf(' %% 1+index %d tab %d pos %d',1+index,tab,flag_decrease_pos)); end;
%%%%%%%%;
flag_decrease_and = flag_decrease_neg & flag_decrease_pos;
