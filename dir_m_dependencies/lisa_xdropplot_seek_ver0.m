%%%%%%%%;
% choose iteration. ;
%%%%%%%%;
iteration_max = max(t_ret_);
niteration_ = 0:25:iteration_max; 
niteration_(1)=1; niteration_(end) = min(niteration_(end),iteration_max-1);
for ni=1:length(niteration_);
niteration = niteration_(ni);
cdrop_rem_ = cdrop_a_(end-c_rem_(niteration)+1:end);
rdrop_rem_ = rdrop_a_(end-r_rem_(niteration)+1:end);
disp(sprintf(' %% niteration %d cdrop_rem %d',niteration,length(cdrop_rem_)));
cdrop_SNP_ = bim_{1}(cdrop_rem_);
[~,tmp_SNP_ij] = unique(cdrop_SNP_);
dir_out_s0000_seek = sprintf('%s/dir_seek',dir_out_s0000); if (~exist(dir_out_s0000_seek,'dir')); mkdir(dir_out_s0000_seek); end;
fname_prefix = sprintf('%s/%s_ni%.3d',dir_out_s0000_seek,string_name_s0000,niteration);
fname_cdrop = sprintf('%s.assoc',fname_prefix);
if ( exist(fname_cdrop,'file')); disp(sprintf(' %% found %s',fname_cdrop)); end;
if (~exist(fname_cdrop,'file')); disp(sprintf(' %% did not find %s, creating...',fname_cdrop));
disp(sprintf(' %% writing to %s',fname_cdrop));
fid = fopen(fname_cdrop,'w');
fprintf(fid,'%s\n','SNP');
for nc=1:length(tmp_SNP_ij);
fprintf(fid,'%s\n',cdrop_SNP_{tmp_SNP_ij(nc)});
end;%for nc=1:length(tmp_SNP_ij);
fclose(fid);
end;%if (~exist(fname_cdrop,'file'));
end;%for ni=1:length(niteration_);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% read niteration from previously declared variable. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%;
% load library. ;
%%%%%%%%;
fname_mat = '/data/rangan/dir_bcc/dir_PGC_20190328/dir_misc/bip_all_bim_uniq_38_annotat_35_10.genes.annot.mat';
load(fname_mat);
%%%%%%%%;
% load rs. ;
%%%%%%%%;
fname = sprintf('%s/%s_ni%.3d.assoc',dir_out_s0000_seek,string_name_s0000,niteration);
fid = fopen(fname,'r'); 
tmp_ = textscan(fid,'%s\n','headerlines',1);
fclose(fid);
tmp_rs_ = tmp_{1};
%%%%%%%%;
% index into library. ;
%%%%%%%%;
[~,tmp_ij_,~] =  intersect(rs_sort_,tmp_rs_,'stable');
%%%%%%%%;
% calculate length of EZ list. ;
%%%%%%%%;
n_EZ = 0;
for nrs=1:length(tmp_ij_);
tmp_len = length(EZ__{tmp_ij_(nrs)});
n_EZ = n_EZ + tmp_len;
end;%for nrs=1:length(tmp_ij_);
%%%%%%%%;
% generate EZ list. ;
%%%%%%%%;
EZ_list_ = cell(n_EZ,1);
nEZ = 0;
for nrs=1:length(tmp_ij_);
tmp_len = length(EZ__{tmp_ij_(nrs)});
for nll=1:tmp_len;
nEZ = nEZ + 1;
EZ_list_{nEZ} = EZ__{tmp_ij_(nrs)}{nll};
end;%for nll=1:tmp_len;
end;%for nrs=1:length(tmp_ij_);
EZ_unique_ = unique(EZ_list_);
%%%%%%%%;
% write EZ unique to file. ;
%%%%%%%%;
fname_EZ = sprintf('%s/%s_ni%.3d.EZ2',dir_out_s0000_seek,string_name_s0000,niteration);
fid = fopen(fname_EZ,'w');
for nEZ=1:length(EZ_unique_);
fprintf(fid,'%s\n',EZ_unique_{nEZ});
end;%for nEZ=1:length(EZ_unique_);
fclose(fid);
%%%%%%%%;
% Now run: ;
%%%%%%%%;
%{
cd /data/rangan/dir_bcc/dir_seek_072916/;
bash;
source init.sh ;
javac src/seek/?*.java ;
%}
for str_go = {'go_bp_iea','go_bp','go_cp_iea','go_cp','go_mf_iea','go_mf','kegg'};
fname_EZ_out = sprintf('%s.%s.out',fname_EZ,str_go{1});
disp(sprintf('java seek.GeneEnrichment -d /data/rangan/dir_bcc/dir_seek_072916/data/ -i %s -s %s -t %d > %s;\n',fname_EZ,str_go{1},wc_0(fname_EZ),fname_EZ_out));
end;%for str_go;
%%%%%%%%;
% Now collect: ;
%%%%%%%%;
%tmp_str = ' tar cfvz /data/rangan/dir_bcc/dir_PGC_20190328/test_seek_20190101.tar.gz ';
%for str_go = {'go_bp_iea','go_bp','go_cp_iea','go_cp','go_mf_iea','go_mf','kegg'};
%fname_EZ_out = sprintf('%s.%s.out',fname_EZ,str_go{1});
%tmp_str = sprintf('%s %s',tmp_str,fname_EZ_out);
%end;%for str_go;
%tmp_str = sprintf('%s ;\n',tmp_str);
%disp(tmp_str);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
