function [m_A,s_A,m_B,s_B,l] = so2g_ml3(d_);
% Uses gradient descent to calculate the sum of 2 gaussians ;
% which is has the maximum likelihood given the data d_. ;
% The sum of 2 gaussians is written as: ;
% rho(x) = (1/(1+exp(-l)))*p_A(x) + (exp(-l)/(1+exp(-l)))*p_B(x) ;
% where p_C(x) = 1/sqrt(2*pi)/s_C * exp(-(x-m_C)^2/(2*s_C^2)) ;
% and C = A,B. ;
% Note that gradient descent makes use of: ;
% dp/dm = p(x) * ( -(x-m)/s^2 ) ;
% dp/ds = p(x) * ( -1/s + (x-m)^2/s^3 ) ;

p = @(x,m,s) 1/sqrt(2*pi)./s .* exp(-(x-m).^2./(2*s.^2)) ;
dpdm = @(x,m,s) p(x,m,s) .* ( +(x-m)./s.^2 ) ;
dpds = @(x,m,s) p(x,m,s) .* ( -1./s + (x-m).^2 ./ s.^3 ) ;
lA = @(l) 1./(1+exp(-l)) ; 
lB = @(l) exp(-l)./(1+exp(-l)) ;
dlAdl = @(l) +lA(l).*lB(l) ; 
dlBdl = @(l) -lA(l).*lB(l) ;
rho = @(x,m_A,s_A,m_B,s_B,l) lA(l).*p(x,m_A,s_A) + lB(l).*p(x,m_B,s_B) ;
lrho = @(x,m_A,s_A,m_B,s_B,l) log(rho(x,m_A,s_A,m_B,s_B,l)) ;
drhodl = @(x,m_A,s_A,m_B,s_B,l) dlAdl(l).*p(x,m_A,s_A) + dlBdl(l).*p(x,m_B,s_B) ;
drhodmA = @(x,m_A,s_A,m_B,s_B,l) lA(l).*dpdm(x,m_A,s_A) ;
drhodsA = @(x,m_A,s_A,m_B,s_B,l) lA(l).*dpds(x,m_A,s_A) ;
drhodmB = @(x,m_A,s_A,m_B,s_B,l) lB(l).*dpdm(x,m_B,s_B) ;
drhodsB = @(x,m_A,s_A,m_B,s_B,l) lB(l).*dpds(x,m_B,s_B) ;
dlrhodl = @(x,m_A,s_A,m_B,s_B,l) drhodl(x,m_A,s_A,m_B,s_B,l)./rho(x,m_A,s_A,m_B,s_B,l) ;
dlrhodmA = @(x,m_A,s_A,m_B,s_B,l) drhodmA(x,m_A,s_A,m_B,s_B,l)./rho(x,m_A,s_A,m_B,s_B,l) ;
dlrhodsA = @(x,m_A,s_A,m_B,s_B,l) drhodsA(x,m_A,s_A,m_B,s_B,l)./rho(x,m_A,s_A,m_B,s_B,l) ;
dlrhodmB = @(x,m_A,s_A,m_B,s_B,l) drhodmB(x,m_A,s_A,m_B,s_B,l)./rho(x,m_A,s_A,m_B,s_B,l) ;
dlrhodsB = @(x,m_A,s_A,m_B,s_B,l) drhodsB(x,m_A,s_A,m_B,s_B,l)./rho(x,m_A,s_A,m_B,s_B,l) ;

n_iteration = 16; eta = 0.01;
m_A = prctile(d_,25); s_A = std(d_)/2;
m_B = prctile(d_,75); s_B = std(d_)/2;
l = 0.0;
L_old = sum(lrho(d_,m_A,s_A,m_B,s_B,l));
continue_flag=1;
while (continue_flag);
dLdl = sum(dlrhodl(d_,m_A,s_A,m_B,s_B,l)) ;
dLdmA = sum(dlrhodmA(d_,m_A,s_A,m_B,s_B,l)) ;
dLdsA = sum(dlrhodsA(d_,m_A,s_A,m_B,s_B,l)) ;
dLdmB = sum(dlrhodmB(d_,m_A,s_A,m_B,s_B,l)) ;
dLdsB = sum(dlrhodsB(d_,m_A,s_A,m_B,s_B,l)) ;
l = l + eta*dLdl ;
m_A = m_A + eta*dLdmA ;
s_A = s_A + eta*dLdsA ;
m_B = m_B + eta*dLdmB ;
s_B = s_B + eta*dLdsB ;
L_new = sum(lrho(d_,m_A,s_A,m_B,s_B,l));
dL = L_new - L_old;
L_old = L_new;
if (abs(dL)<1e-6); continue_flag=0; end;
flag_plot=1;
if flag_plot;
clf;
tmp_x_ = linspace(min(d_),max(d_),32);
tmp_y_ = linspace(min(d_),max(d_),1024);
tmp_h_ = hist(d_,tmp_x_); tmp_h_ = tmp_h_/sum(tmp_h_)/mean(diff(tmp_x_));
hold on; 
stairs(tmp_x_,tmp_h_,'k-');
plot(tmp_y_,rho(tmp_y_,m_A,s_A,m_B,s_B,l),'g-');
plot(tmp_y_,lA(l).*p(tmp_y_,m_A,s_A),'r-');
plot(tmp_y_,lB(l).*p(tmp_y_,m_B,s_B),'b-');
hold off;
xlim([min(d_),max(d_)]);
title(sprintf('m_A %0.2f s_A %0.2f m_B %0.2f s_B %0.2f l %0.2f',m_A,s_A,m_B,s_B,l));
drawnow();
%pause();
end;%if flag_plot;
end;%while (continue_flag);
