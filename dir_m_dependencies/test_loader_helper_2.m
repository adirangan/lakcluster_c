function [AB_] = test_loader_helper_2(dir_trunk,str_prefix,n_iteration,n_Sample_Label,n_CCOV,n_Z_GENE,str_Sample_Label_,C_rank_,Z_rank_,zeta_Z_un_,zeta_Z_vn_,n_zeta_Z,beta_Z_un_,beta_Z_vn_,n_beta_Z);
%%%%%%%%;
% For each gene and covariate, we can record the sorted-list of Label-pairs from Z_aucX__ and C_aucX__. ;
% We can compare this to the distribution of sorted-lists obtained in a (Label-Label) permutation-test. ;
% Similarly, for each Label-pair, we can record the sorted-list of genes and covariates from Z_aucX__ and C_aucX__. ;
% Again, we can compare this to the distribution of sorted-lists obtained in a (Label-Label) permutation-test. ;
% Note that, for now, this operation requires more than 24GB of ram (i.e., more than box615). ;
%%%%%%%%;
% In terms of notation: ;
% Use label K_ to refer to Z_rank_ * Z_rank_beta_un_ ;
% Use label H_ to refer to C_rank_ * Z_rank_zeta_un_ ;
%%%%%%%%;
n_u = size(C_rank_,1);
assert(size(Z_rank_,1)==n_u);
%%%%%%%%;
AB_ = struct('n_u',n_u);
AB_.n_u = n_u;
AB_.n_Sample_Label = n_Sample_Label;
AB_.n_CCOV = n_CCOV;
AB_.n_Z_GENE = n_Z_GENE;
AB_.n_zeta_Z = n_zeta_Z;
AB_.n_beta_Z = n_beta_Z;
%%%%%%%%;
AB_.AB_C_sort_list_ori__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.C_AB_sort_list_ori__ = zeros(n_Sample_Label.^2,n_CCOV);
AB_.AB_C_sort_list_ij__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.C_AB_sort_list_ij__ = zeros(n_Sample_Label.^2,n_CCOV);
%%%%%%%%;
%if flag_Z;
AB_.AB_Z_sort_list_ori__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_H_sort_list_ori__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_K_sort_list_ori__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.Z_AB_sort_list_ori__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.H_AB_sort_list_ori__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.K_AB_sort_list_ori__ = zeros(n_Sample_Label.^2,n_CCOV);
AB_.AB_Z_sort_list_ij__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_H_sort_list_ij__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_K_sort_list_ij__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.Z_AB_sort_list_ij__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.H_AB_sort_list_ij__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.K_AB_sort_list_ij__ = zeros(n_Sample_Label.^2,n_CCOV);
%end;%if flag_Z;
%%%%%%%%;
%n_iteration = 64;
AB_.n_iteration = n_iteration;
%%%%%%%%;
AB_.AB_C_sort_list_avg__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.C_AB_sort_list_avg__ = zeros(n_Sample_Label.^2,n_CCOV);
AB_.AB_C_sort_list_std__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.C_AB_sort_list_std__ = zeros(n_Sample_Label.^2,n_CCOV);
%%%%%%%%;
%if flag_Z;
AB_.AB_Z_sort_list_avg__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_H_sort_list_avg__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_K_sort_list_avg__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.Z_AB_sort_list_avg__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.H_AB_sort_list_avg__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.K_AB_sort_list_avg__ = zeros(n_Sample_Label.^2,n_CCOV);
AB_.AB_Z_sort_list_std__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_H_sort_list_std__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_K_sort_list_std__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.Z_AB_sort_list_std__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.H_AB_sort_list_std__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.K_AB_sort_list_std__ = zeros(n_Sample_Label.^2,n_CCOV);
%end;%if flag_Z;
%%%%%%%%;
AB_.AB_C_sort_list_p__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.C_AB_sort_list_p__ = zeros(n_Sample_Label.^2,n_CCOV);
%%%%%%%%;
%if flag_Z;
AB_.AB_Z_sort_list_p__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_H_sort_list_p__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
AB_.AB_K_sort_list_p__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
AB_.Z_AB_sort_list_p__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.H_AB_sort_list_p__ = zeros(n_Sample_Label.^2,n_Z_GENE);
AB_.K_AB_sort_list_p__ = zeros(n_Sample_Label.^2,n_CCOV);
%end;%if flag_Z;
%%%%%%%%;
%str_Sample_Label_ = C_.Cluster_ID_20161007(C_to_u_ID_);
u_Sample_Label_ = unique(str_Sample_Label_); assert(n_Sample_Label==length(u_Sample_Label_));
rng(1);
for niteration=0:n_iteration;
if (mod(niteration,1)==0); disp(sprintf(' %% niteration %d/%d',niteration,n_iteration)); end;
if (niteration==0); tmp_p_ = 1:n_u; else; tmp_p_ = randperm(n_u); end;
tmp_C_aucX__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
tmp_C_rank_avg_ = zeros(n_Sample_Label,n_CCOV);
%%%%%%%%;
%if flag_Z;
tmp_Z_aucX__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
tmp_H_aucX__ = zeros(n_Sample_Label,n_Sample_Label,n_Z_GENE);
tmp_K_aucX__ = zeros(n_Sample_Label,n_Sample_Label,n_CCOV);
tmp_Z_rank_avg_ = zeros(n_Sample_Label,n_Z_GENE);
tmp_H_rank_avg_ = zeros(n_Sample_Label,n_Z_GENE);
tmp_K_rank_avg_ = zeros(n_Sample_Label,n_CCOV);
%end;%if flag_Z;
%%%%%%%%;
for nA = 1:n_Sample_Label;
tmp_Label_A_ij_ = find(strcmp(str_Sample_Label_(tmp_p_),u_Sample_Label_{nA})); tmp_n_A = length(tmp_Label_A_ij_);
tmp_C_rank_avg_(nA,:) = mean(C_rank_(tmp_Label_A_ij_,:),1);
%if flag_Z;
tmp_Z_rank_avg_(nA,:) = mean(Z_rank_(tmp_Label_A_ij_,:),1);
tmp_H_rank_avg_(nA,:) = mean((ones(length(tmp_Label_A_ij_),1)*zeta_Z_un_(1,1:n_zeta_Z) + C_rank_(tmp_Label_A_ij_,:)*zeta_Z_un_(2:end,1:n_zeta_Z))*transpose(zeta_Z_vn_(:,1:n_zeta_Z)),1);
tmp_K_rank_avg_(nA,:) = mean((ones(length(tmp_Label_A_ij_),1)*beta_Z_un_(1,1:n_beta_Z) + Z_rank_(tmp_Label_A_ij_,:)*beta_Z_un_(2:end,1:n_beta_Z))*transpose(beta_Z_vn_(:,1:n_beta_Z)),1);
%end;%if flag_Z;
end;%for nA = 1:n_Sample_Label;
%%%%%%%%;
for nA = 1:n_Sample_Label;
for nB = 1:n_Sample_Label;
tmp_C_aucX__(nA,nB,:) = tmp_C_rank_avg_(nA,:) - tmp_C_rank_avg_(nB,:);
%tmp_C_aucX__(nB,nA,:) = -tmp_C_aucX__(nA,nB,:);
%if flag_Z;
tmp_Z_aucX__(nA,nB,:) = tmp_Z_rank_avg_(nA,:) - tmp_Z_rank_avg_(nB,:);
%tmp_Z_aucX__(nB,nA,:) = -tmp_Z_aucX__(nA,nB,:);
tmp_H_aucX__(nA,nB,:) = [tmp_Z_rank_avg_(nA,:) - tmp_Z_rank_avg_(nB,:)] - [tmp_H_rank_avg_(nA,:) - tmp_H_rank_avg_(nB,:)];
%tmp_H_aucX__(nB,nA,:) = -tmp_H_aucX__(nA,nB,:);
tmp_K_aucX__(nA,nB,:) = [tmp_C_rank_avg_(nA,:) - tmp_C_rank_avg_(nB,:)] - [tmp_K_rank_avg_(nA,:) - tmp_K_rank_avg_(nB,:)];
%tmp_K_aucX__(nB,nA,:) = -tmp_K_aucX__(nA,nB,:);
%end;%if flag_Z;
end;%for nB = 1:n_Sample_Label;
end;%for nA = 1:n_Sample_Label;
%%%%%%%%;
[tmp_AB_.AB_C_sort_list__,tmp_AB_.AB_C_sort_ij__] = sort(tmp_C_aucX__,3,'ascend');
[tmp_AB_.C_AB_sort_list__,tmp_AB_.C_AB_sort_ij__] = sort(reshape(tmp_C_aucX__,n_Sample_Label.^2,n_CCOV),2,'ascend');
%if flag_Z;
[tmp_AB_.AB_Z_sort_list__,tmp_AB_.AB_Z_sort_ij__] = sort(tmp_Z_aucX__,3,'ascend');
[tmp_AB_.AB_H_sort_list__,tmp_AB_.AB_H_sort_ij__] = sort(tmp_H_aucX__,3,'ascend');
[tmp_AB_.AB_K_sort_list__,tmp_AB_.AB_K_sort_ij__] = sort(tmp_K_aucX__,3,'ascend');
[tmp_AB_.Z_AB_sort_list__,tmp_AB_.Z_AB_sort_ij__] = sort(reshape(tmp_Z_aucX__,n_Sample_Label.^2,n_Z_GENE),2,'ascend');
[tmp_AB_.H_AB_sort_list__,tmp_AB_.H_AB_sort_ij__] = sort(reshape(tmp_H_aucX__,n_Sample_Label.^2,n_Z_GENE),2,'ascend');
[tmp_AB_.K_AB_sort_list__,tmp_AB_.K_AB_sort_ij__] = sort(reshape(tmp_K_aucX__,n_Sample_Label.^2,n_CCOV),2,'ascend');
%end;%if flag_Z;
%%%%%%%%;
if (niteration==0); 
%%%%%%%%;
AB_.AB_C_sort_list_ori__ = tmp_AB_.AB_C_sort_list__;
AB_.C_AB_sort_list_ori__ = tmp_AB_.C_AB_sort_list__;
AB_.AB_C_sort_list_ij__ = tmp_AB_.AB_C_sort_ij__;
AB_.C_AB_sort_list_ij__ = tmp_AB_.C_AB_sort_ij__;
%%%%%%%%;
%if flag_Z;
AB_.AB_Z_sort_list_ori__ = tmp_AB_.AB_Z_sort_list__;
AB_.AB_H_sort_list_ori__ = tmp_AB_.AB_H_sort_list__;
AB_.AB_K_sort_list_ori__ = tmp_AB_.AB_K_sort_list__;
AB_.Z_AB_sort_list_ori__ = tmp_AB_.Z_AB_sort_list__;
AB_.H_AB_sort_list_ori__ = tmp_AB_.H_AB_sort_list__;
AB_.K_AB_sort_list_ori__ = tmp_AB_.K_AB_sort_list__;
AB_.AB_Z_sort_list_ij__ = tmp_AB_.AB_Z_sort_ij__;
AB_.AB_H_sort_list_ij__ = tmp_AB_.AB_H_sort_ij__;
AB_.AB_K_sort_list_ij__ = tmp_AB_.AB_K_sort_ij__;
AB_.Z_AB_sort_list_ij__ = tmp_AB_.Z_AB_sort_ij__;
AB_.H_AB_sort_list_ij__ = tmp_AB_.H_AB_sort_ij__;
AB_.K_AB_sort_list_ij__ = tmp_AB_.K_AB_sort_ij__;
%end;%if flag_Z;
end; %if (niteration==0);
if (niteration>0);
AB_.AB_C_sort_list_avg__ = AB_.AB_C_sort_list_avg__ + tmp_AB_.AB_C_sort_list__;
AB_.C_AB_sort_list_avg__ = AB_.C_AB_sort_list_avg__ + tmp_AB_.C_AB_sort_list__;
AB_.AB_C_sort_list_std__ = AB_.AB_C_sort_list_std__ + tmp_AB_.AB_C_sort_list__.^2;
AB_.C_AB_sort_list_std__ = AB_.C_AB_sort_list_std__ + tmp_AB_.C_AB_sort_list__.^2;
%%%%%%%%;
%if flag_Z;
AB_.AB_Z_sort_list_avg__ = AB_.AB_Z_sort_list_avg__ + tmp_AB_.AB_Z_sort_list__;
AB_.AB_H_sort_list_avg__ = AB_.AB_H_sort_list_avg__ + tmp_AB_.AB_H_sort_list__;
AB_.AB_K_sort_list_avg__ = AB_.AB_K_sort_list_avg__ + tmp_AB_.AB_K_sort_list__;
AB_.Z_AB_sort_list_avg__ = AB_.Z_AB_sort_list_avg__ + tmp_AB_.Z_AB_sort_list__;
AB_.H_AB_sort_list_avg__ = AB_.H_AB_sort_list_avg__ + tmp_AB_.H_AB_sort_list__;
AB_.K_AB_sort_list_avg__ = AB_.K_AB_sort_list_avg__ + tmp_AB_.K_AB_sort_list__;
AB_.AB_Z_sort_list_std__ = AB_.AB_Z_sort_list_std__ + tmp_AB_.AB_Z_sort_list__.^2;
AB_.AB_H_sort_list_std__ = AB_.AB_H_sort_list_std__ + tmp_AB_.AB_H_sort_list__.^2;
AB_.AB_K_sort_list_std__ = AB_.AB_K_sort_list_std__ + tmp_AB_.AB_K_sort_list__.^2;
AB_.Z_AB_sort_list_std__ = AB_.Z_AB_sort_list_std__ + tmp_AB_.Z_AB_sort_list__.^2;
AB_.H_AB_sort_list_std__ = AB_.H_AB_sort_list_std__ + tmp_AB_.H_AB_sort_list__.^2;
AB_.K_AB_sort_list_std__ = AB_.K_AB_sort_list_std__ + tmp_AB_.K_AB_sort_list__.^2;
%end;%if flag_Z;
end;%if (niteration>0);
%%%%%%%%;
clear tmp_C_aucX__ tmp_C_rank_avg_ tmp_Z_aucX__ tmp_Z_aucX__ tmp_K_aucX__ tmp_Z_rank_avg_ tmp_H_rank_avg_ tmp_K_rank_avg_;
clear tmp_Label_A_ij_ tmp_C_rank_avg_ tmp_n_A tmp_Z_rank_avg_ tmp_H_rank_avg_ tmp_K_rank_avg_ ;
clear tmp_C_aucX__ tmp_Z_aucX__ tmp_H_aucX__ tmp_K_aucX__ ;
clear tmp_AB_.AB_C_sort_list__ tmp_AB_.C_AB_sort_list__ tmp_AB_.AB_Z_sort_list__ tmp_AB_.AB_H_sort_list__ tmp_AB_.AB_K_sort_list__ tmp_AB_.Z_AB_sort_list__ tmp_AB_.H_AB_sort_list__ tmp_AB_.K_AB_sort_list__ ;
clear tmp_AB_.AB_C_sort_ij__ tmp_AB_.C_AB_sort_ij__ tmp_AB_.AB_Z_sort_ij__ tmp_AB_.AB_H_sort_ij__ tmp_AB_.AB_K_sort_ij__ tmp_AB_.Z_AB_sort_ij__ tmp_AB_.H_AB_sort_ij__ tmp_AB_.K_AB_sort_ij__ ;
end;%for niteration=0:n_iteration;
AB_.AB_C_sort_list_avg__ = AB_.AB_C_sort_list_avg__/n_iteration;
AB_.C_AB_sort_list_avg__ = AB_.C_AB_sort_list_avg__/n_iteration;
AB_.AB_C_sort_list_std__ = sqrt(AB_.AB_C_sort_list_std__/n_iteration - AB_.AB_C_sort_list_avg__.^2);
AB_.C_AB_sort_list_std__ = sqrt(AB_.C_AB_sort_list_std__/n_iteration - AB_.C_AB_sort_list_avg__.^2);
%%%%%%%%;
%if flag_Z;
AB_.AB_Z_sort_list_avg__ = AB_.AB_Z_sort_list_avg__/n_iteration;
AB_.AB_H_sort_list_avg__ = AB_.AB_H_sort_list_avg__/n_iteration;
AB_.AB_K_sort_list_avg__ = AB_.AB_K_sort_list_avg__/n_iteration;
AB_.Z_AB_sort_list_avg__ = AB_.Z_AB_sort_list_avg__/n_iteration;
AB_.H_AB_sort_list_avg__ = AB_.H_AB_sort_list_avg__/n_iteration;
AB_.K_AB_sort_list_avg__ = AB_.K_AB_sort_list_avg__/n_iteration;
AB_.AB_Z_sort_list_std__ = sqrt(AB_.AB_Z_sort_list_std__/n_iteration - AB_.AB_Z_sort_list_avg__.^2);
AB_.AB_H_sort_list_std__ = sqrt(AB_.AB_H_sort_list_std__/n_iteration - AB_.AB_H_sort_list_avg__.^2);
AB_.AB_K_sort_list_std__ = sqrt(AB_.AB_K_sort_list_std__/n_iteration - AB_.AB_K_sort_list_avg__.^2);
AB_.Z_AB_sort_list_std__ = sqrt(AB_.Z_AB_sort_list_std__/n_iteration - AB_.Z_AB_sort_list_avg__.^2);
AB_.H_AB_sort_list_std__ = sqrt(AB_.H_AB_sort_list_std__/n_iteration - AB_.H_AB_sort_list_avg__.^2);
AB_.K_AB_sort_list_std__ = sqrt(AB_.K_AB_sort_list_std__/n_iteration - AB_.K_AB_sort_list_avg__.^2);
%end;%if flag_Z;
%%%%%%%%;
AB_.AB_C_sort_list_p__ = a_to_z_to_p_0(AB_.AB_C_sort_list_ori__,AB_.AB_C_sort_list_avg__,AB_.AB_C_sort_list_std__);
AB_.C_AB_sort_list_p__ = a_to_z_to_p_0(AB_.C_AB_sort_list_ori__,AB_.C_AB_sort_list_avg__,AB_.C_AB_sort_list_std__);
%if flag_Z;
AB_.AB_Z_sort_list_p__ = a_to_z_to_p_0(AB_.AB_Z_sort_list_ori__,AB_.AB_Z_sort_list_avg__,AB_.AB_Z_sort_list_std__);
AB_.AB_H_sort_list_p__ = a_to_z_to_p_0(AB_.AB_H_sort_list_ori__,AB_.AB_H_sort_list_avg__,AB_.AB_H_sort_list_std__);
AB_.AB_K_sort_list_p__ = a_to_z_to_p_0(AB_.AB_K_sort_list_ori__,AB_.AB_K_sort_list_avg__,AB_.AB_K_sort_list_std__);
AB_.Z_AB_sort_list_p__ = a_to_z_to_p_0(AB_.Z_AB_sort_list_ori__,AB_.Z_AB_sort_list_avg__,AB_.Z_AB_sort_list_std__);
AB_.H_AB_sort_list_p__ = a_to_z_to_p_0(AB_.H_AB_sort_list_ori__,AB_.H_AB_sort_list_avg__,AB_.H_AB_sort_list_std__);
AB_.K_AB_sort_list_p__ = a_to_z_to_p_0(AB_.K_AB_sort_list_ori__,AB_.K_AB_sort_list_avg__,AB_.K_AB_sort_list_std__);
%end;%if flag_Z;
%%%%%%%%;

%%%%%%%%;
% Now run through the cluster pairs, ;
% accumulating the covariates and genes which contribute most to the differences. ;
%%%%%%%%;
%if flag_Z;
AB_.AB_C_absZ_avg__ = zeros(n_CCOV,1);
AB_.AB_Z_absZ_avg__ = zeros(n_Z_GENE,1);
AB_.AB_H_absZ_avg__ = zeros(n_Z_GENE,1);
AB_.AB_K_absZ_avg__ = zeros(n_CCOV,1);
AB_.AB_C_rawZ_avg__ = zeros(n_CCOV,1);
AB_.AB_Z_rawZ_avg__ = zeros(n_Z_GENE,1);
AB_.AB_H_rawZ_avg__ = zeros(n_Z_GENE,1);
AB_.AB_K_rawZ_avg__ = zeros(n_CCOV,1);
%end;%if flag_Z;
tmp_s = (n_Sample_Label - 1) * n_Sample_Label ;
for nA = 1:n_Sample_Label;
for nB = 1:n_Sample_Label;
if (nA~=nB);
tmp_sgn = 0; if (nA>nB); tmp_sgn = -1; end; if (nB>nA); tmp_sgn = +1; end;
%if flag_Z;
%%%%%%%%;
tmp_ij_ = squeeze(AB_.AB_C_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze( abs(AB_.AB_C_sort_list_ori__(nA,nB,:) - AB_.AB_C_sort_list_avg__(nA,nB,:))./AB_.AB_C_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_C_absZ_avg__(tmp_ij_) = AB_.AB_C_absZ_avg__(tmp_ij_) + tmp_z_/tmp_s;
tmp_ij_ = squeeze(AB_.AB_Z_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze( abs(AB_.AB_Z_sort_list_ori__(nA,nB,:) - AB_.AB_Z_sort_list_avg__(nA,nB,:))./AB_.AB_Z_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_Z_absZ_avg__(tmp_ij_) = AB_.AB_Z_absZ_avg__(tmp_ij_) + tmp_z_/tmp_s;
tmp_ij_ = squeeze(AB_.AB_H_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze( abs(AB_.AB_H_sort_list_ori__(nA,nB,:) - AB_.AB_H_sort_list_avg__(nA,nB,:))./AB_.AB_H_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_H_absZ_avg__(tmp_ij_) = AB_.AB_H_absZ_avg__(tmp_ij_) + tmp_z_/tmp_s;
tmp_ij_ = squeeze(AB_.AB_K_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze( abs(AB_.AB_K_sort_list_ori__(nA,nB,:) - AB_.AB_K_sort_list_avg__(nA,nB,:))./AB_.AB_K_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_K_absZ_avg__(tmp_ij_) = AB_.AB_K_absZ_avg__(tmp_ij_) + tmp_z_/tmp_s;
%%%%%%%%;
tmp_ij_ = squeeze(AB_.AB_C_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze(    (AB_.AB_C_sort_list_ori__(nA,nB,:) - AB_.AB_C_sort_list_avg__(nA,nB,:))./AB_.AB_C_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_C_rawZ_avg__(tmp_ij_) = AB_.AB_C_rawZ_avg__(tmp_ij_) + tmp_sgn*tmp_z_/tmp_s;
tmp_ij_ = squeeze(AB_.AB_Z_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze(    (AB_.AB_Z_sort_list_ori__(nA,nB,:) - AB_.AB_Z_sort_list_avg__(nA,nB,:))./AB_.AB_Z_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_Z_rawZ_avg__(tmp_ij_) = AB_.AB_Z_rawZ_avg__(tmp_ij_) + tmp_sgn*tmp_z_/tmp_s;
tmp_ij_ = squeeze(AB_.AB_H_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze(    (AB_.AB_H_sort_list_ori__(nA,nB,:) - AB_.AB_H_sort_list_avg__(nA,nB,:))./AB_.AB_H_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_H_rawZ_avg__(tmp_ij_) = AB_.AB_H_rawZ_avg__(tmp_ij_) + tmp_sgn*tmp_z_/tmp_s;
tmp_ij_ = squeeze(AB_.AB_K_sort_list_ij__(nA,nB,:)); tmp_z_ = squeeze(    (AB_.AB_K_sort_list_ori__(nA,nB,:) - AB_.AB_K_sort_list_avg__(nA,nB,:))./AB_.AB_K_sort_list_std__(nA,nB,:) / sqrt(2) ); AB_.AB_K_rawZ_avg__(tmp_ij_) = AB_.AB_K_rawZ_avg__(tmp_ij_) + tmp_sgn*tmp_z_/tmp_s;
%%%%%%%%;
%end;%if flag_Z;
end;%if (nA~=nB);
end;%for nB = 1:n_Sample_Label;
end;%for nA = 1:n_Sample_Label;
clear tmp_ij_ tmp_z_ tmp_s;

%%%%%%%%;
% Now run through the cluster pairs, ;
% recording the labels for each pair. ;
%%%%%%%%
n_Sample_Label = AB_.n_Sample_Label;
u_Sample_Label_ = unique(str_Sample_Label_); assert(n_Sample_Label==length(u_Sample_Label_));
n_s = n_Sample_Label*n_Sample_Label;
AB_.CLabel_pair_ = cell(n_s,1);
ns=0;
for nA=1:n_Sample_Label;
for nB=1:n_Sample_Label;
AB_.CLabel_pair_{1+ns} = sprintf('%s,%s',u_Sample_Label_{nA},u_Sample_Label_{nB});
ns = ns+1;
end;%for nB=1:n_Sample_Label;
end;%for nA=1:n_Sample_Label;

%%%%%%%%;
% Now run through the cluster pairs, ;
% recording the absolute-value of the z-score for each covariate. ;
%%%%%%%%
n_CCOV = AB_.n_CCOV;
n_Sample_Label = AB_.n_Sample_Label;
n_s = n_Sample_Label*n_Sample_Label;
%flag_disp=1;
%if flag_disp;
%if flag_Z;
AB_.AB_C_absZ_ = zeros(n_s,n_CCOV);
AB_.AB_K_absZ_ = zeros(n_s,n_CCOV);
AB_.AB_C_rawZ_ = zeros(n_s,n_CCOV);
AB_.AB_K_rawZ_ = zeros(n_s,n_CCOV);
ns=0;
for nA=1:n_Sample_Label;
for nB=1:n_Sample_Label;
%%%%%%%%;
tmp_ij1_ = squeeze(AB_.AB_C_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze( abs(AB_.AB_C_sort_list_ori__(nA,nB,:) - AB_.AB_C_sort_list_avg__(nA,nB,:))./AB_.AB_C_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_C_absZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
tmp_ij1_ = squeeze(AB_.AB_K_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze( abs(AB_.AB_K_sort_list_ori__(nA,nB,:) - AB_.AB_K_sort_list_avg__(nA,nB,:))./AB_.AB_K_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_K_absZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
%%%%%%%%;
tmp_ij1_ = squeeze(AB_.AB_C_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze(    (AB_.AB_C_sort_list_ori__(nA,nB,:) - AB_.AB_C_sort_list_avg__(nA,nB,:))./AB_.AB_C_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_C_rawZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
tmp_ij1_ = squeeze(AB_.AB_K_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze(    (AB_.AB_K_sort_list_ori__(nA,nB,:) - AB_.AB_K_sort_list_avg__(nA,nB,:))./AB_.AB_K_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_K_rawZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
%%%%%%%%;
ns = ns+1;
end;%for nB=1:n_Sample_Label;
end;%for nA=1:n_Sample_Label;

%%%%%%%%;
% Now run through the cluster pairs, ;
% recording the absolute-value of the z-score for each gene. ;
%%%%%%%%
n_Z_GENE = AB_.n_Z_GENE;
n_Sample_Label = AB_.n_Sample_Label;
n_s = n_Sample_Label*n_Sample_Label;
%flag_disp=1;
%if flag_disp;
%if flag_Z;
AB_.AB_Z_absZ_ = zeros(n_s,n_Z_GENE);
AB_.AB_H_absZ_ = zeros(n_s,n_Z_GENE);
AB_.AB_Z_rawZ_ = zeros(n_s,n_Z_GENE);
AB_.AB_H_rawZ_ = zeros(n_s,n_Z_GENE);
ns=0;
for nA=1:n_Sample_Label;
for nB=1:n_Sample_Label;
%%%%%%%%;
tmp_ij1_ = squeeze(AB_.AB_Z_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze( abs(AB_.AB_Z_sort_list_ori__(nA,nB,:) - AB_.AB_Z_sort_list_avg__(nA,nB,:))./AB_.AB_Z_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_Z_absZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
tmp_ij1_ = squeeze(AB_.AB_H_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze( abs(AB_.AB_H_sort_list_ori__(nA,nB,:) - AB_.AB_H_sort_list_avg__(nA,nB,:))./AB_.AB_H_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_H_absZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
%%%%%%%%;
tmp_ij1_ = squeeze(AB_.AB_Z_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze(    (AB_.AB_Z_sort_list_ori__(nA,nB,:) - AB_.AB_Z_sort_list_avg__(nA,nB,:))./AB_.AB_Z_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_Z_rawZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
tmp_ij1_ = squeeze(AB_.AB_H_sort_list_ij__(nA,nB,:)); 
tmp_z_ = squeeze(    (AB_.AB_H_sort_list_ori__(nA,nB,:) - AB_.AB_H_sort_list_avg__(nA,nB,:))./AB_.AB_H_sort_list_std__(nA,nB,:) / sqrt(2) ); 
tmp_ij2_ = find(isfinite(tmp_z_));
AB_.AB_H_rawZ_(1+ns,tmp_ij1_(tmp_ij2_)) = tmp_z_(tmp_ij2_);
%%%%%%%%;
ns = ns+1;
end;%for nB=1:n_Sample_Label;
end;%for nA=1:n_Sample_Label;

%%%%%%%%;
% Now pulling together results from transcript-differential-expression across AIBS cluster-pairs. ;
%%%%%%%%;
cp_row_ = zeros(2*n_Sample_Label^2,1);
cp_col_ = zeros(2*n_Sample_Label^2,1);
cp_val_ = zeros(2*n_Sample_Label^2,1);
na=0;
for nSample_Label_A=1:n_Sample_Label;
for nSample_Label_B=1:n_Sample_Label;
tmp_tab = 1 + (nSample_Label_A-1) + (nSample_Label_B-1)*n_Sample_Label;
cp_row_(1+na) = nSample_Label_A;
cp_col_(1+na) = tmp_tab;
cp_val_(1+na) = 1;
na = na+1;
cp_row_(1+na) = nSample_Label_B;
cp_col_(1+na) = tmp_tab;
cp_val_(1+na) = 1;
na = na+1;
end;%for nSample_Label_B=1:n_Sample_Label;
end;%for nSample_Label_A=1:n_Sample_Label;
assert(na==2*n_Sample_Label^2);
cp_ = sparse(cp_row_,cp_col_,cp_val_,n_Sample_Label,n_Sample_Label^2);
%%%%%%%%;
AB_.cp_markergene_ = zeros(1+n_Sample_Label,1);
tmp_AB_Z_ = AB_.AB_Z_rawZ_;
tmp_AB_H_ = AB_.AB_H_rawZ_;
%%%%%%%%;
AB_.cp_markergene_(1) = corr(tmp_AB_Z_(:),tmp_AB_H_(:));
for nSample_Label=1:n_Sample_Label;
tmp_ij_ = find(cp_(nSample_Label,:));
tmp_Z_ = tmp_AB_Z_(tmp_ij_,:);
tmp_H_ = tmp_AB_H_(tmp_ij_,:);
AB_.cp_markergene_(1+nSample_Label) = corr(tmp_Z_(:),tmp_H_(:));
end;%for nSample_Label=1:n_Sample_Label;
%%%%%%%%;

%%%%%%%%;
% clear large portions of AB_. ;
%%%%%%%%;
AB_.AB_Z_sort_list_ori__=[];
AB_.AB_H_sort_list_ori__=[];
AB_.Z_AB_sort_list_ori__=[];
AB_.H_AB_sort_list_ori__=[];
AB_.AB_Z_sort_list_ij__=[];
AB_.AB_H_sort_list_ij__=[];
AB_.Z_AB_sort_list_ij__=[];
AB_.H_AB_sort_list_ij__=[];
AB_.AB_Z_sort_list_avg__=[];
AB_.AB_H_sort_list_avg__=[];
AB_.Z_AB_sort_list_avg__=[];
AB_.H_AB_sort_list_avg__=[];
AB_.AB_Z_sort_list_std__=[];
AB_.AB_H_sort_list_std__=[];
AB_.Z_AB_sort_list_std__=[];
AB_.H_AB_sort_list_std__=[];
AB_.AB_Z_sort_list_p__=[];
AB_.AB_H_sort_list_p__=[];
AB_.Z_AB_sort_list_p__=[];
AB_.H_AB_sort_list_p__=[];
AB_.AB_Z_absZ_=[];
AB_.AB_H_absZ_=[];
AB_.AB_Z_rawZ_=[];
AB_.AB_H_rawZ_=[];
fname_mat = sprintf('%s/dir_mat/dir_AB/AB_%s_.mat',dir_trunk,str_prefix);
save(fname_mat,'AB_');
%%%%%%%%;

