function [aid_0_,age_0_,dat_0__,aid_1_,age_1_,dat_1__,n_smp_0,n_smp_1,prm_aid__,index_aid_0__,index_aid_1__] = dolphin_bootstrap_0(aid_,age_,dat__,rseed,bootstrap_fraction);
if (nargin<5); bootstrap_fraction = []; end;
if isempty(bootstrap_fraction); bootstrap_fraction = 0.5; end;

verbose = 0;

u_aid_ = unique(aid_);
n_aid = numel(u_aid_);
n_aid_ = zeros(n_aid,1);
index_aid__ = cell(n_aid,1);
for naid=0:n_aid-1;
tmp_index_aid_ = efind(aid_==u_aid_(1+naid));
index_aid__{1+naid} = tmp_index_aid_;
n_aid_(1+naid) = numel(index_aid__{1+naid});
end;%for naid=0:n_aid-1;

rng(rseed);
prm_aid__ = cell(n_aid,1);
n_index_aid_0__ = cell(n_aid,1);
index_aid_1__ = cell(n_aid,1);
n_smp_0 = 0;
n_smp_1 = 0;
for naid=0:n_aid-1;
prm_aid__{1+naid} = randperm(n_aid_(1+naid));
ncut = max(1,min(n_aid_(1+naid),floor(bootstrap_fraction*n_aid_(1+naid))));
if (verbose); disp(sprintf(' %% naid %d/%d n_aid_(1+naid) %d ncut %d [%d,%d]',naid,n_aid,n_aid_(1+naid),ncut,ncut,n_aid_(1+naid)-ncut)); end;
index_aid_0__{1+naid} = index_aid__{1+naid}(prm_aid__{1+naid}(1 + (0:ncut-1)));
n_smp_0 = n_smp_0 + numel(index_aid_0__{1+naid});
index_aid_1__{1+naid} = index_aid__{1+naid}(prm_aid__{1+naid}(1 + (ncut:n_aid_(1+naid)-1)));
n_smp_1 = n_smp_1 + numel(index_aid_1__{1+naid});
end;%for naid=0:n_aid-1;

aid_0_ = zeros(n_smp_0,1);
aid_1_ = zeros(n_smp_1,1);
age_0_ = zeros(n_smp_0,1);
age_1_ = zeros(n_smp_1,1);
dat_0__ = zeros(n_smp_0,size(dat__,2));
dat_1__ = zeros(n_smp_1,size(dat__,2));
nsmp_0 = 0; nsmp_1 = 0;
for naid=0:n_aid-1;
index_aid_0_ = index_aid_0__{1+naid};
tmp_nsmp_0 = numel(index_aid_0_);
tmp_index_0_ = nsmp_0 + (0:tmp_nsmp_0-1);
aid_0_(1+tmp_index_0_) = aid_(1+index_aid_0_);
age_0_(1+tmp_index_0_) = age_(1+index_aid_0_);
dat_0__(1+tmp_index_0_,:) = dat__(1+index_aid_0_,:);
index_aid_1_ = index_aid_1__{1+naid};
nsmp_0 = nsmp_0 + tmp_nsmp_0;
tmp_nsmp_1 = numel(index_aid_1_);
tmp_index_1_ = nsmp_1 + (0:tmp_nsmp_1-1);
aid_1_(1+tmp_index_1_) = aid_(1+index_aid_1_);
age_1_(1+tmp_index_1_) = age_(1+index_aid_1_);
dat_1__(1+tmp_index_1_,:) = dat__(1+index_aid_1_,:);
nsmp_1 = nsmp_1 + tmp_nsmp_1;
end;%for naid=0:n_aid-1;
assert(nsmp_0==n_smp_0);
assert(nsmp_1==n_smp_1);
