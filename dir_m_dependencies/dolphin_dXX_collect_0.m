function dZ = dolphin_dXX_collect_0(dXX,n_shuffle);
setup_OptiPlex; dir_trunk = '/home/rangan/dir_bcc/dir_dolphin';
%setup_access1; dir_trunk = '/data/rangan/dir_bcc/dir_dolphin';
dir_jpg = sprintf('%s/dir_jpg',dir_trunk);
dir_mat = sprintf('%s/dir_mat',dir_trunk);
flag_replot=0;
flag_recalc=0;
flag_drift0=1;
flag_a_is_0=0;
flag_center=1;
verbose=0;

fname_infix = sprintf('aid%.2dd%dc%d',dXX,flag_drift0,flag_center);
fname_mat = sprintf('%s/dolphin_%s_s0000.mat',dir_mat,fname_infix);
tmp_ = load(fname_mat);
n_var = numel(tmp_.a_);

a_Z_ = [];
A_Z__ = [];
BB_Z__ = [];
CC_Z__ = [];
a_nlp_ = [];
A_nlp__ = [];
BB_nlp__ = [];
CC_nlp__ = [];

flag_all = 1;
for nshuffle=1:n_shuffle;
fname_mat = sprintf('%s/dolphin_%s_s%.4d.mat',dir_mat,fname_infix,nshuffle);
flag_all = flag_all * exist(fname_mat,'file');
end;%for nshuffle=1:n_shuffle;
if flag_all;
%%%%%%%%;
% collect null distribution. ;
%%%%%%%%;
if flag_a_is_0==0; a_null_avg_ = zeros(n_var,1); end;
A_null_avg__ = zeros(n_var,n_var);
BB_null_avg__ = zeros(n_var,n_var);
CC_null_avg__ = zeros(n_var,n_var);
if flag_a_is_0==0; a_null_std_ = zeros(n_var,1); end;
A_null_std__ = zeros(n_var,n_var);
BB_null_std__ = zeros(n_var,n_var);
CC_null_std__ = zeros(n_var,n_var);
for nshuffle=1:n_shuffle;
fname_mat = sprintf('%s/dolphin_%s_s%.4d.mat',dir_mat,fname_infix,nshuffle);
tmp_ = load(fname_mat);
[~,tmp_index] = min(tmp_.L_(1:1+tmp_.niteration)); tmp_index = tmp_index-1;
if flag_a_is_0==0; a_null_avg_ = a_null_avg_ + tmp_.a__{1+tmp_index}; end;
A_null_avg__ = A_null_avg__ + tmp_.A___{1+tmp_index};
BB_null_avg__ = BB_null_avg__ + tmp_.BB___{1+tmp_index};
CC_null_avg__ = CC_null_avg__ + tmp_.CC___{1+tmp_index};
if flag_a_is_0==0; a_null_std_ = a_null_std_ + tmp_.a__{1+tmp_index}.^2; end;
A_null_std__ = A_null_std__ + tmp_.A___{1+tmp_index}.^2;
BB_null_std__ = BB_null_std__ + tmp_.BB___{1+tmp_index}.^2;
CC_null_std__ = CC_null_std__ + tmp_.CC___{1+tmp_index}.^2;
clear tmp_;
end;%for nshuffle=1:n_shuffle;
if flag_a_is_0==0; a_null_avg_ = a_null_avg_ / n_shuffle; end;
A_null_avg__ = A_null_avg__ / n_shuffle;
BB_null_avg__ = BB_null_avg__ / n_shuffle;
CC_null_avg__ = CC_null_avg__ / n_shuffle;
if flag_a_is_0==0; a_null_std_ = sqrt(a_null_std_/n_shuffle - a_null_avg_.^2); end;
A_null_std__ = sqrt(A_null_std__/n_shuffle - A_null_avg__.^2);
BB_null_std__ = sqrt(BB_null_std__/n_shuffle - BB_null_avg__.^2);
CC_null_std__ = sqrt(CC_null_std__/n_shuffle - CC_null_avg__.^2);
fname_mat = sprintf('%s/dolphin_%s_s0000.mat',dir_mat,fname_infix);
tmp_ = load(fname_mat);
[~,tmp_index] = min(tmp_.L_(1:1+2)); tmp_index = tmp_index-1;
if flag_a_is_0==0; a_ = tmp_.a__{1+tmp_index}; end;
A__ = tmp_.A___{1+tmp_index};
BB__ = tmp_.BB___{1+tmp_index};
CC__ = tmp_.CC___{1+tmp_index};
clear tmp_;
if flag_a_is_0==0; a_Z_ = real((a_ - a_null_avg_)./a_null_std_); end;
A_Z__ = real((A__ - A_null_avg__)./A_null_std__);
BB_Z__ = real((BB__ - BB_null_avg__)./BB_null_std__);
CC_Z__ = real((CC__ - CC_null_avg__)./CC_null_std__);
if flag_a_is_0==0; a_nlp_ = -z_to_lp(a_Z_); end;
A_nlp__ = -z_to_lp(A_Z__);
BB_nlp__ = -z_to_lp(BB_Z__);
CC_nlp__ = -z_to_lp(CC_Z__);
%%%%%%%%;   
fname_fig = sprintf('%s/dolphin_%s_aABC_nlp_0',dir_jpg,fname_infix);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
if (verbose>0); disp(sprintf(' %% %s not found, creating',fname_fig)); end;
figure(1);
clf;
if flag_a_is_0==0;
subplot(2,2,1);
bar(a_nlp_);
set(gca,'XTick',1:n_var,'XTickLabel',string_dat_name_); xtickangle(90);
title('-log p for drift a_','Interpreter','none');
end;%if flag_a_is_0==0;
subplot(2,2,2);
colormap(colormap_beach());
imagesc(A_nlp__,[0,6]); axis image;
set(gca,'YTick',1:n_var,'YTickLabel',string_dat_name_);
set(gca,'XTick',1:n_var,'XTickLabel',string_dat_name_); xtickangle(90);
set(gca,'TickLength',[0,0]);
set(gca,'fontsize',6);
%colorbar;
title('-log p for interaction A__','Interpreter','none');
subplot(2,2,3);
colormap(colormap_beach());
imagesc(BB_nlp__,[0,6]); axis image;
set(gca,'YTick',1:n_var,'YTickLabel',string_dat_name_);
set(gca,'XTick',1:n_var,'XTickLabel',string_dat_name_); xtickangle(90);
set(gca,'TickLength',[0,0]);
set(gca,'fontsize',6);
%colorbar;
title('-log p for SDE noise BB__','Interpreter','none');
subplot(2,2,4);
colormap(colormap_beach());
imagesc(CC_nlp__,[0,6]); axis image;
set(gca,'YTick',1:n_var,'YTickLabel',string_dat_name_);
set(gca,'XTick',1:n_var,'XTickLabel',string_dat_name_); xtickangle(90);
set(gca,'TickLength',[0,0]);
set(gca,'fontsize',6);
%colorbar;
title('-log p for observation noise CC__','Interpreter','none');
figbig;
sgtitle('coefficient matrices','Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));
if ( exist(sprintf('%s.jpg',fname_fig),'file'));
if (verbose); disp(sprintf(' %% %s found, not creating',fname_fig)); end;
end;%if ( exist(sprintf('%s.jpg',fname_fig),'file'));
%%%%%%%%;
end;%if flag_all;

dZ = struct('type','dZ');
dZ.a_Z_ = a_Z_;
dZ.A_Z__ = A_Z__;
dZ.BB_Z__ = BB_Z__;
dZ.CC_Z__ = CC_Z__;
dZ.a_nlp_ = a_nlp_;
dZ.A_nlp__ = A_nlp__;
dZ.BB_nlp__ = BB_nlp__;
dZ.CC_nlp__ = CC_nlp__;


