% Note the following asymmetry regarding sparse matrices: ;
% summing over columns is *much* faster than summing over rows. ;
% (i.e., about 25 times faster for the example below). ;
%{
tmp_N = 1024*8;
tmp_ = sparse(randperm(tmp_N),randperm(tmp_N),1,tmp_N,tmp_N);
disp('sum(*,2)'); tic;for nl=1:1024;sum(tmp_(:,max(1,min(tmp_N,floor(tmp_N*rand())))),2); end;toc;
disp('sum(*,1)'); tic;for nl=1:1024;sum(tmp_(max(1,min(tmp_N,floor(tmp_N*rand()))),:),1); end;toc;
 %}

clear; setup; verbose=1; 
cl_num_arm1 = 4; cl_num_arm2 = 1;
flag_dex_vs_lak = 'dex'; if (strcmp(flag_dex_vs_lak,'lak')); gamma = 0.001; mc_string = ''; else; gamma = 0.004; mc_string = ''; end; 
flag_reverse_use = 0;
B_MLT=34;n_mds=20;
pca_rank = 2; pca_b_mlt = 44;
set(groot,'defaultFigureCreateFcn',@(fig,~)addToolbarExplorationButtons(fig));
set(groot,'defaultAxesCreateFcn',@(ax,~)set(ax.Toolbar,'Visible','off'));
addpath('/data/rangan/dir_bcc/dir_code_022316');
addpath('/data/rangan/dir_bcc/dir_PGC_20180304/dir_m');
dir_trunk = '/data/rangan/dir_bcc/dir_PGC_20180304';
%%%%%%%%;
verbose = 1; n_figure = 1;
B_MLT = 34; n_mds = 20; n_scramble = 1; n_shuffle = 0;
flag_dex_vs_lak = {'dex'};
if (strcmp(flag_dex_vs_lak{1},'dex')); gamma = 0.004; mc_string = ''; end; 
if (strcmp(flag_dex_vs_lak{1},'lak')); gamma = 0.001; mc_string = 'm20_p85'; end;
flag_reverse = flag_reverse_use;
cl_num = cl_num_arm1;
n_maf = 5; n_cov = 2;
%%%%%%%%;
lisa_setprefix_ver2 ;
lisa_setnames_ver2 ;
lisa_xdropextract_ver2 ;
lisa_loadmdsfambim_ver2 ;
lisa_mxcheck_ver2 ;
lisa_studyindex_ver2 ;
lisa_traceextract_ver2 ;
%%%%%%%%;
bim_arm1_ = bim_;
fam_arm1_ = fam_;
fam_name_arm1_ = fam_name_;
mds_sort_arm1_ = mds_sort_;
string_prefix_arm1 = string_prefix;
%string_name_arm1 = string_name;
string_name_r1_arm1 = string_name;
string_name_r0_arm1 = string_name_r0;
dir__in_arm1 = dir__in;
%dir_out_s0000_arm1 = dir_out_s0000;
dir_out_s0000_r1_arm1 = dir_out_s0000;
dir_out_s0000_r0_arm1 = dir_out_s0000_r0;
%dir_out_trace_arm1 = dir_out_trace;
dir_out_trace_r1_arm1 = dir_out_trace;
dir_out_trace_r0_arm1 = dir_out_trace_r0;
trace_r1_arm1_ = trace_;
%%%%%%%%;
clear bim_ fam_ mds_sort_ mds_;
%%%%%%%%;
verbose = 1;
B_MLT = 34; n_mds = 20; n_scramble = 1; n_shuffle = 0;
flag_dex_vs_lak = {'dex'};
if (strcmp(flag_dex_vs_lak{1},'dex')); gamma = 0.004; mc_string = ''; end; 
if (strcmp(flag_dex_vs_lak{1},'lak')); gamma = 0.001; mc_string = 'm20_p85'; end;
flag_reverse = flag_reverse_use;
cl_num = cl_num_arm2;
n_maf = 5; n_cov = 2;
%%%%%%%%;
lisa_setprefix_ver2 ;
lisa_setnames_ver2 ;
lisa_xdropextract_ver2 ;
lisa_loadmdsfambim_ver2 ;
lisa_mxcheck_ver2 ;
lisa_studyindex_ver2 ;
lisa_traceextract_ver2 ;
%%%%%%%%;
study_trunk_arm2_ = study_trunk_;
study_name_arm2_ = study_name_;
n_study_arm2 = n_study;
bim_arm2_ = bim_;
fam_arm2_ = fam_;
fam_name_arm2_ = fam_name_;
mds_sort_arm2_ = mds_sort_;
string_prefix_arm2 = string_prefix;
%string_name_arm2 = string_name;
string_name_r1_arm2 = string_name;
string_name_r0_arm2 = string_name_r0;
dir__in_arm2 = dir__in;
%dir_out_s0000_arm2 = dir_out_s0000;
dir_out_s0000_r1_arm2 = dir_out_s0000;
dir_out_s0000_r0_arm2 = dir_out_s0000_r0;
%dir_out_trace_arm2 = dir_out_trace;
dir_out_trace_r1_arm2 = dir_out_trace;
dir_out_trace_r0_arm2 = dir_out_trace_r0;
trace_r1_arm2_ = trace_;
%%%%%%%%;
clear bim_ fam_ mds_sort_ mds_;
%%%%%%%%;

%%%%%%%%%%%%%%%%;
% copy fam file. ;
%%%%%%%%%%%%%%%%;
ni=1;
fam_fam_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_iid_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_pat_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_mat_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_sex_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_phe_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_dir_arm1_ = fam_arm1_{ni}; ni=ni+1;
%%%%%%%%%%%%%%%%;
% extract mc;
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_D_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_X_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_D_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_X_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==1);
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
disp(sprintf('mr_D_arm1_ error: %0.16f',norm(cast(mr_D_arm1_,'double')-cast(fam_phe_arm1_==2,'double'))));
disp(sprintf('mr_X_arm1_ error: %0.16f',norm(cast(mr_X_arm1_,'double')-cast(fam_phe_arm1_==1,'double'))));
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
disp(sprintf('mr_D_arm1_ error: %0.16f',norm(cast(mr_D_arm1_,'double')-cast(fam_phe_arm1_==1,'double'))));
disp(sprintf('mr_X_arm1_ error: %0.16f',norm(cast(mr_X_arm1_,'double')-cast(fam_phe_arm1_==2,'double'))));
end;%if (flag_reverse_use==1);

%%%%%%%%%%%%%%%%;
% copy fam file. ;
%%%%%%%%%%%%%%%%;
ni=1;
fam_fam_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_iid_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_pat_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_mat_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_sex_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_phe_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_dir_arm2_ = fam_arm2_{ni}; ni=ni+1;
%%%%%%%%%%%%%%%%;
% extract mc;
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_D_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_X_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_D_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_X_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==1);
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
disp(sprintf('mr_D_arm2_ error: %0.16f',norm(cast(mr_D_arm2_,'double')-cast(fam_phe_arm2_==2,'double'))));
disp(sprintf('mr_X_arm2_ error: %0.16f',norm(cast(mr_X_arm2_,'double')-cast(fam_phe_arm2_==1,'double'))));
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
disp(sprintf('mr_D_arm2_ error: %0.16f',norm(cast(mr_D_arm2_,'double')-cast(fam_phe_arm2_==1,'double'))));
disp(sprintf('mr_X_arm2_ error: %0.16f',norm(cast(mr_X_arm2_,'double')-cast(fam_phe_arm2_==2,'double'))));
end;%if (flag_reverse_use==1);

dir_out_s0000_pca_r0_arm1 = sprintf('%s/dir_pca',dir_out_s0000_r0_arm1);
if (~exist(dir_out_s0000_pca_r0_arm1,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_r0_arm1)); mkdir(dir_out_s0000_pca_r0_arm1); end;
dir_out_s0000_pca_r1_arm1 = sprintf('%s/dir_pca',dir_out_s0000_r1_arm1);
if (~exist(dir_out_s0000_pca_r1_arm1,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_r1_arm1)); mkdir(dir_out_s0000_pca_r1_arm1); end;

niteration = 275;
%%%%%%%%%%%%%%%%;
%extract rdrop ;
%%%%%%%%%%%%%%%%;
out_xdrop_a_r0_arm1_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r0_arm1));
tmp_ = out_xdrop_a_r0_arm1_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r0_arm1_ = tmp_; clear out_xdrop_a_r0_arm1_; clear tmp_;
out_xdrop_a_r1_arm1_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r1_arm1));
tmp_ = out_xdrop_a_r1_arm1_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r1_arm1_ = tmp_; clear out_xdrop_a_r1_arm1_; clear tmp_;
out_xdrop_a_r0_arm2_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r0_arm2));
tmp_ = out_xdrop_a_r0_arm2_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r0_arm2_ = tmp_; clear out_xdrop_a_r0_arm2_; clear tmp_;
out_xdrop_a_r1_arm2_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r1_arm2));
tmp_ = out_xdrop_a_r1_arm2_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r1_arm2_ = tmp_; clear out_xdrop_a_r1_arm2_; clear tmp_;
%%%%%%%%%%%%%%%%;
%extract trace ;
%%%%%%%%%%%%%%%%;
out_trace_r0_arm1_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r0_arm1));
out_trace_r1_arm1_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r1_arm1));
out_trace_r0_arm2_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r0_arm2));
out_trace_r1_arm2_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r1_arm2));
%%%%%%%%%%%%%%%%;
disp(sprintf(' %% niteration %d',niteration));
%%%%%%%%;
pca_infix_r0_base = sprintf('pca_ni%d_tst%d',niteration,cl_num_arm1);
V_r0_base_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_.mda',dir_out_s0000_pca_r0_arm1,pca_infix_r0_base,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with (all) the snps in arm1, ordered to apply to arm1. ;
pca_infix_r0_arm1 = sprintf('pca_ni%d_tst%d',niteration,cl_num_arm2);
V_r0_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_.mda',dir_out_s0000_pca_r0_arm1,pca_infix_r0_arm1,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with the snps in both arm1 and arm2, ordered to apply to arm1. ;
V_r0_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_arm2_.mda',dir_out_s0000_pca_r0_arm1,pca_infix_r0_arm1,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with the snps in both arm1 and arm2, ordered to apply to arm2. ;
% Note that V_r0_arm1_ and V_r0_arm2_ are simply permutations of one another. ;
% While V_r0_base_ is not a permutation of V_r0_arm1_, these two vectors are quite correlated. ; plot(V_r0_base_(:,1),V_r0_arm1_(:,1),'.') ;
%%%%%%%%;
pca_proj_infix_r0_arm1 = sprintf('pca_proj_arm1_ni%d_tst%d',niteration,cl_num_arm2); %<-- Note that here we use the projection of arm1, with snps limited by overlap with arm two ;
DnV_r0_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_AnV_.mda',dir_out_s0000_pca_r0_arm1,pca_proj_infix_r0_arm1,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_r0 from arm one, since this is where the bicluster is. ;
XnV_r0_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_ZnV_.mda',dir_out_s0000_pca_r0_arm1,pca_proj_infix_r0_arm1,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_r0 from arm one, since this is where the bicluster is. ;
%if (strcmp(flag_dex_vs_lak,'lak')); DnV_r0_arm1_ = abs(DnV_r0_arm1_); XnV_r0_arm1_ = abs(XnV_r0_arm1_); end;%if (strcmp(flag_dex_vs_lak,'lak'));
mr_D_rmv_r0_arm1_ = mr_D_arm1_*0; mr_D_rmv_r0_arm1_(rdrop_a_r0_arm1_(1:end-out_trace_r0_arm1_(niteration,2)))=1;
mr_D_ret_r0_arm1_ = mr_D_arm1_*0; mr_D_ret_r0_arm1_(rdrop_a_r0_arm1_(end-out_trace_r0_arm1_(niteration,2)+1:end))=1;
%%%%%%%%;
pca_proj_infix_r0_arm2 = sprintf('pca_proj_arm2_ni%d_tst%d',niteration,cl_num_arm2); %<-- Note that here we use the projection of arm2, with snps limited by overlap with arm two ;
DnV_r0_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_AnV_.mda',dir_out_s0000_pca_r0_arm1,pca_proj_infix_r0_arm2,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_r0 from arm one, since this is where the bicluster is. ;
XnV_r0_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_ZnV_.mda',dir_out_s0000_pca_r0_arm1,pca_proj_infix_r0_arm2,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_r0 from arm one, since this is where the bicluster is. ;
%if (strcmp(flag_dex_vs_lak,'lak')); DnV_r0_arm2_ = abs(DnV_r0_arm2_); XnV_r0_arm2_ = abs(XnV_r0_arm2_); end;%if (strcmp(flag_dex_vs_lak,'lak'));

%%%%%%%%;
% establish snp-indices for each allelic combination. ;
%%%%%%%%;
%%%%%%%%;
% First arm1: ;
%%%%%%%%;
b01_ = bim_arm1_{2}; allele1_arm1_ = bim_arm1_{5}; allele2_arm1_ = bim_arm1_{6}; alleletype_arm1_ = bim_arm1_{7}; atfr_arm1_ = bim_arm1_{9};
[b11_,b01_to_b11_,b11_to_b01_] = unique(b01_);
b01_by_b11_xref_ = sparse(1:length(b01_),b11_to_b01_,1,length(b01_),length(b11_));
%%%%%%%%;
flag_check=0;
if flag_check;
disp(sprintf(' %% checking b01_by_b11_xref_'));
nb11=max(1,min(length(b11_),floor(length(b11_)*rand())));
disp(sprintf(' %% nb11 %.9d: b11_{nb11} %s',nb11,b11_{nb11}));
tmp_b01_ = find(sum(b01_by_b11_xref_(:,nb11),2));
for nl01=1:length(tmp_b01_);
nb01 = tmp_b01_(nl01);
disp(sprintf(' %% nb01 %.9d: b01_{nb01} %s (%s)',nb01,b01_{nb01},alleletype_arm1_{nb01}));
assert(strcmp(b01_{nb01},b11_{nb11}));
end;%for nl01=1:length(tmp_b01_);
end;%if flag_check;
%%%%%%%%;
c01_ = find(strcmp(alleletype_arm1_,'and'));
[c11_,c01_to_c11_,c11_to_c01_] = unique(b01_(c01_));
c01_by_c11_xref_ = sparse(1:length(c01_),c11_to_c01_,1,length(c01_),length(c11_));
[d11_,d11_to_b11_,d11_to_c11_] = intersect(b11_,c11_,'stable');
b11_by_d11_xref_ = sparse(d11_to_b11_,1:length(d11_),1,length(b11_),length(d11_));
c11_by_d11_xref_ = sparse(d11_to_c11_,1:length(d11_),1,length(c11_),length(d11_));
V_r0_base_and_ = zeros(length(b11_),2);
atfr_arm1_and_ = zeros(length(b11_),1);
for nd11=1:length(d11_);
nb11 = find(sum(b11_by_d11_xref_(:,nd11),2));
nc11 = find(sum(c11_by_d11_xref_(:,nd11),2));
nc01 = find(sum(c01_by_c11_xref_(:,nc11),2));
nb01 = c01_(nc01);
V_r0_base_and_(nb11,:) = V_r0_base_(nb01,:);
atfr_arm1_and_(nb11) = atfr_arm1_(nb01);
end;%for nd11=1:length(d11_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_r0_base_and_'));
nb11=max(1,min(length(b11_),floor(length(b11_)*rand())));
tmp_snp = b11_{nb11};
nb01_and = find(strcmp(b01_,tmp_snp) & strcmp(alleletype_arm1_,'and'));
if ~isempty(nb01_and);
assert(length(intersect(nb01_and,find(sum(b01_by_b11_xref_(:,nb11),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,b01_{nb01_and},alleletype_arm1_{nb01_and}));
disp(sprintf(' %% V_r0_base_ (%0.6f,%0.6f) , V_r0_base_and_ (%0.6f,%0.6f)',V_r0_base_(nb01_and,:),V_r0_base_and_(nb11,:)));
end;%if ~isempty(nb01_and);
end;%if flag_check;
clear c01_ c11_ c01_to_c11_ c11_to_c01_ d11_ d11_to_b11_ d11_to_c11_ b11_by_d11_xref_ c11_by_d11_xref_ ;
%%%%%%%%;
c01_ = find(strcmp(alleletype_arm1_,'xor'));
[c11_,c01_to_c11_,c11_to_c01_] = unique(b01_(c01_));
c01_by_c11_xref_ = sparse(1:length(c01_),c11_to_c01_,1,length(c01_),length(c11_));
[d11_,d11_to_b11_,d11_to_c11_] = intersect(b11_,c11_,'stable');
b11_by_d11_xref_ = sparse(d11_to_b11_,1:length(d11_),1,length(b11_),length(d11_));
c11_by_d11_xref_ = sparse(d11_to_c11_,1:length(d11_),1,length(c11_),length(d11_));
V_r0_base_xor_ = zeros(length(b11_),2);
atfr_arm1_xor_ = zeros(length(b11_),1);
for nd11=1:length(d11_);
nb11 = find(sum(b11_by_d11_xref_(:,nd11),2));
nc11 = find(sum(c11_by_d11_xref_(:,nd11),2));
nc01 = find(sum(c01_by_c11_xref_(:,nc11),2));
nb01 = c01_(nc01);
V_r0_base_xor_(nb11,:) = V_r0_base_(nb01,:);
atfr_arm1_xor_(nb11) = atfr_arm1_(nb01);
end;%for nd11=1:length(d11_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_r0_base_xor_'));
nb11=max(1,min(length(b11_),floor(length(b11_)*rand())));
tmp_snp = b11_{nb11};
nb01_xor = find(strcmp(b01_,tmp_snp) & strcmp(alleletype_arm1_,'xor'));
if ~isempty(nb01_xor);
assert(length(intersect(nb01_xor,find(sum(b01_by_b11_xref_(:,nb11),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,b01_{nb01_xor},alleletype_arm1_{nb01_xor}));
disp(sprintf(' %% V_r0_base_ (%0.6f,%0.6f) , V_r0_base_xor_ (%0.6f,%0.6f)',V_r0_base_(nb01_xor,:),V_r0_base_xor_(nb11,:)));
end;%if ~isempty(nb01_xor);
end;%if flag_check;
clear c01_ c11_ c01_to_c11_ c11_to_c01_ d11_ d11_to_b11_ d11_to_c11_ b11_by_d11_xref_ c11_by_d11_xref_ ;
%%%%%%%%;
c01_ = find(strcmp(alleletype_arm1_,'nor'));
[c11_,c01_to_c11_,c11_to_c01_] = unique(b01_(c01_));
c01_by_c11_xref_ = sparse(1:length(c01_),c11_to_c01_,1,length(c01_),length(c11_));
[d11_,d11_to_b11_,d11_to_c11_] = intersect(b11_,c11_,'stable');
b11_by_d11_xref_ = sparse(d11_to_b11_,1:length(d11_),1,length(b11_),length(d11_));
c11_by_d11_xref_ = sparse(d11_to_c11_,1:length(d11_),1,length(c11_),length(d11_));
V_r0_base_nor_ = zeros(length(b11_),2);
atfr_arm1_nor_ = zeros(length(b11_),1);
for nd11=1:length(d11_);
nb11 = find(sum(b11_by_d11_xref_(:,nd11),2));
nc11 = find(sum(c11_by_d11_xref_(:,nd11),2));
nc01 = find(sum(c01_by_c11_xref_(:,nc11),2));
nb01 = c01_(nc01);
V_r0_base_nor_(nb11,:) = V_r0_base_(nb01,:);
atfr_arm1_nor_(nb11) = atfr_arm1_(nb01);
end;%for nd11=1:length(d11_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_r0_base_nor_'));
nb11=max(1,min(length(b11_),floor(length(b11_)*rand())));
tmp_snp = b11_{nb11};
nb01_nor = find(strcmp(b01_,tmp_snp) & strcmp(alleletype_arm1_,'nor'));
if ~isempty(nb01_nor);
assert(length(intersect(nb01_nor,find(sum(b01_by_b11_xref_(:,nb11),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,b01_{nb01_nor},alleletype_arm1_{nb01_nor}));
disp(sprintf(' %% V_r0_base_ (%0.6f,%0.6f) , V_r0_base_nor_ (%0.6f,%0.6f)',V_r0_base_(nb01_nor,:),V_r0_base_nor_(nb11,:)));
end;%if ~isempty(nb01_nor);
end;%if flag_check;
clear c01_ c11_ c01_to_c11_ c11_to_c01_ d11_ d11_to_b11_ d11_to_c11_ b11_by_d11_xref_ c11_by_d11_xref_ ;
%%%%%%%%;
% Plotting allelic-types against one another. ;
%%%%%%%%;
flag_plot=0;
if flag_plot;
tmp_ij_ = find( ~ ( (V_r0_base_and_(:,1)==0) & (V_r0_base_xor_(:,1)==0) & (V_r0_base_nor_(:,1)==0) ) );
plot3(V_r0_base_and_(tmp_ij_,1),V_r0_base_xor_(tmp_ij_,1),V_r0_base_nor_(tmp_ij_,1),'.');
xlabel('and'); ylabel('xor'); zlabel('nor'); axis vis3d;
end;% if flag_plot;
flag_plot=0;
if flag_plot;
tmp_ij_ = find( ~ ( (V_r0_base_and_(:,1)==0) & (V_r0_base_xor_(:,1)==0) & (V_r0_base_nor_(:,1)==0) ) );
subplot(3,3,1); plot(V_r0_base_and_(tmp_ij_,1),V_r0_base_xor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('xor'); title('and-vs-xor 1');
subplot(3,3,2); plot(V_r0_base_and_(tmp_ij_,1),V_r0_base_nor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('nor'); title('and-vs-nor 1');
subplot(3,3,3); plot(V_r0_base_xor_(tmp_ij_,1),V_r0_base_nor_(tmp_ij_,1),'b.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor 1');
subplot(3,3,4); plot(V_r0_base_and_(tmp_ij_,2),V_r0_base_xor_(tmp_ij_,2),'r.'); xlabel('and'); ylabel('xor'); title('and-vs-xor 2');
subplot(3,3,5); plot(V_r0_base_and_(tmp_ij_,2),V_r0_base_nor_(tmp_ij_,2),'r.'); xlabel('and'); ylabel('nor'); title('and-vs-nor 2');
subplot(3,3,6); plot(V_r0_base_xor_(tmp_ij_,2),V_r0_base_nor_(tmp_ij_,2),'r.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor 2');
subplot(3,3,7); plot(V_r0_base_and_(tmp_ij_,1),V_r0_base_and_(tmp_ij_,2),'g.'); xlabel('and 1'); ylabel('and 2'); title('and 1-vs-2');
subplot(3,3,8); plot(V_r0_base_xor_(tmp_ij_,1),V_r0_base_xor_(tmp_ij_,2),'g.'); xlabel('xor 1'); ylabel('xor 2'); title('xor 1-vs-2');
subplot(3,3,9); plot(V_r0_base_nor_(tmp_ij_,1),V_r0_base_nor_(tmp_ij_,2),'g.'); xlabel('nor 1'); ylabel('nor 2'); title('nor 1-vs-2');
end;% if flag_plot;
flag_plot=0;
if flag_plot;
tmp_ij_ = find( ~ ( (V_r0_base_and_(:,1)==0) & (V_r0_base_xor_(:,1)==0) & (V_r0_base_nor_(:,1)==0) ) );
subplot(3,1,1); plot(atfr_arm1_and_(tmp_ij_,1),atfr_arm1_xor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('xor'); title('and-vs-xor');
subplot(3,1,2); plot(atfr_arm1_and_(tmp_ij_,1),atfr_arm1_nor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('nor'); title('and-vs-nor');
subplot(3,1,3); plot(atfr_arm1_xor_(tmp_ij_,1),atfr_arm1_nor_(tmp_ij_,1),'b.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor');
end;% if flag_plot;
%%%%%%%%;
% Now arm2: ;
%%%%%%%%;
b02_ = bim_arm2_{2}; allele1_arm2_ = bim_arm2_{5}; allele2_arm2_ = bim_arm2_{6}; alleletype_arm2_ = bim_arm2_{7}; atfr_arm2_ = bim_arm2_{9};
[b12_,b02_to_b12_,b12_to_b02_] = unique(b02_);
b02_by_b12_xref_ = sparse(1:length(b02_),b12_to_b02_,1,length(b02_),length(b12_));
%%%%%%%%;
flag_check=0;
if flag_check;
disp(sprintf(' %% checking b02_by_b12_xref_'));
nb12=max(1,min(length(b12_),floor(length(b12_)*rand())));
disp(sprintf(' %% nb12 %.9d: b12_{nb12} %s',nb12,b12_{nb12}));
tmp_b02_ = find(sum(b02_by_b12_xref_(:,nb12),2));
for nl02=1:length(tmp_b02_);
nb02 = tmp_b02_(nl02);
disp(sprintf(' %% nb02 %.9d: b02_{nb02} %s (%s)',nb02,b02_{nb02},alleletype_arm2_{nb02}));
assert(strcmp(b02_{nb02},b12_{nb12}));
end;%for nl02=1:length(tmp_b02_);
end;%if flag_check;
%%%%%%%%;
c02_ = find(strcmp(alleletype_arm2_,'and'));
[c12_,c02_to_c12_,c12_to_c02_] = unique(b02_(c02_));
c02_by_c12_xref_ = sparse(1:length(c02_),c12_to_c02_,1,length(c02_),length(c12_));
[d12_,d12_to_b12_,d12_to_c12_] = intersect(b12_,c12_,'stable');
b12_by_d12_xref_ = sparse(d12_to_b12_,1:length(d12_),1,length(b12_),length(d12_));
c12_by_d12_xref_ = sparse(d12_to_c12_,1:length(d12_),1,length(c12_),length(d12_));
atfr_arm2_and_ = zeros(length(b12_),1);
for nd12=1:length(d12_);
nb12 = find(sum(b12_by_d12_xref_(:,nd12),2));
nc12 = find(sum(c12_by_d12_xref_(:,nd12),2));
nc02 = find(sum(c02_by_c12_xref_(:,nc12),2));
nb02 = c02_(nc02);
atfr_arm2_and_(nb12) = atfr_arm2_(nb02);
end;%for nd12=1:length(d12_);
clear c02_ c12_ c02_to_c12_ c12_to_c02_ d12_ d12_to_b12_ d12_to_c12_ b12_by_d12_xref_ c12_by_d12_xref_ ;
%%%%%%%%;
c02_ = find(strcmp(alleletype_arm2_,'xor'));
[c12_,c02_to_c12_,c12_to_c02_] = unique(b02_(c02_));
c02_by_c12_xref_ = sparse(1:length(c02_),c12_to_c02_,1,length(c02_),length(c12_));
[d12_,d12_to_b12_,d12_to_c12_] = intersect(b12_,c12_,'stable');
b12_by_d12_xref_ = sparse(d12_to_b12_,1:length(d12_),1,length(b12_),length(d12_));
c12_by_d12_xref_ = sparse(d12_to_c12_,1:length(d12_),1,length(c12_),length(d12_));
atfr_arm2_xor_ = zeros(length(b12_),1);
for nd12=1:length(d12_);
nb12 = find(sum(b12_by_d12_xref_(:,nd12),2));
nc12 = find(sum(c12_by_d12_xref_(:,nd12),2));
nc02 = find(sum(c02_by_c12_xref_(:,nc12),2));
nb02 = c02_(nc02);
atfr_arm2_xor_(nb12) = atfr_arm2_(nb02);
end;%for nd12=1:length(d12_);
clear c02_ c12_ c02_to_c12_ c12_to_c02_ d12_ d12_to_b12_ d12_to_c12_ b12_by_d12_xref_ c12_by_d12_xref_ ;
%%%%%%%%;
c02_ = find(strcmp(alleletype_arm2_,'nor'));
[c12_,c02_to_c12_,c12_to_c02_] = unique(b02_(c02_));
c02_by_c12_xref_ = sparse(1:length(c02_),c12_to_c02_,1,length(c02_),length(c12_));
[d12_,d12_to_b12_,d12_to_c12_] = intersect(b12_,c12_,'stable');
b12_by_d12_xref_ = sparse(d12_to_b12_,1:length(d12_),1,length(b12_),length(d12_));
c12_by_d12_xref_ = sparse(d12_to_c12_,1:length(d12_),1,length(c12_),length(d12_));
atfr_arm2_nor_ = zeros(length(b12_),1);
for nd12=1:length(d12_);
nb12 = find(sum(b12_by_d12_xref_(:,nd12),2));
nc12 = find(sum(c12_by_d12_xref_(:,nd12),2));
nc02 = find(sum(c02_by_c12_xref_(:,nc12),2));
nb02 = c02_(nc02);
atfr_arm2_nor_(nb12) = atfr_arm2_(nb02);
end;%for nd12=1:length(d12_);
clear c02_ c12_ c02_to_c12_ c12_to_c02_ d12_ d12_to_b12_ d12_to_c12_ b12_by_d12_xref_ c12_by_d12_xref_ ;
%%%%%%%%;
% Plotting allelic-types against one another. ;
%%%%%%%%;
flag_plot=0;
if flag_plot;
subplot(3,1,1); plot(atfr_arm2_and_(:,1),atfr_arm2_xor_(:,1),'b.'); xlabel('and'); ylabel('xor'); title('and-vs-xor');
subplot(3,1,2); plot(atfr_arm2_and_(:,1),atfr_arm2_nor_(:,1),'b.'); xlabel('and'); ylabel('nor'); title('and-vs-nor');
subplot(3,1,3); plot(atfr_arm2_xor_(:,1),atfr_arm2_nor_(:,1),'b.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor');
end;% if flag_plot;

dosage_DnV_arm2_ = zeros(size(fam_arm2_{1},1),2);
dosage_XnV_arm2_ = zeros(size(fam_arm2_{1},1),2);

for nstudy=1:length(study_name_arm2_);
%%%%%%%%%%%%%%%%;

study_name_arm2 = study_name_arm2_{nstudy};
tmp_ij = strfind(study_name_arm2,'bip_');
study_name_arm2_prefix = study_name_arm2(tmp_ij+(4:7));
fname_dosage = sprintf('%s/dir_misc/%s_eur_sr-qc.hg19.ch.fl.out.dosage_%s_out_cdrop_ni%d.out.dosage',dir_trunk,study_name_arm2_prefix,string_name_r0_arm1,niteration);
%fname_dosage = sprintf('%s/dir_misc/%s_eur_sr-qc.hg19.ch.fl.out.dosage_%s_out_cdrop_ni%d.out.dosage.cropped',dir_trunk,study_name_arm2_prefix,string_name_r0_arm1,niteration);
fcheck(fname_dosage);
%tic;[tmp_data_,tmp_varnames_,tmp_casenames_] = tblread(fname_dosage);toc;
n_dosage_snp = wc_0(fname_dosage)-1;

fid = fopen(fname_dosage);
tmp_line_ = fgetl(fid);
tmp_dosage_patient_ = strsplit(tmp_line_);
assert(strcmp(tmp_dosage_patient_{1},'SNP'));
assert(strcmp(tmp_dosage_patient_{2},'A1'));
assert(strcmp(tmp_dosage_patient_{3},'A2'));
n_dosage_patient = floor((length(tmp_dosage_patient_)-3)/2);
dosage_fam_name_ = cell(n_dosage_patient,1);
for ndosage_patient=1:n_dosage_patient;
dosage_fam_name_{ndosage_patient} = sprintf('%s&%s',strtrim(tmp_dosage_patient_{2 + 2*ndosage_patient}),strtrim(tmp_dosage_patient_{3 + 2*ndosage_patient}));
end;%for ndosage_patient=1:n_dosage_patient;
dosage_bim_snp_ = cell(n_dosage_snp,1);
allele1_dosage_ = zeros(n_dosage_snp,1);
allele2_dosage_ = zeros(n_dosage_snp,1);
for ndosage_snp=1:n_dosage_snp;
if (mod(ndosage_snp,1000)==0); disp(sprintf(' %% ndosage_snp %d/%d',ndosage_snp,n_dosage_snp)); end;
tmp_line_ = fgetl(fid);
tmp_dosage_snp_ = textscan(tmp_line_,'%s',3);%tmp_dosage_snp_ = strsplit(tmp_line_);
tmp_dosage_snp_ = tmp_dosage_snp_{1};
flag_check=0;
if flag_check;
tmp_ij_ = find(strcmp(bim_arm1_{2},tmp_dosage_snp_{1}));
for nl=1:length(tmp_ij_);
disp(sprintf(' %% found snp %s (%s,%s) <-- bim %s (%c,%c): %s',tmp_dosage_snp_{1},tmp_dosage_snp_{2},tmp_dosage_snp_{3},bim_arm1_{2}{tmp_ij_(nl)},bim_arm1_{5}(tmp_ij_(nl)),bim_arm1_{6}(tmp_ij_(nl)),alleletype_arm1_{tmp_ij_(nl)}));
end;%for nl=1:length(tmp_ij_);
end;%if flag_check;
dosage_bim_snp_{ndosage_snp} = tmp_dosage_snp_{1};
allele1_dosage_(ndosage_snp) = tmp_dosage_snp_{2};
allele2_dosage_(ndosage_snp) = tmp_dosage_snp_{3};
end;%for ndosage_snp=1:n_dosage_snp;
fclose(fid);

%%%%%%%%;
d1d_ = dosage_bim_snp_ ; %<-- we assume this is already unique. ;
%%%%%%%%;
[e11_,e11_to_d1d_,e11_to_b11_] = intersect(d1d_,b11_,'stable');
d1d_by_e11_xref_ = sparse(e11_to_d1d_,1:length(e11_),1,length(d1d_),length(e11_));
e11_by_d1d_xref_ = sparse(1:length(e11_),e11_to_d1d_,1,length(e11_),length(d1d_));
b11_by_e11_xref_ = sparse(e11_to_b11_,1:length(e11_),1,length(b11_),length(e11_));
%%%%%%%%;
flag_check=0;
if flag_check;
ne11=max(1,min(length(e11_),floor(length(e11_)*rand())));
disp(sprintf(' %% ne11 %.9d: e11_{ne11} %s',ne11,e11_{ne11}));
tmp_d1d_ = find(sum(d1d_by_e11_xref_(:,ne11),2));
for nl1d=1:length(tmp_d1d_);
nd1d = tmp_d1d_(nl1d);
disp(sprintf(' %% nd1d %.9d: d1d_{nd1d} %s',nd1d,d1d_{nd1d}));
assert(strcmp(d1d_{nd1d},e11_{ne11}));
end;%for nl1d=1:length(tmp_d1d_);
tmp_b11_ = find(sum(b11_by_e11_xref_(:,ne11),2));
for nl11=1:length(tmp_b11_);
nb11 = tmp_b11_(nl11);
disp(sprintf(' %% nb11 %.9d: b11_{nb11} %s and (%0.6f %0.6f) , xor (%0.6f %0.6f) , nor (%0.6f %0.6f)',nb11,b11_{nb11},V_r0_base_and_(nb11,:),V_r0_base_xor_(nb11,:),V_r0_base_nor_(nb11,:)));
assert(strcmp(b11_{nb11},e11_{ne11}));
end;%for nl11=1:length(tmp_b11_);
tmp_b01_ = find(sum(b01_by_b11_xref_(:,nb11),2));
for nl01=1:length(tmp_b01_);
nb01 = tmp_b01_(nl01);
disp(sprintf(' %% nb01 %.9d: b01_{nb01} %s (%s) (%0.6f %0.6f)',nb01,b01_{nb01},alleletype_arm1_{nb01},V_r0_base_(nb01,:)));
assert(strcmp(b01_{nb01},e11_{ne11}));
end;%for nl01=1:length(tmp_b01_);
end;%if flag_check;
%%%%%%%%;
[e12_,e12_to_d1d_,e12_to_b12_] = intersect(d1d_,b12_,'stable');
d1d_by_e12_xref_ = sparse(e12_to_d1d_,1:length(e12_),1,length(d1d_),length(e12_));
e12_by_d1d_xref_ = sparse(1:length(e12_),e12_to_d1d_,1,length(e12_),length(d1d_));
b12_by_e12_xref_ = sparse(e12_to_b12_,1:length(e12_),1,length(b12_),length(e12_));
%%%%%%%%;
flag_check=0;
if flag_check;
ne12=max(1,min(length(e12_),floor(length(e12_)*rand())));
disp(sprintf(' %% ne12 %.9d: e12_{ne12} %s',ne12,e12_{ne12}));
tmp_d1d_ = find(sum(d1d_by_e12_xref_(:,ne12),2));
for nl1d=1:length(tmp_d1d_);
nd1d = tmp_d1d_(nl1d);
disp(sprintf(' %% nd1d %.9d: d1d_{nd1d} %s',nd1d,d1d_{nd1d}));
assert(strcmp(d1d_{nd1d},e12_{ne12}));
end;%for nl1d=1:length(tmp_d1d_);
tmp_b12_ = find(sum(b12_by_e12_xref_(:,ne12),2));
for nl12=1:length(tmp_b12_);
nb12 = tmp_b12_(nl12);
disp(sprintf(' %% nb12 %.9d: b12_{nb12} %s',nb12,b12_{nb12}));
assert(strcmp(b12_{nb12},e12_{ne12}));
end;%for nl12=1:length(tmp_b12_);
tmp_b02_ = find(sum(b02_by_b12_xref_(:,nb12),2));
for nl02=1:length(tmp_b02_);
nb02 = tmp_b02_(nl02);
disp(sprintf(' %% nb02 %.9d: b02_{nb02} %s (%s)',nb02,b02_{nb02},alleletype_arm2_{nb02}));
assert(strcmp(b02_{nb02},e12_{ne12}));
end;%for nl02=1:length(tmp_b02_);
end;%if flag_check;

% Ordering V_r0_base_xxx_ to align with dosage file. ;
clear V_r0_perm_and_ V_r0_perm_xor_ V_r0_perm_nor_;
clear atfr_arm1_perm_and_ atfr_arm1_perm_xor_ atfr_arm1_perm_nor_;
clear atfr_arm2_perm_and_ atfr_arm2_perm_xor_ atfr_arm2_perm_nor_;
%%%%%%%%;
V_r0_perm_and_ = zeros(length(d1d_),2);
V_r0_perm_xor_ = zeros(length(d1d_),2);
V_r0_perm_nor_ = zeros(length(d1d_),2);
atfr_arm1_perm_and_ = zeros(length(d1d_),1);
atfr_arm1_perm_xor_ = zeros(length(d1d_),1);
atfr_arm1_perm_nor_ = zeros(length(d1d_),1);
for ne11=1:length(e11_);
tmp_d1d_ = find(sum(d1d_by_e11_xref_(:,ne11),2));
if (length(tmp_d1d_)>1); disp(sprintf(' %% Warning! tmp_d1d_ length %d in lisa_dosage_pca_ver4',length(tmp_d1d_))); end;
nd1d = tmp_d1d_(1);
tmp_b11_ = find(sum(b11_by_e11_xref_(:,ne11),2));
if (length(tmp_b11_)>1); disp(sprintf(' %% Warning! tmp_b11_ length %d in lisa_dosage_pca_ver4',length(tmp_b11_))); end;
nb11 = tmp_b11_(1);
V_r0_perm_and_(nd1d,:) = V_r0_base_and_(nb11,:);
V_r0_perm_xor_(nd1d,:) = V_r0_base_xor_(nb11,:);
V_r0_perm_nor_(nd1d,:) = V_r0_base_nor_(nb11,:);
atfr_arm1_perm_and_(nd1d) = atfr_arm1_and_(nb11);
atfr_arm1_perm_xor_(nd1d) = atfr_arm1_xor_(nb11);
atfr_arm1_perm_nor_(nd1d) = atfr_arm1_nor_(nb11);
end;%for ne11=1:length(e11_);
atfr_arm1_perm_and_alpha_ = atfr_arm1_perm_and_ - (1 - atfr_arm1_perm_and_); atfr_arm1_perm_and_delta_ = 1./( 4 .* atfr_arm1_perm_and_ .* (1 - atfr_arm1_perm_and_) );
atfr_arm1_perm_xor_alpha_ = atfr_arm1_perm_xor_ - (1 - atfr_arm1_perm_xor_); atfr_arm1_perm_xor_delta_ = 1./( 4 .* atfr_arm1_perm_xor_ .* (1 - atfr_arm1_perm_xor_) );
atfr_arm1_perm_nor_alpha_ = atfr_arm1_perm_nor_ - (1 - atfr_arm1_perm_nor_); atfr_arm1_perm_nor_delta_ = 1./( 4 .* atfr_arm1_perm_nor_ .* (1 - atfr_arm1_perm_nor_) );
%%%%%%%%;
atfr_arm2_perm_and_ = zeros(length(d1d_),1);
atfr_arm2_perm_xor_ = zeros(length(d1d_),1);
atfr_arm2_perm_nor_ = zeros(length(d1d_),1);
for ne12=1:length(e12_);
tmp_d1d_ = find(sum(d1d_by_e12_xref_(:,ne12),2));
if (length(tmp_d1d_)>1); disp(sprintf(' %% Warning! tmp_d1d_ length %d in lisa_dosage_pca_ver4',length(tmp_d1d_))); end;
nd1d = tmp_d1d_(1);
tmp_b12_ = find(sum(b12_by_e12_xref_(:,ne12),2));
if (length(tmp_b12_)>1); disp(sprintf(' %% Warning! tmp_b12_ length %d in lisa_dosage_pca_ver4',length(tmp_b12_))); end;
nb12 = tmp_b12_(1);
atfr_arm2_perm_and_(nd1d) = atfr_arm2_and_(nb12);
atfr_arm2_perm_xor_(nd1d) = atfr_arm2_xor_(nb12);
atfr_arm2_perm_nor_(nd1d) = atfr_arm2_nor_(nb12);
end;%for ne12=1:length(e12_);

f11_ = fam_name_arm1_; %<-- We assume this is unique. ;
f12_ = fam_name_arm2_; %<-- We assume this is unique. ;
g1d_ = dosage_fam_name_; %<-- We assume this is unique. ;
%%%%%%%%;
[h11_,h11_to_g1d_,h11_to_f11_] = intersect(g1d_,f11_,'stable');
g1d_by_h11_xref_ = sparse(h11_to_g1d_,1:length(h11_),1,length(g1d_),length(h11_));
f11_by_h11_xref_ = sparse(h11_to_f11_,1:length(h11_),1,length(f11_),length(h11_));
g1d_to_f11_ = zeros(length(g1d_),1);
for nh11=1:length(h11_);
tmp_f11_ = find(sum(f11_by_h11_xref_(:,nh11),2));
if (length(tmp_f11_)>1); disp(sprintf(' %% Warning! tmp_f11_ length %d in lisa_dosage_pca_ver4',length(tmp_f11_))); end;
nf11 = tmp_f11_(1);
tmp_g1d_ = find(sum(g1d_by_h11_xref_(:,nh11),2));
if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver4',length(tmp_g1d_))); end;
ng1d = tmp_g1d_(1);
assert(strcmp(f11_{nf11},g1d_{ng1d}));
g1d_to_f11_(ng1d) = nf11;
end;%for nh11=1:length(h11_);
%%%%%%%%;
[h12_,h12_to_g1d_,h12_to_f12_] = intersect(g1d_,f12_,'stable');
g1d_by_h12_xref_ = sparse(h12_to_g1d_,1:length(h12_),1,length(g1d_),length(h12_));
f12_by_h12_xref_ = sparse(h12_to_f12_,1:length(h12_),1,length(f12_),length(h12_));
g1d_to_f12_ = zeros(length(g1d_),1);
for nh12=1:length(h12_);
tmp_f12_ = find(sum(f12_by_h12_xref_(:,nh12),2));
if (length(tmp_f12_)>1); disp(sprintf(' %% Warning! tmp_f12_ length %d in lisa_dosage_pca_ver4',length(tmp_f12_))); end;
nf12 = tmp_f12_(1);
tmp_g1d_ = find(sum(g1d_by_h12_xref_(:,nh12),2));
if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver4',length(tmp_g1d_))); end;
ng1d = tmp_g1d_(1);
assert(strcmp(f12_{nf12},g1d_{ng1d}));
g1d_to_f12_(ng1d) = nf12;
end;%for nh12=1:length(h12_);

%%%%%%%%;
char2num_ = zeros(84,1); 
char2num_(65) = 1; %<-- A ;
char2num_(67) = 2; %<-- C ;
char2num_(71) = 3; %<-- G ;
char2num_(84) = 4; %<-- T ;
%%%%%%%%;
allele_dosage__ = zeros(4,4);
for nl=1:n_dosage_snp;
allele_dosage__(char2num_(allele1_dosage_(nl)),char2num_(allele2_dosage_(nl))) = allele_dosage__(char2num_(allele1_dosage_(nl)),char2num_(allele2_dosage_(nl))) + 1;
end;%for nl=1:n_dosage_snp;
%%%%%%%%;
allele_arm1__ = zeros(4,4);
for nl=1:length(allele1_arm1_);
allele_arm1__(char2num_(allele1_arm1_(nl)),char2num_(allele2_arm1_(nl))) = allele_arm1__(char2num_(allele1_arm1_(nl)),char2num_(allele2_arm1_(nl))) +1;
end;%for nl=1:length(allele1_arm1_);
%%%%%%%%;
allele_arm2__ = zeros(4,4);
for nl=1:length(allele1_arm2_);
allele_arm2__(char2num_(allele1_arm2_(nl)),char2num_(allele2_arm2_(nl))) = allele_arm2__(char2num_(allele1_arm2_(nl)),char2num_(allele2_arm2_(nl))) +1;
end;%for nl=1:length(allele1_arm2_);
%%%%%%%%;
disp('allele_dosage__'); disp(allele_dosage__);
disp('allele_arm1__'); disp(allele_arm1__);
disp('allele_arm2__'); disp(allele_arm2__);

%%%%%%%%%%%%%%%%;
% We define different kinds of allelic mismatch errors: ;
%%%%%%%%%%%%%%%%;
error_code_null = 0;      % <-- No error; alleles match and minor-allele-frequency is commensurate. ;
error_code_synonym = 1;   % <-- Synonym; allele names must be interchanged with synonyms (i.e,. A<-->T and C<-->G). ;
error_code_dominance = 2; % <-- Dominance; the alleles must be switched (i.e., XY --> YX) so that the first allele listed corresponds to the minor (i.e., less frequent) allele. ;
error_code_both = 3;      % <-- Both; the allele names must be interchanged *and* the order must be switched. ;
error_code_ambiguous = 8; % <-- Ambiguity; I cannot determine the correct alignment. ;
error_code_missing = 9;   % <-- Missing; this snp is not in the overlap between the two sets. ;
%%%%%%%%%%%%%%%%;
mismatch_d1_ = 9*ones(n_dosage_snp,1);
for ndosage_snp=1:n_dosage_snp;
nd1d = ndosage_snp;
ne11 = find(sum(e11_by_d1d_xref_(:,nd1d),2)); assert(length(ne11)<=1);
if (length(ne11)==1);
nb11 = find(sum(b11_by_e11_xref_(:,ne11),2)); assert(length(nb11)==1);
tmp_b01_ = find(sum(b01_by_b11_xref_(:,nb11),2)); assert(length(tmp_b01_)>=1);
for nl01=1:length(tmp_b01_);
nb01 = tmp_b01_(nl01);
assert(strcmp(b01_{nb01},d1d_{nd1d}));
assert(strcmp(b01_{nb01},e11_{ne11}));
assert(strcmp(b01_{nb01},b11_{nb11}));
end;%for nl01=1:length(tmp_b01_);
nb01 = tmp_b01_(1);
mismatch_d1_(nd1d) = lisa_allele_mismatch_ver0(allele1_dosage_(nd1d),allele2_dosage_(nd1d),allele1_arm1_(nb01),allele2_arm1_(nb01));
end;%if (length(ne11)==1);
end;%for ndosage_snp=1:n_dosage_snp;
%%%%%%%%;
mismatch_d2_ = 9*ones(n_dosage_snp,1);
for ndosage_snp=1:n_dosage_snp;
nd1d = ndosage_snp;
ne12 = find(sum(e12_by_d1d_xref_(:,nd1d),2)); assert(length(ne12)<=1);
if (length(ne12)==1);
nb12 = find(sum(b12_by_e12_xref_(:,ne12),2)); assert(length(nb12)==1);
tmp_b02_ = find(sum(b02_by_b12_xref_(:,nb12),2)); assert(length(tmp_b02_)>=1);
for nl02=1:length(tmp_b02_);
nb02 = tmp_b02_(nl02);
assert(strcmp(b02_{nb02},d1d_{nd1d}));
assert(strcmp(b02_{nb02},e12_{ne12}));
assert(strcmp(b02_{nb02},b12_{nb12}));
end;%for nl02=1:length(tmp_b02_);
nb02 = tmp_b02_(1);
mismatch_d2_(nd1d) = lisa_allele_mismatch_ver0(allele1_dosage_(nd1d),allele2_dosage_(nd1d),allele1_arm2_(nb02),allele2_arm2_(nb02));
end;%if (length(ne12)==1);
end;%for ndosage_snp=1:n_dosage_snp;
%%%%%%%%;

%%%%%%%%%%%%%%%%;
% Now step through the dosage file line by line. ;
% updating the inner-products as we go. ;
%%%%%%%%%%%%%%%%;
ent_cutoff = 0.03;
tmp_AnV_dosage_ = zeros(n_dosage_patient,2);
mismatch_d1_ = 9*ones(n_dosage_snp,1);
fid = fopen(fname_dosage);
tmp_line_ = fgetl(fid); %<-- skip header line. ;
for ndosage_snp=1:n_dosage_snp;
if (mod(ndosage_snp,1000)==0); disp(sprintf(' %% ndosage_snp %d/%d',ndosage_snp,n_dosage_snp)); end;
tmp_line_ = fgetl(fid);
tmp_dosage_snp_ = textscan(tmp_line_,'%s',3);
tmp_dosage_al1_ = tmp_dosage_snp_{1}{2};
tmp_dosage_al2_ = tmp_dosage_snp_{1}{3};
nd1d = ndosage_snp;
assert(strcmp(tmp_dosage_snp_{1}{1},d1d_{nd1d}));
assert(tmp_dosage_al1_==allele1_dosage_(nd1d));
assert(tmp_dosage_al2_==allele2_dosage_(nd1d));
ne11 = find(sum(e11_by_d1d_xref_(:,nd1d),2)); assert(length(ne11)<=1);
if (length(ne11)==1);
nb11 = find(sum(b11_by_e11_xref_(:,ne11),2)); assert(length(nb11)==1);
tmp_b01_ = find(sum(b01_by_b11_xref_(:,nb11),2)); assert(length(tmp_b01_)>=1);
nb01 = tmp_b01_(1);
assert(strcmp(b01_{nb01},d1d_{nd1d}));
assert(strcmp(b01_{nb01},e11_{ne11}));
assert(strcmp(b01_{nb01},b11_{nb11}));
tmp_length = sum(cellfun('length',tmp_dosage_snp_{1})) + length(tmp_dosage_snp_{1});
tmp_val_ = sscanf(tmp_line_(tmp_length:end),'%f');
assert(length(tmp_val_)/2==n_dosage_patient);
tmp_val_nor_ = tmp_val_(1:2:end-1);
tmp_val_xor_ = tmp_val_(2:2:end-0);
tmp_val_and_ = ones(n_dosage_patient,1) - tmp_val_nor_ - tmp_val_xor_;
%%%%%%%%;
% check for mismatch. ;
%%%%%%%%;
tmp_error_code = lisa_allele_mismatch_ver0(...
  allele1_dosage_(nd1d),allele2_dosage_(nd1d),allele1_arm1_(nb01),allele2_arm1_(nb01)...
  ,sum(abs(tmp_val_and_)),sum(abs(tmp_val_xor_)),sum(abs(tmp_val_nor_))...
  ,atfr_arm1_perm_and_(nd1d),atfr_arm1_perm_xor_(nd1d),atfr_arm1_perm_nor_(nd1d)...
  ,ent_cutoff...
  );
mismatch_d1_(nd1d) = tmp_error_code;
if ( (tmp_error_code==error_code_dominance) | (tmp_error_code==error_code_both) );
tmp_ = tmp_val_nor_ ; tmp_val_nor_ = tmp_val_and_; tmp_val_and_ = tmp_ ; %<-- switching dominant allele ;
end;%if ( (tmp_error_code==error_code_dominance) | (tmp_error_code==error_code_both) );
tmp_val_and_normalized_ = (2*tmp_val_and_ - 1 - atfr_arm1_perm_and_alpha_(nd1d)) / sqrt(atfr_arm1_perm_and_delta_(nd1d));
tmp_val_xor_normalized_ = (2*tmp_val_xor_ - 1 - atfr_arm1_perm_xor_alpha_(nd1d)) / sqrt(atfr_arm1_perm_xor_delta_(nd1d));
tmp_val_nor_normalized_ = (2*tmp_val_nor_ - 1 - atfr_arm1_perm_nor_alpha_(nd1d)) / sqrt(atfr_arm1_perm_nor_delta_(nd1d));
if ( (tmp_error_code==error_code_ambiguous) | (tmp_error_code==error_code_missing) );
tmp_val_and_normalized_ = 0*tmp_val_and_normalized_;
tmp_val_xor_normalized_ = 0*tmp_val_xor_normalized_;
tmp_val_nor_normalized_ = 0*tmp_val_nor_normalized_;
end;%if ( (tmp_error_code==error_code_ambiguous) | (tmp_error_code==error_code_missing) );
%%%%%%%%%%%%%%%%;
% check against b16 file. ;
%%%%%%%%%%%%%%%%;
flag_check=0;
if flag_check;
%%%%%%%%;
tmp_b02_ = find(strcmp(b02_,d1d_{nd1d}));
if (length(tmp_b02_)>0);
lisa_dosage_pca_helper_0;
fname_A_n_arm2 = sprintf('%s/%s_A_full_n.b16',dir__in_arm2,string_prefix_arm2); fcheck(fname_A_n_arm2);
[tmp_nbins,tmp_nrows,tmp_ncols] = tutorial_binary_getsize(fname_A_n_arm2);
%%%%%%%%;
tmp_b02_and = find(strcmp(b02_,d1d_{nd1d}) & strcmp(alleletype_arm2_,'and')); if (length(tmp_b02_and)>1); disp(sprintf(' %% Warning! tmp_b02_and length %d in lisa_dosage_pca_ver4.m',length(tmp_b02_and))); end;
if (length(tmp_b02_and)>0);
tmp_arm2_and_ = tutorial_binary_uncompress(fname_A_n_arm2,1:tmp_nrows,min(tmp_ncols,tmp_b02_and));
tmp_arm2_perm_and_ = zeros(length(g1d_),1);
for nh12=1:length(h12_);
tmp_f12_ = find(sum(f12_by_h12_xref_(:,nh12),2)); if (length(tmp_f12_)>1); disp(sprintf(' %% Warning! tmp_f12_ length %d in lisa_dosage_pca_ver4',length(tmp_f12_))); end; nf12 = tmp_f12_(1);
tmp_g1d_ = find(sum(g1d_by_h12_xref_(:,nh12),2)); if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver4',length(tmp_g1d_))); end; ng1d = tmp_g1d_(1);
assert(strcmp(f12_{nf12},g1d_{ng1d}));
tmp_arm2_perm_and_(ng1d) = tmp_arm2_and_(nf12);
end;%for nh12=1:length(h12_);
tmp_str_and_and = sprintf('arm2_and vs val_and %.10d',sum(abs((tmp_arm2_perm_and_>0) - tmp_val_and_)));
tmp_str_and_xor = sprintf('arm2_and vs val_xor %.10d',sum(abs((tmp_arm2_perm_and_>0) - tmp_val_xor_)));
tmp_str_and_nor = sprintf('arm2_and vs val_nor %.10d',sum(abs((tmp_arm2_perm_and_>0) - tmp_val_nor_)));
disp(sprintf(' %% %% nd1d %.10d tmp_b02_and %.10d %s (%s) , %s , %s , %s',nd1d,tmp_b02_and,d1d_{nd1d},alleletype_arm2_{tmp_b02_and},tmp_str_and_and,tmp_str_and_xor,tmp_str_and_nor));
end;%if (length(tmp_b02_and)>0);
%%%%%%%%;
tmp_b02_xor = find(strcmp(b02_,d1d_{nd1d}) & strcmp(alleletype_arm2_,'xor')); if (length(tmp_b02_xor)>1); disp(sprintf(' %% Warning! tmp_b02_xor length %d in lisa_dosage_pca_ver4.m',length(tmp_b02_xor))); end;
if (length(tmp_b02_xor)>0);
tmp_arm2_xor_ = tutorial_binary_uncompress(fname_A_n_arm2,1:tmp_nrows,min(tmp_ncols,tmp_b02_xor));
tmp_arm2_perm_xor_ = zeros(length(g1d_),1);
for nh12=1:length(h12_);
tmp_f12_ = find(sum(f12_by_h12_xref_(:,nh12),2)); if (length(tmp_f12_)>1); disp(sprintf(' %% Warning! tmp_f12_ length %d in lisa_dosage_pca_ver4',length(tmp_f12_))); end; nf12 = tmp_f12_(1);
tmp_g1d_ = find(sum(g1d_by_h12_xref_(:,nh12),2)); if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver4',length(tmp_g1d_))); end; ng1d = tmp_g1d_(1);
assert(strcmp(f12_{nf12},g1d_{ng1d}));
tmp_arm2_perm_xor_(ng1d) = tmp_arm2_xor_(nf12);
end;%for nh12=1:length(h12_);
tmp_str_xor_and = sprintf('arm2_xor vs val_and %.10d',sum(abs((tmp_arm2_perm_xor_>0) - tmp_val_and_)));
tmp_str_xor_xor = sprintf('arm2_xor vs val_xor %.10d',sum(abs((tmp_arm2_perm_xor_>0) - tmp_val_xor_)));
tmp_str_xor_nor = sprintf('arm2_xor vs val_nor %.10d',sum(abs((tmp_arm2_perm_xor_>0) - tmp_val_nor_)));
disp(sprintf(' %% %% nd1d %.10d tmp_b02_xor %.10d %s (%s) , %s , %s , %s',nd1d,tmp_b02_xor,d1d_{nd1d},alleletype_arm2_{tmp_b02_xor},tmp_str_xor_and,tmp_str_xor_xor,tmp_str_xor_nor));
end;%if (length(tmp_b02_xor)>0);
%%%%%%%%;
tmp_b02_nor = find(strcmp(b02_,d1d_{nd1d}) & strcmp(alleletype_arm2_,'nor')); if (length(tmp_b02_nor)>1); disp(sprintf(' %% Warning! tmp_b02_nor length %d in lisa_dosage_pca_ver4.m',length(tmp_b02_nor))); end;
if (length(tmp_b02_nor)>0);
tmp_arm2_nor_ = tutorial_binary_uncompress(fname_A_n_arm2,1:tmp_nrows,min(tmp_ncols,tmp_b02_nor));
tmp_arm2_perm_nor_ = zeros(length(g1d_),1);
for nh12=1:length(h12_);
tmp_f12_ = find(sum(f12_by_h12_xref_(:,nh12),2)); if (length(tmp_f12_)>1); disp(sprintf(' %% Warning! tmp_f12_ length %d in lisa_dosage_pca_ver4',length(tmp_f12_))); end; nf12 = tmp_f12_(1);
tmp_g1d_ = find(sum(g1d_by_h12_xref_(:,nh12),2)); if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver4',length(tmp_g1d_))); end; ng1d = tmp_g1d_(1);
assert(strcmp(f12_{nf12},g1d_{ng1d}));
tmp_arm2_perm_nor_(ng1d) = tmp_arm2_nor_(nf12);
end;%for nh12=1:length(h12_);
tmp_str_nor_and = sprintf('arm2_nor vs val_and %.10d',sum(abs((tmp_arm2_perm_nor_>0) - tmp_val_and_)));
tmp_str_nor_xor = sprintf('arm2_nor vs val_xor %.10d',sum(abs((tmp_arm2_perm_nor_>0) - tmp_val_xor_)));
tmp_str_nor_nor = sprintf('arm2_nor vs val_nor %.10d',sum(abs((tmp_arm2_perm_nor_>0) - tmp_val_nor_)));
disp(sprintf(' %% %% nd1d %.10d tmp_b02_nor %.10d %s (%s) , %s , %s , %s',nd1d,tmp_b02_nor,d1d_{nd1d},alleletype_arm2_{tmp_b02_nor},tmp_str_nor_and,tmp_str_nor_xor,tmp_str_nor_nor));
end;%if (length(tmp_b02_nor)>0);
%%%%%%%%;
end;%if (length(tmp_b02_)>0);
end;%if flag_check;
%%%%%%%%;
tmp_AnV_dosage_ = tmp_AnV_dosage_ ...
   + tmp_val_and_normalized_*V_r0_perm_and_(nd1d,:) ...
   + tmp_val_xor_normalized_*V_r0_perm_xor_(nd1d,:) ...
   + tmp_val_nor_normalized_*V_r0_perm_nor_(nd1d,:) ...
  ;
end;%if (length(ne11)==1);
end;%for ndosage_snp=1:n_dosage_snp;
fclose(fid);
%%%%%%%%;

tmp_AnV_arm2_ = zeros(length(f12_),2);
for nh12=1:length(h12_);
tmp_f12_ = find(sum(f12_by_h12_xref_(:,nh12),2));
if (length(tmp_f12_)>1); disp(sprintf(' %% Warning! tmp_f12_ length %d in lisa_dosage_pca_ver4',length(tmp_f12_))); end;
nf12 = tmp_f12_(1);
tmp_g1d_ = find(sum(g1d_by_h12_xref_(:,nh12),2));
if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver4',length(tmp_g1d_))); end;
ng1d = tmp_g1d_(1);
assert(strcmp(f12_{nf12},g1d_{ng1d}));
tmp_AnV_arm2_(nf12,:) = tmp_AnV_dosage_(ng1d,:);
end;%for nh12=1:length(h12_);

tmp_DnV_arm2_ = zeros(length(f12_),2); tmp_Dij_ = find(mr_D_arm2_); tmp_DnV_arm2_(tmp_Dij_,:) = tmp_AnV_arm2_(tmp_Dij_,:);
tmp_XnV_arm2_ = zeros(length(f12_),2); tmp_Xij_ = find(mr_X_arm2_); tmp_XnV_arm2_(tmp_Xij_,:) = tmp_AnV_arm2_(tmp_Xij_,:);

flag_plot=1;
if flag_plot;
subplot(2,2,1);
tmp_Dij_ = intersect(g1d_to_f12_,find(mr_D_arm2_));
plot(DnV_r0_arm2_(tmp_Dij_,1),tmp_DnV_arm2_(tmp_Dij_,1),'.');
title('D 1');
subplot(2,2,2);
tmp_Xij_ = intersect(g1d_to_f12_,find(mr_X_arm2_));
plot(XnV_r0_arm2_(tmp_Xij_,1),tmp_XnV_arm2_(tmp_Xij_,1),'.');
title('X 1');
subplot(2,2,3);
tmp_Dij_ = intersect(g1d_to_f12_,find(mr_D_arm2_));
plot(DnV_r0_arm2_(tmp_Dij_,2),tmp_DnV_arm2_(tmp_Dij_,2),'.');
title('D 2');
subplot(2,2,4);
tmp_Xij_ = intersect(g1d_to_f12_,find(mr_X_arm2_));
plot(XnV_r0_arm2_(tmp_Xij_,2),tmp_XnV_arm2_(tmp_Xij_,2),'.');
title('X 2');
end;%if flag_plot;

dosage_DnV_arm2_ = dosage_DnV_arm2_ + tmp_DnV_arm2_ ;
dosage_XnV_arm2_ = dosage_XnV_arm2_ + tmp_XnV_arm2_ ;

%%%%%%%%%%%%%%%%;
end;%for nstudy=1:length(study_name_arm2_);
