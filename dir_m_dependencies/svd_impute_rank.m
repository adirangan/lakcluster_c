function [C_,niteration] = svd_impute_rank(B_,ij_missed_,n_rank,n_iteration,tolerance);
% distribution-preserving svd-based imputation. ;
% uses rank-transform, svd_impute, and inverse-rank-transform. ;

if nargin<1;
n_N = 128*8;
A_ = [-1.5+randn(n_N/4,3); +1.5+randn(3*n_N/4,3)];
[tmp_U_,tmp_S_,tmp_V_] = svds(A_,3); tmp_S_ = diag(diag(tmp_S_).*[1;1;0.125]);
A_ = tmp_U_*tmp_S_*transpose(tmp_V_);
ij_missed_ = randperm(numel(A_)); ij_missed_ = ij_missed_(1:floor(numel(A_)/4));
ij_filled_ = setdiff(1:numel(A_),ij_missed_);
B_ = A_; B_(ij_missed_) = 0;
tmp_nn_ = find(B_(:,1)==0 | B_(:,2)==0 | B_(:,3)==0);
[C_,niteration] = svd_impute_rank(B_,ij_missed_,2);
figure;clf;
subplot(2,2,1); 
hold on;
plot3(B_(tmp_nn_,1),B_(tmp_nn_,2),B_(tmp_nn_,3),'ro','MarkerSize',15); 
plot3(B_(tmp_nn_,1),B_(tmp_nn_,2),B_(tmp_nn_,3),'rx','MarkerSize',15); 
plot3(A_(:,1),A_(:,2),A_(:,3),'b.','MarkerSize',25); 
for nij=1:length(tmp_nn_);
nN = tmp_nn_(nij);
plot3([A_(nN,1),B_(nN,1)],[A_(nN,2),B_(nN,2)],[A_(nN,3),B_(nN,3)],'r-');
end;%for nij=1:length(tmp_nn_);
hold off;
title('data missing (blue true)');
subplot(2,2,2); hold on; 
plot3(C_(tmp_nn_,1),C_(tmp_nn_,2),C_(tmp_nn_,3),'ro','MarkerSize',15); 
plot3(C_(tmp_nn_,1),C_(tmp_nn_,2),C_(tmp_nn_,3),'rx','MarkerSize',15); 
plot3(A_(:,1),A_(:,2),A_(:,3),'b.','MarkerSize',25); 
for nij=1:length(tmp_nn_);
nN = tmp_nn_(nij);
plot3([A_(nN,1),C_(nN,1)],[A_(nN,2),C_(nN,2)],[A_(nN,3),C_(nN,3)],'r-');
end;%for nij=1:length(tmp_nn_);
hold off;
title(sprintf('data imputed (ni%d) (blue true)',niteration));
subplot(2,2,3);
hl_ = linspace(-6,+6,64);
tmp_h_ = hist(A_(:),hl_);
hold on;
stairs(hl_-mean(diff(hl_))/2,tmp_h_,'b-');
hold off;
xlabel('value');ylabel('#');title('histogram true');
subplot(2,2,4);
hl_ = linspace(-6,+6,64);
tmp_h0_ = hist(C_(:),hl_);
tmp_hm_ = hist(C_(ij_missed_),hl_);
tmp_hf_ = hist(C_(ij_filled_),hl_);
hold on;
stairs(hl_-mean(diff(hl_))/2,tmp_h0_,'k-');
stairs(hl_-mean(diff(hl_))/2,tmp_hm_,'r-');
stairs(hl_-mean(diff(hl_))/2,tmp_hf_,'b-');
hold off;
xlabel('value');ylabel('#');title('histogram imputed');
figbig;
disp('returning'); return;
end;%if nargin<1;

if nargin<2; ij_missed_ = find(B_==0); end;
if nargin<3; n_rank = 1; end;
if nargin<4; n_iteration = 256; end;
if nargin<5; tolerance = 1e-6; end;

verbose_flag=1;

n_pass = 8; npass = 1; n_missed_old = numel(B_);
C_ = B_;
continue_flag=1;
while (continue_flag);
n_missed = length(ij_missed_);
if (verbose_flag); disp(sprintf(' %% npass %d n_missed %d',npass,n_missed)); end;
ij_filled_ = setdiff(1:numel(C_),ij_missed_);
D_ = C_;
D_(ij_filled_) = rank_normalize_0(C_(ij_filled_(:)),'row');
[D_,niteration] = svd_impute(D_,ij_missed_,n_rank,n_iteration,tolerance);
[~,tmp_uD_] = unique(D_(ij_filled_));
[~,tmp_uC_] = unique(C_(ij_filled_));
[tmp_uu_] = intersect(tmp_uD_,tmp_uC_);
C_(ij_missed_) = interp1(D_(ij_filled_(tmp_uu_)),C_(ij_filled_(tmp_uu_)),D_(ij_missed_),'linear',NaN);
if n_missed>=n_missed_old; continue_flag=0; end;
if npass>=n_pass; continue_flag=0; end;
n_missed_old = n_missed;
npass = npass+1;
ij_missed_ = find(~isfinite(C_));
end;%while (continue_flag);

C_(ij_missed_) = interp1(D_(ij_filled_(tmp_uu_)),C_(ij_filled_(tmp_uu_)),D_(ij_missed_),'nearest','extrap');



