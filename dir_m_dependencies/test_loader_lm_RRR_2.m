function [xeta_] = test_loader_lm_RRR_2(C_rank_,E_,I_,n_rank,dir_trunk,infix);
%%%%%%%%;
% Fit linear model linking covariates to data: ;
% E_ = [ones(n_u,1) , C_rank_] * zeta_E_un_(:,1:n_rank)*transpose(zeta_E_vn_(:,1:n_rank));
% I_ = [ones(n_u,1) , C_rank_] * zeta_I_un_(:,1:n_rank)*transpose(zeta_I_vn_(:,1:n_rank));
% [E_ , I_] = [ones(n_u,1) , C_rank_] * zeta_EI_un_(:,1:n_rank)*transpose(zeta_EI_vn_(:,1:n_rank));
%%%%%%%%;
% Fit linear model linking data to covariates: ;
% C_rank_ = [ones(n_u,1) , E_] * beta_E_un_(:,1:n_rank)*transpose(beta_E_vn_(:,1:n_rank));
% C_rank_ = [ones(n_u,1) , I_] * beta_I_un_(:,1:n_rank)*transpose(beta_I_vn_(:,1:n_rank));
% C_rank_ = [ones(n_u,1) , E_ , I_] * beta_EI_un_(:,1:n_rank)*transpose(beta_EI_vn_(:,1:n_rank));
%%%%%%%%;

flag_E = 1; flag_I = 1;

[n_u,n_CCOV] = size(C_rank_);
[n_u,n_E_GENE] = size(E_);
[n_u,n_I_GENE] = size(I_);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Fit linear model to log of data (xxxx) ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

fname_beta_pre = sprintf('%s/dir_mat/beta_%s_X_RRR_',dir_trunk,infix);
fname_beta_mat = sprintf('%s.mat',fname_beta_pre);
fname_beta_tmp = sprintf('%s.tmp',fname_beta_pre);
if (~exist(fname_beta_mat,'file') & ~exist(fname_beta_tmp,'file'));
disp(sprintf(' %% %s not found, creating',fname_beta_mat));
save(fname_beta_tmp,'fname_beta_mat');
%%%%%%%%;
% Here we try and estimate the covariates C_ using the genes E_ or I_. ;
% For now we estimate all of C_. ;
% Eventually, we might want to only estimate the C_ which are not associated with a quality. ;
%%%%%%%%;
% Can we estimate the link [1 , E_] * beta_E_ = C_rank_ using a low-rank beta_E_ ?
%%%%%%%%;
if flag_E;
beta_E_un_ = zeros(1+n_E_GENE,n_rank);
beta_E_vn_ = zeros(n_CCOV,n_rank);
tmp_Bn_ = pinv([ones(n_u,1) , E_]);
tmp_Yn_ = C_rank_;
for nrank=1:n_rank;
[tmp_un_,tmp_vn_] = rrr_0([ones(n_u,1) , E_],tmp_Yn_,tmp_Bn_);
beta_E_un_(:,nrank) = tmp_un_;
beta_E_vn_(:,nrank) = tmp_vn_;
tmp_Yn_ = tmp_Yn_ - (ones(n_u,1)*beta_E_un_(1,nrank) + E_*beta_E_un_(2:end,nrank))*transpose(beta_E_vn_(:,nrank));
clear tmp_un_ tmp_vn_;
end;%for nrank=1:n_rank;
clear tmp_Yn_ tmp_Bn_;
end;%if flag_E;
%%%%%%%%
% Can we estimate the link [1 , I_] * beta_I_ = C_rank_ using a low-rank beta_I_ ?
%%%%%%%%
if flag_I;
beta_I_un_ = zeros(1+n_I_GENE,n_rank);
beta_I_vn_ = zeros(n_CCOV,n_rank);
tmp_Bn_ = pinv([ones(n_u,1) , I_]);
tmp_Yn_ = C_rank_;
for nrank=1:n_rank;
[tmp_un_,tmp_vn_] = rrr_0([ones(n_u,1) , I_],tmp_Yn_,tmp_Bn_);
beta_I_un_(:,nrank) = tmp_un_;
beta_I_vn_(:,nrank) = tmp_vn_;
tmp_Yn_ = tmp_Yn_ - (ones(n_u,1)*beta_I_un_(1,nrank) + I_*beta_I_un_(2:end,nrank))*transpose(beta_I_vn_(:,nrank));
clear tmp_un_ tmp_vn_;
end;%for nrank=1:n_rank;
clear tmp_Yn_ tmp_Bn_;
end;%if flag_I;
%%%%%%%%
% Can we estimate the link [1 , E_ , I_] * beta_EI_ = C_rank_ using a low-rank beta_EI_ ?
%%%%%%%%
if flag_E & flag_I;
beta_EI_un_ = zeros(1+n_E_GENE+n_I_GENE,n_rank);
beta_EI_vn_ = zeros(n_CCOV,n_rank);
tmp_Bn_ = pinv([ones(n_u,1) , E_ , I_]);
tmp_Yn_ = C_rank_;
for nrank=1:n_rank;
[tmp_un_,tmp_vn_] = rrr_0([ones(n_u,1) , E_ , I_],tmp_Yn_,tmp_Bn_);
beta_EI_un_(:,nrank) = tmp_un_;
beta_EI_vn_(:,nrank) = tmp_vn_;
tmp_Yn_ = tmp_Yn_ - (ones(n_u,1)*beta_EI_un_(1,nrank) + [E_ , I_]*beta_EI_un_(2:end,nrank))*transpose(beta_EI_vn_(:,nrank));
clear tmp_un_ tmp_vn_;
end;%for nrank=1:n_rank;
clear tmp_Yn_ tmp_Bn_;
end;%if flag_E & flag_I;
%%%%%%%%;
% Appears to be rank 6 or so ;
%%%%%%%%;
flag_disp=0;
if flag_disp;
if flag_E;
subplot(2,3,1);
bar(1:n_rank,sqrt(sum((ones(n_u,1)*beta_E_un_(1,:) + E_*beta_E_un_(2:end,:)).^2,1)),'r');
xlabel('pc #'); ylabel('l2-norm');
title(sprintf('numerical rank of beta_%s_E_',infix),'Interpreter','none');
subplot(2,3,4);
bar(1:n_rank,log10(sqrt(sum((ones(n_u,1)*beta_E_un_(1,:) + E_*beta_E_un_(2:end,:)).^2,1))),'r');
xlabel('pc #'); ylabel('log10(l2-norm)');
title(sprintf('numerical rank of beta_%s_E_',infix),'Interpreter','none');
end;%if flag_E;
if flag_I;
subplot(2,3,2);
bar(1:n_rank,sqrt(sum((ones(n_u,1)*beta_I_un_(1,:) + I_*beta_I_un_(2:end,:)).^2,1)),'b');
xlabel('pc #'); ylabel('l2-norm');
title(sprintf('numerical rank of beta_%s_I_',infix),'Interpreter','none');
subplot(2,3,5);
bar(1:n_rank,log10(sqrt(sum((ones(n_u,1)*beta_I_un_(1,:) + I_*beta_I_un_(2:end,:)).^2,1))),'b');
xlabel('pc #'); ylabel('log10(l2-norm)');
title(sprintf('numerical rank of beta_%s_I_',infix),'Interpreter','none');
end;%if flag_I;
if flag_E & flag_I;
subplot(2,3,3);
bar(1:n_rank,sqrt(sum((ones(n_u,1)*beta_EI_un_(1,:) + [E_ , I_]*beta_EI_un_(2:end,:)).^2,1)),'b');
xlabel('pc #'); ylabel('l2-norm');
title(sprintf('numerical rank of beta_%s_EI_',infix),'Interpreter','none');
subplot(2,3,6);
bar(1:n_rank,log10(sqrt(sum((ones(n_u,1)*beta_EI_un_(1,:) + [E_ , I_]*beta_EI_un_(2:end,:)).^2,1))),'b');
xlabel('pc #'); ylabel('log10(l2-norm)');
title(sprintf('numerical rank of beta_%s_EI_',infix),'Interpreter','none');
end;%if flag_E & flag_I;
set(gcf,'Position',1+[0,0,512*2,512]);
fname_base = sprintf('%s/dir_jpg/beta_%s_X_RRR_',dir_trunk,infix);
disp(sprintf(' %% writing %s.jpg',fname_base));
print('-djpeg',sprintf('%s.jpg',fname_base));
print('-depsc',sprintf('%s.eps',fname_base));
end;%if flag_disp;
%%%%%%%%;
n_beta_E = min(32,n_rank);
n_beta_I = min(32,n_rank);
n_beta_EI = min(32,n_rank);
flag_plot=0;
if flag_plot;
colormap(colormap_beach());
subplot(2,2,1); imagesc(C_rank_,[1,n_u]); title('C_rank_','Interpreter','none');
subplot(2,2,2); imagesc( ( ones(n_u,1)*beta_E_un_(1,:) + E_*beta_E_un_(2:end,:) ) * transpose(beta_E_vn_(:,:)) , [1,n_u]); title(sprintf('E_%s_*beta_',infix),'Interpreter','none');
subplot(2,2,3); imagesc( ( ones(n_u,1)*beta_I_un_(1,:) + I_*beta_I_un_(2:end,:) ) * transpose(beta_I_vn_(:,:)) , [1,n_u]); title(sprintf('I_%s_*beta_',infix),'Interpreter','none');
subplot(2,2,4); imagesc( ( ones(n_u,1)*beta_EI_un_(1,:) + [E_ , I_]*beta_EI_un_(2:end,:) ) * transpose(beta_EI_vn_(:,:)) , [1,n_u]); title(sprintf('EI_%s_*beta_',infix),'Interpreter','none');
figbig;
fname_base = sprintf('%s/dir_jpg/C_vs_X_beta_%s_RRR_',dir_trunk,infix);
disp(sprintf(' %% writing %s.jpg',fname_base));
print('-djpeg',sprintf('%s.jpg',fname_base));
print('-depsc',sprintf('%s.eps',fname_base));
end;%if flag_plot;
save(fname_beta_mat,'beta_E_un_','beta_E_vn_','n_beta_E','beta_I_un_','beta_I_vn_','n_beta_I','beta_EI_un_','beta_EI_vn_','n_beta_EI');
delete(fname_beta_tmp);
end;%if (~exist(fname_beta_mat,'file') & ~exist(fname_beta_tmp,'file'));

fname_zeta_pre = sprintf('%s/dir_mat/zeta_%s_X_RRR_',dir_trunk,infix);
fname_zeta_mat = sprintf('%s.mat',fname_zeta_pre);
fname_zeta_tmp = sprintf('%s.tmp',fname_zeta_pre);
if (~exist(fname_zeta_mat,'file') & ~exist(fname_zeta_tmp,'file'));
disp(sprintf(' %% %s not found, creating',fname_zeta_mat));
save(fname_zeta_tmp,'fname_zeta_mat');
%%%%%%%%;
% Here we try and estimate the genes E_ or I_ using the covariates C_. ;
% For now we use all of C_ to estimate E_ and I_. ;
% Eventually, we might want to use only the C_ which are not associated with quality. ;
%%%%%%%%;
% Can we estimate the link E_ = [1 , C_rank_] * zeta_E_  using a low-rank zeta_E_ ?
%%%%%%%%;
if flag_E;
zeta_E_un_ = zeros(1+n_CCOV,n_rank);
zeta_E_vn_ = zeros(n_E_GENE,n_rank);
tmp_Bn_ = pinv([ones(n_u,1) , C_rank_]);
tmp_Yn_ = E_;
for nrank=1:n_rank;
[tmp_un_,tmp_vn_] = rrr_0([ones(n_u,1) , C_rank_],tmp_Yn_,tmp_Bn_);
zeta_E_un_(:,nrank) = tmp_un_;
zeta_E_vn_(:,nrank) = tmp_vn_;
tmp_Yn_ = tmp_Yn_ - (ones(n_u,1)*zeta_E_un_(1,nrank) + C_rank_*zeta_E_un_(2:end,nrank))*transpose(zeta_E_vn_(:,nrank));
clear tmp_un_ tmp_vn_;
end;%for nrank=1:n_rank;
clear tmp_Yn_ tmp_Bn_;
end;%if flag_E;
%%%%%%%%
% Can we estimate the link I_ = [1, C_rank_] * zeta_I_ using a low-rank zeta_I_ ?
%%%%%%%%
if flag_I;
zeta_I_un_ = zeros(1+n_CCOV,n_rank);
zeta_I_vn_ = zeros(n_I_GENE,n_rank);
tmp_Bn_ = pinv([ones(n_u,1) , C_rank_]);
tmp_Yn_ = I_;
for nrank=1:n_rank;
[tmp_un_,tmp_vn_] = rrr_0([ones(n_u,1) , C_rank_],tmp_Yn_,tmp_Bn_);
zeta_I_un_(:,nrank) = tmp_un_;
zeta_I_vn_(:,nrank) = tmp_vn_;
tmp_Yn_ = tmp_Yn_ - (ones(n_u,1)*zeta_I_un_(1,nrank) + C_rank_*zeta_I_un_(2:end,nrank))*transpose(zeta_I_vn_(:,nrank));
clear tmp_un_ tmp_vn_;
end;%for nrank=1:n_rank;
clear tmp_Yn_ tmp_Bn_;
end;%if flag_I;
%%%%%%%%
% Can we estimate the link [E_ , I_] = [1, C_rank_] * zeta_EI_ using a low-rank zeta_EI_ ?
%%%%%%%%
if flag_E & flag_I;
zeta_EI_un_ = zeros(1+n_CCOV,n_rank);
zeta_EI_vn_ = zeros(n_E_GENE + n_I_GENE,n_rank);
tmp_Bn_ = pinv([ones(n_u,1) , C_rank_]);
tmp_Yn_ = [E_ , I_];
for nrank=1:n_rank;
[tmp_un_,tmp_vn_] = rrr_0([ones(n_u,1) , C_rank_],tmp_Yn_,tmp_Bn_);
zeta_EI_un_(:,nrank) = tmp_un_;
zeta_EI_vn_(:,nrank) = tmp_vn_;
tmp_Yn_ = tmp_Yn_ - (ones(n_u,1)*zeta_EI_un_(1,nrank) + C_rank_*zeta_EI_un_(2:end,nrank))*transpose(zeta_EI_vn_(:,nrank));
clear tmp_un_ tmp_vn_;
end;%for nrank=1:n_rank;
clear tmp_Yn_ tmp_Bn_;
end;%if flag_E & flag_I;
%%%%%%%%;
% Appears to be rank 3 or so ;
%%%%%%%%;
flag_disp=0;
if flag_disp;
if flag_E;
subplot(2,3,1);
bar(1:n_rank,sqrt(sum((ones(n_u,1)*zeta_E_un_(1,:) + C_rank_*zeta_E_un_(2:end,:)).^2,1)),'r');
xlabel('pc #'); ylabel('l2-norm');
title(sprintf('numerical rank of zeta_%s_E_',infix),'Interpreter','none');
subplot(2,3,4);
bar(1:n_rank,log10(sqrt(sum((ones(n_u,1)*zeta_E_un_(1,:) + C_rank_*zeta_E_un_(2:end,:)).^2,1))),'r');
xlabel('pc #'); ylabel('log10(l2-norm)');
title(sprintf('numerical rank of zeta_%s_E_',infix),'Interpreter','none');
end;%if flag_E;
if flag_I;
subplot(2,3,2);
bar(1:n_rank,sqrt(sum((ones(n_u,1)*zeta_I_un_(1,:) + C_rank_*zeta_I_un_(2:end,:)).^2,1)),'b');
xlabel('pc #'); ylabel('l2-norm');
title(sprintf('numerical rank of zeta_%s_I_',infix),'Interpreter','none');
subplot(2,3,5);
bar(1:n_rank,log10(sqrt(sum((ones(n_u,1)*zeta_I_un_(1,:) + C_rank_*zeta_I_un_(2:end,:)).^2,1))),'b');
xlabel('pc #'); ylabel('log10(l2-norm)');
title(sprintf('numerical rank of zeta_%s_I_',infix),'Interpreter','none');
end;%if flag_I;
if flag_E & flag_I;
subplot(2,3,3);
bar(1:n_rank,sqrt(sum((ones(n_u,1)*zeta_EI_un_(1,:) + C_rank_*zeta_EI_un_(2:end,:)).^2,1)),'b');
xlabel('pc #'); ylabel('l2-norm');
title(sprintf('numerical rank of zeta_%s_EI_',infix),'Interpreter','none');
subplot(2,3,6);
bar(1:n_rank,log10(sqrt(sum((ones(n_u,1)*zeta_EI_un_(1,:) + C_rank_*zeta_EI_un_(2:end,:)).^2,1))),'b');
xlabel('pc #'); ylabel('log10(l2-norm)');
title(sprintf('numerical rank of zeta_%s_EI_',infix),'Interpreter','none');
end;%if flag_E & flag_I;
set(gcf,'Position',1+[0,0,512*3,512]);
fname_base = sprintf('%s/dir_jpg/zeta_%s_X_RRR_',dir_trunk,infix);
disp(sprintf(' %% writing %s.jpg',fname_base));
print('-djpeg',sprintf('%s.jpg',fname_base));
print('-depsc',sprintf('%s.eps',fname_base));
end;%if flag_disp;
%%%%%%%%;
n_zeta_E = min(32,n_rank);
n_zeta_I = min(32,n_rank);
n_zeta_EI = min(32,n_rank);
flag_plot=0;
if flag_plot;
colormap(colormap_beach());
tmp_lim_ = mean(E_(:)) + std(E_(:))*1.5*[-1,+1];
subplot(2,3,1); imagesc( E_ , tmp_lim_); title(sprintf('E_%s_',infix),'Interpreter','none');
subplot(2,3,2); imagesc( ( ones(n_u,1)*zeta_E_un_(1,:) + C_rank_*zeta_E_un_(2:end,:) ) * transpose(zeta_E_vn_(:,:)) , tmp_lim_); title(sprintf('C_rank_*zeta_%s_E_',infix),'Interpreter','none');
subplot(2,3,3); imagesc( I_ , tmp_lim_); title(sprintf('I_%s_',infix),'Interpreter','none');
subplot(2,3,4); imagesc( ( ones(n_u,1)*zeta_I_un_(1,:) + C_rank_*zeta_I_un_(2:end,:) ) * transpose(zeta_I_vn_(:,:)) , tmp_lim_); title(sprintf('C_rank_*zeta_%s_I_',infix),'Interpreter','none');
subplot(2,3,5); imagesc( [E_ , I_] , tmp_lim_); title(sprintf('EI_%s_',infix),'Interpreter','none');
subplot(2,3,6); imagesc( ( ones(n_u,1)*zeta_EI_un_(1,:) + C_rank_*zeta_EI_un_(2:end,:) ) * transpose(zeta_EI_vn_(:,:)) , tmp_lim_); title(sprintf('C_rank_*zeta_%s_EI_',infix),'Interpreter','none');
figbig;
fname_base = sprintf('%s/dir_jpg/X_vs_C_zeta_%s_RRR_',dir_trunk,infix);
disp(sprintf(' %% writing %s.jpg',fname_base));
print('-djpeg',sprintf('%s.jpg',fname_base));
print('-depsc',sprintf('%s.eps',fname_base));
end;%if flag_plot;
save(fname_zeta_mat,'zeta_E_un_','zeta_E_vn_','n_zeta_E','zeta_I_un_','zeta_I_vn_','n_zeta_I','zeta_EI_un_','zeta_EI_vn_','n_zeta_EI');
delete(fname_zeta_tmp);
end;%if (~exist(fname_zeta_mat,'file') & ~exist(fname_zeta_tmp,'file'));

%{
%%%%%%%%;
if flag_E;
tmp_ = zeta_E_un_; fname_tsv = sprintf('%s/dir_mat/E_%s_zeta_un_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = zeta_E_vn_; fname_tsv = sprintf('%s/dir_mat/E_%s_zeta_vn_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = beta_E_un_; fname_tsv = sprintf('%s/dir_mat/E_%s_beta_un_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = beta_E_vn_; fname_tsv = sprintf('%s/dir_mat/E_%s_beta_vn_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
end;%if flag_E;
%%%%%%%%;
if flag_I;
tmp_ = zeta_I_un_; fname_tsv = sprintf('%s/dir_mat/I_%s_zeta_un_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = zeta_I_vn_; fname_tsv = sprintf('%s/dir_mat/I_%s_zeta_vn_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = beta_I_un_; fname_tsv = sprintf('%s/dir_mat/I_%s_beta_un_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = beta_I_vn_; fname_tsv = sprintf('%s/dir_mat/I_%s_beta_vn_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
end;%if flag_I;
%%%%%%%%;
if flag_E & flag_I;
tmp_ = zeta_EI_un_; fname_tsv = sprintf('%s/dir_mat/EI_%s_zeta_un_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = zeta_EI_vn_; fname_tsv = sprintf('%s/dir_mat/EI_%s_zeta_vn_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = beta_EI_un_; fname_tsv = sprintf('%s/dir_mat/EI_%s_beta_un_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
tmp_ = beta_EI_vn_; fname_tsv = sprintf('%s/dir_mat/EI_%s_beta_vn_.tsv',dir_trunk,infix); save(fname_tsv,'tmp_','-ascii','-tabs');
end;%if flag_E & flag_I;
%%%%%%%%;
 %}

xeta_ = struct('type','xeta_RRR_');
xeta_.n_rank = n_rank;
xeta_.n_u = n_u;
xeta_.n_E_GENE = n_E_GENE;
xeta_.n_I_GENE = n_I_GENE;
xeta_.C_rank_ = C_rank_;
xeta_.dir_trunk = dir_trunk;
xeta_.infix = infix;
xeta_.fname_zeta = fname_zeta_mat;
if ( exist(fname_zeta_mat,'file'));
load(fname_zeta,'zeta_E_un_','zeta_E_vn_','n_zeta_E','zeta_I_un_','zeta_I_vn_','n_zeta_I','zeta_EI_un_','zeta_EI_vn_','n_zeta_EI');
xeta_.zeta_E_un_ = zeta_E_un_; xeta_.zeta_E_vn_ = zeta_E_vn_; xeta_.n_zeta_E = n_zeta_E;
xeta_.zeta_I_un_ = zeta_I_un_; xeta_.zeta_I_vn_ = zeta_I_vn_; xeta_.n_zeta_I = n_zeta_I;
xeta_.zeta_EI_un_ = zeta_EI_un_; xeta_.zeta_EI_vn_ = zeta_EI_vn_; xeta_.n_zeta_EI = n_zeta_EI;
end;%if ( exist(fname_zeta_mat,'file'));
xeta_.fname_beta = fname_beta_mat;
if ( exist(fname_beta_mat,'file'));
load(fname_beta,'beta_E_un_','beta_E_vn_','n_beta_E','beta_I_un_','beta_I_vn_','n_beta_I','beta_EI_un_','beta_EI_vn_','n_beta_EI');
xeta_.beta_E_un_ = beta_E_un_; xeta_.beta_E_vn_ = beta_E_vn_; xeta_.n_beta_E = n_beta_E;
xeta_.beta_I_un_ = beta_I_un_; xeta_.beta_I_vn_ = beta_I_vn_; xeta_.n_beta_I = n_beta_I;
xeta_.beta_EI_un_ = beta_EI_un_; xeta_.beta_EI_vn_ = beta_EI_vn_; xeta_.n_beta_EI = n_beta_EI;
end;%if ( exist(fname_beta_mat,'file'));
