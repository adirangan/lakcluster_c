function nll_ = tw_chiani_nll(x_0in_,k_appx,theta_appx,alpha_appx);
% calculates negative-log-likelihood of a given model for samples of leading eigenvalues. ;
% ;
% Inputs: ;
% x_0in_ : (double) array of size n_x. Sampled maximum eigenvalues. ;
% k_appx : (double) K. ;
% theta_appx: (double) theta. ;
% alpha_appx: (double) alpha. ;
% ;

if (nargin<1);
disp(sprintf(' %% testing tw_chiani_nll'));
%%%%%%%%;
n_row = 127; n_col = 1781;
n_sample = 1024;
svd_ = zeros(n_sample,1);
for nsample=0:n_sample-1; rng(1024*nsample); svd_(1+nsample) = svds(randn(n_row,n_col),1); end;
a1 = -0.5; a2 = -0.5; %<-- beta = 1 for real. ;
avg_tw = ( sqrt(n_row + a1) + sqrt(n_col + a2) ).^2 ;
std_tw = sqrt(avg_tw) * ( 1/sqrt(n_row + a1) + 1/sqrt(n_col + a2) ).^(1/3);
eig_tw_ = (svd_.^2 - avg_tw)/std_tw;
kta_wis_ = [ 46.44604884387787 ; 0.18605402228279347 ; 9.848007781128567 ]; %<-- k, theta, alpha for wishart matrices with beta==1. ;
tw_nll = @(kta_) sum(tw_chiani_nll(eig_tw_,kta_(1+0),kta_(1+1),kta_(1+2)));
kta_opt_ = fminsearch(tw_nll,kta_wis_);
%%%%%%%%;
xlim_ = [-6,+6];
x_ = linspace(min(xlim_),max(xlim_),1024);
h_x_ = linspace(min(xlim_),max(xlim_),32);
h_ = hist(eig_tw_,h_x_); h_ = h_/sum(h_)/mean(diff(h_x_));
figure(1);clf;
hold on;
stairs(h_x_,h_,'r-');
plot(x_,tw_chiani_pdf(x_),'k-');
plot(x_,exp(-tw_chiani_nll(x_,kta_wis_(1+0),kta_wis_(1+1),kta_wis_(1+2))),'m-');
plot(x_,exp(-tw_chiani_nll(x_,kta_opt_(1+0),kta_opt_(1+1),kta_opt_(1+2))),'g-');
hold off;
%%%%%%%%;
disp('returning'); return;
end;%if (nargin<1);

lpdf_ = -Inf*(ones(size(x_0in_)));
x_ = x_0in_ + alpha_appx;
index_ = efind(x_>0);
t = theta_appx;
k = max(0,k_appx);
lpdf_(1+index_) = (k-1).*log(x_(1+index_)) - x_(1+index_)/t - k*log(t) - gammaln(k);
nll_ = -lpdf_;
