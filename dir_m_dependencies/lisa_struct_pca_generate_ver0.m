function [lisa_arm1,lisa_arm2] = lisa_struct_pca_generate_ver0(specification) ;
%{

  %%%%%%%%;
  % Basic run. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  cl_num_arm1 = 4; cl_num_arm2 = 4; %<-- train on platform 4, replicate on platform 1. ;
  cl_num_arm1_mc_A = []; cl_num_arm1_mr_A_full_ = []; cl_num_arm1_mr_Z_full_ = []; cl_num_arm1_string = []; 
  cl_num_arm2_mc_A = []; cl_num_arm2_mr_A_full_ = []; cl_num_arm2_mr_Z_full_ = []; cl_num_arm2_string = []; 
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; 
  mr_string_arm1 = '';mc_string_arm1 = ''; mr_string_arm2 = '';mc_string_arm2 = ''; No special mc_string. ;
  %mr_string_arm1 = 'BDX';mc_string_arm1 = 'BDX'; mr_string_arm2 = 'BDX';mc_string_arm2 = 'BDX'; No special mc_string. ;
  for n_maf = [1,4,5,6]; %n_maf = 5; %<-- minor-allele-frequency cutoff 25-50;
  n_cov = 2; %<-- 2 covariates (mds-components) used, repeated twice. ;
  n_scramble = 0; n_shuffle = 0; %<-- no previous bicluster extracted/scrambled first, no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
  n_iteration_stride = 25/2;
  for flag_reverse = [0,1];%for flag_reverse = 0:1;
  for cl_num_arm2 = 1;%for cl_num_arm2 = 1:4;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string_arm1 = mr_string_arm1;
  specification.mc_string_arm1 = mc_string_arm1;
  specification.mr_string_arm2 = mr_string_arm2;
  specification.mc_string_arm2 = mc_string_arm2;
  specification.cl_num_arm1 = cl_num_arm1;
  specification.cl_num_arm1_mc_A = cl_num_arm1_mc_A;
  specification.cl_num_arm1_mr_A_full_ = cl_num_arm1_mr_A_full_;
  specification.cl_num_arm1_mr_Z_full_ = cl_num_arm1_mr_Z_full_;
  specification.cl_num_arm1_string = cl_num_arm1_string;
  specification.cl_num_arm2 = cl_num_arm2;
  specification.cl_num_arm2_mc_A = cl_num_arm2_mc_A;
  specification.cl_num_arm2_mr_A_full_ = cl_num_arm2_mr_A_full_;
  specification.cl_num_arm2_mr_Z_full_ = cl_num_arm2_mr_Z_full_;
  specification.cl_num_arm2_string = cl_num_arm2_string;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.pca_b_mlt = pca_b_mlt;
  specification.pca_tolerance = pca_tolerance;
  specification.pca_rank = pca_rank;
  specification.n_iteration_stride = n_iteration_stride;
  lisa_struct_pca_generate_ver0(specification) ;
  end;%for cl_num_arm2 = 1:4;
  end;%for flag_reverse = 0:1;
  end;%for n_maf = [1,4,5,6]; %n_maf = 5; %<-- minor-allele-frequency cutoff 25-50;

  %%%%%%%%;
  % exclude some columns from cl1. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  tmpchar_cap = sprintf('%s/dir_misc/p25_cap_cl%d_cl%d_mc_A_.b16',dir_trunk,1,2);
  tmp_mc_A_ = (tutorial_binary_uncompress(tmpchar_cap)>0);
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  cl_num_arm1 = 4; cl_num_arm2 = 1; %<-- train on platform 4, replicate on platform 1. ;
  cl_num_arm1_mc_A = []; cl_num_arm1_mr_A_full_ = []; cl_num_arm1_mr_Z_full_ = []; cl_num_arm1_string = []; 
  cl_num_arm2_mc_A = tmp_mc_A_; cl_num_arm2_mr_A_full_ = []; cl_num_arm2_mr_Z_full_ = []; cl_num_arm2_string = 'cap2'; 
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; mr_string_arm1 = '';mc_string_arm1 = ''; mr_string_arm2 = '';mc_string_arm2 = ''; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; No special mc_string. ;
  n_maf = 5; n_cov = 2; %<-- minor-allele-frequency cutoff 25-50, 2 covariates (mds-components) used, repeated twice. ;
  n_scramble = 0; n_shuffle = 0; %<-- no previous bicluster extracted/scrambled first, no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
  n_iteration_stride = 25/2;
  for flag_reverse = 0;
  for cl_num_arm2 = 1;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string_arm1 = mr_string_arm1;
  specification.mc_string_arm1 = mc_string_arm1;
  specification.mr_string_arm2 = mr_string_arm2;
  specification.mc_string_arm2 = mc_string_arm2;
  specification.cl_num_arm1 = cl_num_arm1;
  specification.cl_num_arm1_mc_A = cl_num_arm1_mc_A;
  specification.cl_num_arm1_mr_A_full_ = cl_num_arm1_mr_A_full_;
  specification.cl_num_arm1_mr_Z_full_ = cl_num_arm1_mr_Z_full_;
  specification.cl_num_arm1_string = cl_num_arm1_string;
  specification.cl_num_arm2 = cl_num_arm2;
  specification.cl_num_arm2_mc_A = cl_num_arm2_mc_A;
  specification.cl_num_arm2_mr_A_full_ = cl_num_arm2_mr_A_full_;
  specification.cl_num_arm2_mr_Z_full_ = cl_num_arm2_mr_Z_full_;
  specification.cl_num_arm2_string = cl_num_arm2_string;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.pca_b_mlt = pca_b_mlt;
  specification.pca_tolerance = pca_tolerance;
  specification.pca_rank = pca_rank;
  specification.n_iteration_stride = n_iteration_stride;
  lisa_struct_pca_generate_ver0(specification) ;
  end;%for cl_num_arm2 = 1:4;
  end;%for flag_reverse = 0:1;

  %%%%%%%%;
  % BX1. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  cl_num_arm1 = 1; cl_num_arm2 = 4; %<-- train on platform 4, replicate on platform 1. ;
  cl_num_arm1_mc_A = []; cl_num_arm1_mr_A_full_ = []; cl_num_arm1_mr_Z_full_ = []; cl_num_arm1_string = []; 
  cl_num_arm2_mc_A = []; cl_num_arm2_mr_A_full_ = []; cl_num_arm2_mr_Z_full_ = []; cl_num_arm2_string = []; 
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; mr_string_arm1 = '';mc_string_arm1 = ''; mr_string_arm2 = '';mc_string_arm2 = ''; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; No special mc_string. ;
  n_maf = 5; n_cov = 2; %<-- minor-allele-frequency cutoff 25-50, 2 covariates (mds-components) used, repeated twice. ;
  n_scramble = 0; n_shuffle = 0; %<-- no previous bicluster extracted/scrambled first, no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
  n_iteration_stride = 25/2;
  mr_string_arm1 = 'BX1'; mc_string_arm1 = 'BX1';
  mr_string_arm2 = ''; mc_string_arm2 = '';
  for flag_reverse = 1;%for flag_reverse = 0:1;
  for cl_num_arm2 = 1:4;%for cl_num_arm2 = 1:4;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string_arm1 = mr_string_arm1;
  specification.mc_string_arm1 = mc_string_arm1;
  specification.mr_string_arm2 = mr_string_arm2;
  specification.mc_string_arm2 = mc_string_arm2;
  specification.cl_num_arm1 = cl_num_arm1;
  specification.cl_num_arm1_mc_A = cl_num_arm1_mc_A;
  specification.cl_num_arm1_mr_A_full_ = cl_num_arm1_mr_A_full_;
  specification.cl_num_arm1_mr_Z_full_ = cl_num_arm1_mr_Z_full_;
  specification.cl_num_arm1_string = cl_num_arm1_string;
  specification.cl_num_arm2 = cl_num_arm2;
  specification.cl_num_arm2_mc_A = cl_num_arm2_mc_A;
  specification.cl_num_arm2_mr_A_full_ = cl_num_arm2_mr_A_full_;
  specification.cl_num_arm2_mr_Z_full_ = cl_num_arm2_mr_Z_full_;
  specification.cl_num_arm2_string = cl_num_arm2_string;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.pca_b_mlt = pca_b_mlt;
  specification.pca_tolerance = pca_tolerance;
  specification.pca_rank = pca_rank;
  specification.n_iteration_stride = n_iteration_stride;
  lisa_struct_pca_generate_ver0(specification) ;
  end;%for cl_num_arm2 = 1:4;
  end;%for flag_reverse = 0:1;

  %%%%%%%%;
  % BDX. ;
  %%%%%%%%;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20190328');
  dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev');
  flag_dex_vs_lak = 'dex'; %<-- differentially expressed clustering. ;
  cl_num_arm1 = 1; cl_num_arm2 = 4; %<-- train on platform 4, replicate on platform 1. ;
  cl_num_arm1_mc_A = []; cl_num_arm1_mr_A_full_ = []; cl_num_arm1_mr_Z_full_ = []; cl_num_arm1_string = []; 
  cl_num_arm2_mc_A = []; cl_num_arm2_mr_A_full_ = []; cl_num_arm2_mr_Z_full_ = []; cl_num_arm2_string = []; 
  flag_reverse = 0; %<-- forward bicluster (i.e., case-specific). ;
  gamma = [0.004]; %<-- gamma is the fraction eliminated per iteration. 000 implies a single patient eliminated per iteration. ;
  B_MLT = 34; n_mds = 20; mr_string_arm1 = '';mc_string_arm1 = ''; mr_string_arm2 = '';mc_string_arm2 = ''; %<-- accurate to 2^(-34), 20 total mds components (but only 2 used). ; No special mc_string. ;
  n_maf = 5; %<-- minor-allele-frequency cutoff 25-50;
  n_cov = 2; %<-- covariates (mds-components) used, repeated twice. ;
  n_scramble = 0; n_shuffle = 0; %<-- no previous bicluster extracted/scrambled first, no random shuffling. ;
  flag_rerun=0; %<-- regenerate files.; 
  pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
  n_iteration_stride = 25/2;
  mr_string_arm1 = 'BDX'; mc_string_arm1 = 'BDX';
  mr_string_arm2 = 'BDX'; mc_string_arm2 = 'BDX';
  for flag_reverse = [0:1];%for flag_reverse = 0:1;
  for cl_num_arm2 = 4;%for cl_num_arm2 = 1:4;
  specification = struct();
  specification.dir_trunk = dir_trunk;
  specification.dir_code = dir_code;
  specification.mr_string_arm1 = mr_string_arm1;
  specification.mc_string_arm1 = mc_string_arm1;
  specification.mr_string_arm2 = mr_string_arm2;
  specification.mc_string_arm2 = mc_string_arm2;
  specification.cl_num_arm1 = cl_num_arm1;
  specification.cl_num_arm1_mc_A = cl_num_arm1_mc_A;
  specification.cl_num_arm1_mr_A_full_ = cl_num_arm1_mr_A_full_;
  specification.cl_num_arm1_mr_Z_full_ = cl_num_arm1_mr_Z_full_;
  specification.cl_num_arm1_string = cl_num_arm1_string;
  specification.cl_num_arm2 = cl_num_arm2;
  specification.cl_num_arm2_mc_A = cl_num_arm2_mc_A;
  specification.cl_num_arm2_mr_A_full_ = cl_num_arm2_mr_A_full_;
  specification.cl_num_arm2_mr_Z_full_ = cl_num_arm2_mr_Z_full_;
  specification.cl_num_arm2_string = cl_num_arm2_string;
  specification.flag_dex_vs_lak = flag_dex_vs_lak;
  specification.gamma = gamma;
  specification.B_MLT = B_MLT;
  specification.n_mds = n_mds;
  specification.flag_reverse = flag_reverse;
  specification.n_maf = n_maf;
  specification.n_cov = n_cov;
  specification.n_scramble = n_scramble;
  specification.n_shuffle = n_shuffle;
  specification.flag_rerun = flag_rerun;
  specification.pca_b_mlt = pca_b_mlt;
  specification.pca_tolerance = pca_tolerance;
  specification.pca_rank = pca_rank;
  specification.n_iteration_stride = n_iteration_stride;
  lisa_struct_pca_generate_ver0(specification) ;
  end;%for cl_num_arm2 = 1:4;
  end;%for flag_reverse = 0:1;

 %}

dir_trunk = specification.dir_trunk;
dir_code = specification.dir_code;
mr_string_arm1 = specification.mr_string_arm1;
mc_string_arm1 = specification.mc_string_arm1;
cl_num_arm1 = specification.cl_num_arm1;
cl_num_arm1_mc_A = specification.cl_num_arm1_mc_A;
cl_num_arm1_mr_A_full_ = specification.cl_num_arm1_mr_A_full_;
cl_num_arm1_mr_Z_full_ = specification.cl_num_arm1_mr_Z_full_;
cl_num_arm1_string = specification.cl_num_arm1_string;
mr_string_arm2 = specification.mr_string_arm2;
mc_string_arm2 = specification.mc_string_arm2;
cl_num_arm2 = specification.cl_num_arm2;
cl_num_arm2_mc_A = specification.cl_num_arm2_mc_A;
cl_num_arm2_mr_A_full_ = specification.cl_num_arm2_mr_A_full_;
cl_num_arm2_mr_Z_full_ = specification.cl_num_arm2_mr_Z_full_;
cl_num_arm2_string = specification.cl_num_arm2_string;
flag_dex_vs_lak = specification.flag_dex_vs_lak;
gamma = specification.gamma;
B_MLT = specification.B_MLT;
n_mds = specification.n_mds;
flag_reverse = specification.flag_reverse;
n_maf = specification.n_maf;
n_cov = specification.n_cov;
n_scramble = specification.n_scramble;
n_shuffle = specification.n_shuffle;
flag_rerun = specification.flag_rerun;
pca_b_mlt = specification.pca_b_mlt;
pca_tolerance = specification.pca_tolerance;
pca_rank = specification.pca_rank;
n_iteration_stride = specification.n_iteration_stride;

%%%%%%%%;
lisa_arm1 = lisa_struct_make_ver0(mr_string_arm1,mc_string_arm1,cl_num_arm1,flag_dex_vs_lak,gamma,B_MLT,n_mds,flag_reverse,n_maf,n_cov,n_scramble,n_shuffle) ;
lisa_arm1 = lisa_struct_prefix_ver0(lisa_arm1,dir_code,dir_trunk); 
lisa_arm1.nshuffle = 0;  lisa_arm1 = lisa_struct_names_ver0(lisa_arm1); 
lisa_arm1 = lisa_struct_xdrop_ver0(lisa_arm1); lisa_arm1 = lisa_struct_mdsfam_ver0(lisa_arm1); 
%lisa_arm1 = lisa_struct_bim_ver0(lisa_arm1); %<-- this is large and takes a while to load. ;
lisa_arm1 = lisa_struct_mx_ver0(lisa_arm1); lisa_arm1 = lisa_struct_studyindex_ver0(lisa_arm1); 
lisa_arm1 = lisa_struct_trace_ver0(lisa_arm1);
%%%%%%%%;
lisa_arm2 = lisa_struct_make_ver0(mr_string_arm2,mc_string_arm2,cl_num_arm2,flag_dex_vs_lak,gamma,B_MLT,n_mds,flag_reverse,n_maf,n_cov,0,n_shuffle) ;
lisa_arm2 = lisa_struct_prefix_ver0(lisa_arm2,dir_code,dir_trunk); 
lisa_arm2.nshuffle = 0;  lisa_arm2 = lisa_struct_names_ver0(lisa_arm2); 
lisa_arm2 = lisa_struct_xdrop_ver0(lisa_arm2); lisa_arm2 = lisa_struct_mdsfam_ver0(lisa_arm2); 
%lisa_arm2 = lisa_struct_bim_ver0(lisa_arm2); %<-- this is large and takes a while to load. ;
lisa_arm2 = lisa_struct_mx_ver0(lisa_arm2); lisa_arm2 = lisa_struct_studyindex_ver0(lisa_arm2); 
lisa_arm2 = lisa_struct_trace_ver0(lisa_arm2);
%%%%%%%%;

lisa_arm1.dir_out_s0_pca = sprintf('%s/dir_pca_trn%d%s_tst%d%s',lisa_arm1.dir_out_s0,lisa_arm1.cl_num,cl_num_arm1_string,lisa_arm2.cl_num,cl_num_arm2_string);
if (~exist(lisa_arm1.dir_out_s0_pca,'dir')); disp(sprintf(' %% mkdir %s',lisa_arm1.dir_out_s0_pca)); mkdir(lisa_arm1.dir_out_s0_pca); end;
lisa_arm1.dir_out_s0_pca_jpg = sprintf('%s/dir_jpg',lisa_arm1.dir_out_s0_pca);
if (~exist(lisa_arm1.dir_out_s0_pca_jpg,'dir')); disp(sprintf(' %% creating %s',lisa_arm1.dir_out_s0_pca_jpg)); mkdir(lisa_arm1.dir_out_s0_pca_jpg); end;
n_iteration = lisa_arm1.n_iteration;
niteration_ = round(0:n_iteration_stride:n_iteration); 
niteration_(1)=1; niteration_(end) = min(niteration_(end),n_iteration-1);
niteration_ = niteration_(length(niteration_):-1:1);

flag_verbose=0;

flag_found_all=1;
for ni=1:length(niteration_);
niteration = niteration_(ni);
pca_fname_i = sprintf('%s/i_trn%d_tst%d.mat',lisa_arm1.dir_out_s0_pca,lisa_arm1.cl_num,lisa_arm2.cl_num);
pca_infix = sprintf('pca_ni%d_tst%d',niteration,lisa_arm2.cl_num);
pca_fname_V_arm1_ = sprintf('%s/%s_k%d_B%d_V_.mda',lisa_arm1.dir_out_s0_pca,pca_infix,pca_rank,pca_b_mlt);
pca_fname_V_arm2_ = sprintf('%s/%s_k%d_B%d_V_arm2_.mda',lisa_arm1.dir_out_s0_pca,pca_infix,pca_rank,pca_b_mlt);
pca_proj_arm1_infix = sprintf('pca_proj_arm1_ni%d_tst%d',niteration,lisa_arm2.cl_num);
pca_fname_AnV_arm1_ = sprintf('%s/%s_k%d_B%d_AnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm1_infix,pca_rank,pca_b_mlt);
pca_fname_ZnV_arm1_ = sprintf('%s/%s_k%d_B%d_ZnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm1_infix,pca_rank,pca_b_mlt);
pca_proj_arm2_infix = sprintf('pca_proj_arm2_ni%d_tst%d',niteration,lisa_arm2.cl_num);
pca_fname_AnV_arm2_ = sprintf('%s/%s_k%d_B%d_AnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm2_infix,pca_rank,pca_b_mlt);
pca_fname_ZnV_arm2_ = sprintf('%s/%s_k%d_B%d_ZnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm2_infix,pca_rank,pca_b_mlt);
pca_fname_fig = sprintf('%s/%s_pca_proj_ni%d_tst%d.jpg',lisa_arm1.dir_out_s0_pca_jpg,lisa_arm1.string_name_s0,niteration,lisa_arm2.cl_num); 
if (...
    exist(pca_fname_i,'file') & ...
    exist(pca_fname_V_arm1_,'file') & ...
    exist(pca_fname_V_arm2_,'file') & ...
    exist(pca_fname_AnV_arm1_,'file') & ...
    exist(pca_fname_ZnV_arm1_,'file') & ...
    exist(pca_fname_AnV_arm2_,'file') & ...
    exist(pca_fname_ZnV_arm2_,'file') & ...
    exist(pca_fname_fig,'file') & ...
    1);
if (flag_verbose>1); disp(sprintf(' %% ni %d niteration %d; found:\n%% %s\n%% %s\n%% %s\n%% %s\n%% %s\n%% %s\n%% %s\n%% %s',ni,niteration,pca_fname_i,pca_fname_V_arm1_,pca_fname_V_arm2_,pca_fname_AnV_arm1_,pca_fname_ZnV_arm1_,pca_fname_AnV_arm2_,pca_fname_ZnV_arm2_,pca_fname_fig)); end;% if (flag_verbose>1);
 else;
disp(sprintf(' %% ni %d niteration %d; missing files',ni,niteration));
flag_found_all = flag_found_all*0;
end;% if exist;
end;%for ni=1:length(niteration_);

if (flag_found_all==1); disp(sprintf(' %% pca %s tst%d found all files',lisa_arm1.string_name_s0,lisa_arm2.cl_num)); end;% if (flag_found_all==1);

if (flag_rerun==1 | flag_found_all==0);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% intersect columns in arm1 with columns from arm2 (replication arm). ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
disp(sprintf(' %% lisa_arm1.cl_num %d --> %s versus lisa_arm2.cl_num %d --> %s',lisa_arm1.cl_num,lisa_arm1.string_prefix,lisa_arm2.cl_num,lisa_arm2.string_prefix));
lisa_arm1 = lisa_struct_bim_ver0(lisa_arm1); %<-- this is large and takes a while to load. ;
lisa_arm2 = lisa_struct_bim_ver0(lisa_arm2); %<-- this is large and takes a while to load. ;

%%%%%%%%%%%%%%%% ;
pca_fname_i = sprintf('%s/i_trn%d_tst%d.mat',lisa_arm1.dir_out_s0_pca,lisa_arm1.cl_num,lisa_arm2.cl_num);
if (flag_rerun==0 & exist(pca_fname_i,'file')); disp(sprintf(' %% loading %s',pca_fname_i)); load(pca_fname_i); end;
if (flag_rerun==1 | ~exist(pca_fname_i,'file')); disp(sprintf(' %% creating %s',pca_fname_i)); 
[~,i_arm1,i_arm2] = intersect(lisa_arm1.bim_name_,lisa_arm2.bim_name_,'stable');
save(pca_fname_i,'i_arm1','i_arm2');
end;%if (~exist(pca_fname_i,'file'));
disp(sprintf(' %% lisa_arm1.bim_name_ length %d, lisa_arm2.bim_name_ length %d, intersection length %d',length(lisa_arm1.bim_name_),length(lisa_arm2.bim_name_),length(i_arm1)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Now set niteration and generate row- and col-masks. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
for ni=1:length(niteration_);
niteration = niteration_(ni);

flag_found_local = 0;
pca_fname_i = sprintf('%s/i_trn%d_tst%d.mat',lisa_arm1.dir_out_s0_pca,lisa_arm1.cl_num,lisa_arm2.cl_num);
pca_infix = sprintf('pca_ni%d_tst%d',niteration,lisa_arm2.cl_num);
pca_fname_V_arm1_ = sprintf('%s/%s_k%d_B%d_V_.mda',lisa_arm1.dir_out_s0_pca,pca_infix,pca_rank,pca_b_mlt);
pca_fname_V_arm2_ = sprintf('%s/%s_k%d_B%d_V_arm2_.mda',lisa_arm1.dir_out_s0_pca,pca_infix,pca_rank,pca_b_mlt);
pca_proj_arm1_infix = sprintf('pca_proj_arm1_ni%d_tst%d',niteration,lisa_arm2.cl_num);
pca_fname_AnV_arm1_ = sprintf('%s/%s_k%d_B%d_AnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm1_infix,pca_rank,pca_b_mlt);
pca_fname_ZnV_arm1_ = sprintf('%s/%s_k%d_B%d_ZnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm1_infix,pca_rank,pca_b_mlt);
pca_proj_arm2_infix = sprintf('pca_proj_arm2_ni%d_tst%d',niteration,lisa_arm2.cl_num);
pca_fname_AnV_arm2_ = sprintf('%s/%s_k%d_B%d_AnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm2_infix,pca_rank,pca_b_mlt);
pca_fname_ZnV_arm2_ = sprintf('%s/%s_k%d_B%d_ZnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm2_infix,pca_rank,pca_b_mlt);
pca_fname_fig = sprintf('%s/%s_pca_proj_ni%d_tst%d.jpg',lisa_arm1.dir_out_s0_pca_jpg,lisa_arm1.string_name_s0,niteration,lisa_arm2.cl_num); 
if (...
    exist(pca_fname_i,'file') & ...
    exist(pca_fname_V_arm1_,'file') & ...
    exist(pca_fname_V_arm2_,'file') & ...
    exist(pca_fname_AnV_arm1_,'file') & ...
    exist(pca_fname_ZnV_arm1_,'file') & ...
    exist(pca_fname_AnV_arm2_,'file') & ...
    exist(pca_fname_ZnV_arm2_,'file') & ...
    exist(pca_fname_fig,'file') & ...
    1);
flag_found_local=1;
if (flag_verbose>1); disp(sprintf(' %% ni %d niteration %d; found:\n%% %s\n%% %s\n%% %s\n%% %s\n%% %s\n%% %s\n%% %s\n%% %s',ni,niteration,pca_fname_i,pca_fname_V_arm1_,pca_fname_V_arm2_,pca_fname_AnV_arm1_,pca_fname_ZnV_arm1_,pca_fname_AnV_arm2_,pca_fname_ZnV_arm2_,pca_fname_fig)); end;% if (flag_verbose>1);
 else;
flag_found_local = 0;
disp(sprintf(' %% ni %d niteration %d; missing files',ni,niteration));
end;% if exist;

if (flag_rerun==1 | flag_found_local==0); 

disp(sprintf(' %% ni %d/%d, niteration %d',ni,length(niteration_),niteration));
if (flag_reverse==1); 
mr_Z_arm1_tmp = lisa_arm1.mr_Z_full_*0; mr_Z_arm1_tmp(lisa_arm1.rdrop_a_(length(lisa_arm1.rdrop_a_)-lisa_arm1.r_rem_(niteration)+1:length(lisa_arm1.rdrop_a_)))=1; 
if (~isempty(cl_num_arm1_mr_Z_full_)); disp(sprintf(' %% limiting mr_Z_full_ to %d via %s',sum(cl_num_arm1_mr_Z_full_),cl_num_arm1_string)); mr_Z_arm1_tmp = mr_Z_arm1_tmp.*cl_num_arm1_mr_Z_full_; end;
end;%if (flag_reverse==1); 
if (flag_reverse==0); 
mr_A_arm1_tmp = lisa_arm1.mr_A_full_*0; mr_A_arm1_tmp(lisa_arm1.rdrop_a_(length(lisa_arm1.rdrop_a_)-lisa_arm1.r_rem_(niteration)+1:length(lisa_arm1.rdrop_a_)))=1; 
if (~isempty(cl_num_arm1_mr_A_full_)); disp(sprintf(' %% limiting mr_A_full_ to %d via %s',sum(cl_num_arm1_mr_A_full_),cl_num_arm1_string)); mr_A_arm1_tmp = mr_A_arm1_tmp.*cl_num_arm1_mr_A_full_; end;
end;%if (flag_reverse==0); 
tmpchar = sprintf('%s/%s_mc_A.b16',lisa_arm1.dir_out_s0,lisa_arm1.string_name_s0); 
[bitj,nrows,ncols] = tutorial_binary_getsize(tmpchar); mc_A_arm1 = tutorial_binary_uncompress(tmpchar,1:nrows,1:ncols)>0;
mc_A_arm1_tmp = mc_A_arm1*0; mc_A_arm1_tmp(lisa_arm1.cdrop_a_(length(lisa_arm1.cdrop_a_)-lisa_arm1.c_rem_(niteration)+1:length(lisa_arm1.cdrop_a_)))=1;
if (~isempty(cl_num_arm1_mc_A)); disp(sprintf(' %% limiting mc_A_ to %d via %s',sum(cl_num_arm1_mc_A),cl_num_arm1_string)); mc_A_arm1_tmp = mc_A_arm1_tmp.*cl_num_arm1_mc_A; end;
%%%%%%%%%%%%%%%% ;
% mc_A_arm1_cap contains columns for arm1. ;
%%%%%%%%%%%%%%%% ;
[~,ii] = intersect(i_arm1,find(mc_A_arm1_tmp),'stable');
disp(sprintf(' %% ii length %d',length(ii)));
for nc=1:length(ii); assert(strcmp(lisa_arm2.bim_name_{i_arm2(ii(nc))},lisa_arm1.bim_name_{i_arm1(ii(nc))})); end;%for nc=1:length(ii);
mc_A_arm1_cap = mc_A_arm1*0; mc_A_arm1_cap(i_arm1(ii))=1;
%%%%%%%%%%%%%%%% ;
% mc_A_arm2_cap contains columns for replication arm. ;
%%%%%%%%%%%%%%%% ;
tmpchar = sprintf('%s/PGC_cl%d_maf01_mc_A.b16',lisa_arm2.dir__in,lisa_arm2.cl_num);
[bitj,nrows,ncols] = tutorial_binary_getsize(tmpchar); mc_A_arm2 = tutorial_binary_uncompress(tmpchar,1:nrows,1:ncols)>0;
mc_A_arm2_cap = mc_A_arm2*0; mc_A_arm2_cap(i_arm2(ii))=1;
j_ = find(mc_A_arm1_cap); j_arm2_ = find(mc_A_arm2_cap); assert(length(j_)==length(j_arm2_));
assert(length(intersect(lisa_arm2.bim_name_(j_arm2_),lisa_arm1.bim_name_(j_)))==length(j_));
if (~isempty(cl_num_arm2_mc_A)); disp(sprintf(' %% limiting mc_A_ to %d via %s',sum(cl_num_arm2_mc_A),cl_num_arm2_string)); mc_A_arm2_cap = mc_A_arm2_cap.*cl_num_arm2_mc_A; end;
%%%%%%%%%%%%%%%% ;
pca_infix = sprintf('pca_ni%d_tst%d',niteration,lisa_arm2.cl_num);
%%%%%%%%%%%%%%%% ;
% Assuming Icat==1 (i.e., full) for single row mask. ;
if (flag_reverse==1); 
tmpchar = sprintf('%s/%s_mr_Z_arm1_full_%s.b16',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0,pca_infix); %delete(tmpchar);
tutorial_binary_compress(bitj,mr_Z_arm1_tmp(:)>0,tmpchar);
end;%if (flag_reverse==1); 
if (flag_reverse==0); 
tmpchar = sprintf('%s/%s_mr_A_arm1_full_%s.b16',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0,pca_infix); %delete(tmpchar);
tutorial_binary_compress(bitj,mr_A_arm1_tmp(:)>0,tmpchar);
end;%if (flag_reverse==0); 
tmpchar = sprintf('%s/%s_mc_A_arm1_%s.b16',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0,pca_infix); %delete(tmpchar);
tutorial_binary_compress(bitj,mc_A_arm1_cap(:)>0,tmpchar);
tmpchar = sprintf('%s/%s_mc_A_arm2_%s.b16',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0,pca_infix); %delete(tmpchar);
tutorial_binary_compress(bitj,mc_A_arm2_cap(:)>0,tmpchar);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
pca_fname_V_arm1_ = sprintf('%s/%s_k%d_B%d_V_.mda',lisa_arm1.dir_out_s0_pca,pca_infix,pca_rank,pca_b_mlt);
if (flag_rerun==0 &  exist(pca_fname_V_arm1_,'file'));
disp(sprintf(' %% loading %s',pca_fname_V_arm1_));
end;%if ( exist(pca_fname_V_arm1_,'file'));
if (flag_rerun==1 | ~exist(pca_fname_V_arm1_,'file'));
disp(sprintf(' %% calculating %s',pca_fname_V_arm1_));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% setting up input file for pca_driver. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
nshuffle=0;
d_inpre = sprintf('%s/%s',lisa_arm1.dir__in,lisa_arm1.string_prefix); 
d_oupre = sprintf('%s/%s',lisa_arm1.dir_out_s0,lisa_arm1.string_name_s0);
d_oupre_pca = sprintf('%s/%s',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0);
%pca_b_mlt = 44;
%pca_tolerance = 1e-2;
%pca_rank = 2;
flag_T = 0;
if (lisa_arm1.mds_repl< 1 | length(lisa_arm1.mds_used_)~=2); flag_T = 0; T_n_crop_cols = 1+length(lisa_arm1.mds_used_); end;
if (lisa_arm1.mds_repl>=1 & length(lisa_arm1.mds_used_)==2); flag_T = 1; end;
lisa_arm1.mds_str = sprintf('m%dr%d',length(lisa_arm1.mds_used_),lisa_arm1.mds_repl);
mds_kappa_squared = 1.0;
if (length(lisa_arm1.mds_used_)>0); mds_kappa_squared = textread(sprintf('%s_T_%s_kappa.txt',d_inpre,lisa_arm1.mds_str)); end;
T_n_cols = 1+length(lisa_arm1.mds_used_)*lisa_arm1.mds_repl;
Y_n_cols=0;
M_n_rows_ = zeros(lisa_arm1.Icat,1); M_n_cols = length(mc_A_arm1);
for nb=0:lisa_arm1.Icat-1; M_n_rows_(1+nb) = length(lisa_arm1.mr_A__{1+nb});end;%for nb=0:lisa_arm1.Icat-1;
pca_infix = sprintf('pca_ni%d_tst%d',niteration,lisa_arm2.cl_num);
fname__in = sprintf('%s/%s_%s.in',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0,pca_infix);
fp = fopen(fname__in,'w');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
fprintf(fp,'GLOBAL_verbose= %d;\n',flag_verbose);
fprintf(fp,'GLOBAL_thread_count= 15;\n');
fprintf(fp,'GLOBAL_omp_type= 1;\n');
fprintf(fp,'GLOBAL_TEST_TYPE= %s;\n','pca_driver');
fprintf(fp,'GLOBAL_pca_infix= %s;\n',pca_infix);
fprintf(fp,'GLOBAL_pca_iteration_num= 1;\n');
fprintf(fp,'GLOBAL_pca_iteration_max= 0;\n');
fprintf(fp,'GLOBAL_pca_iteration_min= 0;\n');
fprintf(fp,'GLOBAL_pca_rank= %d;\n',pca_rank);
fprintf(fp,'GLOBAL_pca_tolerance= %0.16f;\n',pca_tolerance);
fprintf(fp,'GLOBAL_TEST_niter= 1024;\n');
fprintf(fp,'GLOBAL_NBINS= %d;\n',lisa_arm1.Icat);
fprintf(fp,'GLOBAL_B_MLT= %d;\n',pca_b_mlt);
fprintf(fp,'GLOBAL_gamma= %0.4f;\n',gamma);
fprintf(fp,'GLOBAL_Ireq= %d;\n',lisa_arm1.Ireq);
if (flag_T==1); fprintf(fp,'GLOBAL_kappa_squared= %0.16f;\n',mds_kappa_squared); end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
if (nshuffle==0); A_name_string = '_A_'; end;%if (nshuffle==0);
if (nshuffle>0); A_name_string = '_A_shuffle_'; end;%if (nshuffle>0);
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_name_= ',lisa_arm1.Icat,d_inpre,A_name_string,'_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_t_name_= ',lisa_arm1.Icat,d_inpre,A_name_string,'_t.b16');
dexcluster_PGC_uADZSZDA_excerpt_1(fp,'GLOBAL_A_n_rows_= ',lisa_arm1.Icat,M_n_rows_);
fprintf(fp,'GLOBAL_A_n_cols= %d;\n',M_n_cols);
if (flag_reverse==1); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_rind_= ',lisa_arm1.Icat,d_oupre_pca,'_mr_Z_arm1_',sprintf('_%s.b16',pca_infix)); end;
if (flag_reverse==0); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_rind_= ',lisa_arm1.Icat,d_oupre_pca,'_mr_A_arm1_',sprintf('_%s.b16',pca_infix)); end;
fprintf(fp,'GLOBAL_A_n_cind= %s_mc_A_arm1_%s.b16;\n',d_oupre_pca,pca_infix);
fprintf(fp,'GLOBAL_A_p_name= %s/A_p.mda;\n',lisa_arm1.dir_out_s0);
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_name_= ',lisa_arm1.Icat,d_inpre,A_name_string,'_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_t_name_= ',lisa_arm1.Icat,d_inpre,A_name_string,'_t.b16');
dexcluster_PGC_uADZSZDA_excerpt_1(fp,'GLOBAL_Z_n_rows_= ',lisa_arm1.Icat,M_n_rows_);
if (flag_reverse==1); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_rind_= ',lisa_arm1.Icat,d_oupre,'_mr_A_','.b16'); end;
if (flag_reverse==0); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_rind_= ',lisa_arm1.Icat,d_oupre,'_mr_Z_','.b16'); end;
fprintf(fp,'GLOBAL_Y_n_cols= %d;\n',Y_n_cols);
if (flag_T==0);
fprintf(fp,'GLOBAL_T_n_cols= %d;\n',T_n_crop_cols); 
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_T_n_name_= ',lisa_arm1.Icat,d_oupre,'_T_crop_','_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_T_t_name_= ',lisa_arm1.Icat,d_oupre,'_T_crop_','_t.b16');
fprintf(fp,'GLOBAL_T_n_cind= %s_mc_T_crop.b16;\n',d_oupre);
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_S_n_name_= ',lisa_arm1.Icat,d_oupre,'_T_crop_','_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_S_t_name_= ',lisa_arm1.Icat,d_oupre,'_T_crop_','_t.b16');
end;%if (flag_T==0);
if (flag_T==1);
fprintf(fp,'GLOBAL_T_n_cols= %d;\n',T_n_cols); 
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_T_n_name_= ',lisa_arm1.Icat,d_inpre,sprintf('_T_%s_',lisa_arm1.mds_str),'_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_T_t_name_= ',lisa_arm1.Icat,d_inpre,sprintf('_T_%s_',lisa_arm1.mds_str),'_t.b16');
fprintf(fp,'GLOBAL_T_n_cind= %s_mc_T_%s.b16;\n',d_oupre,lisa_arm1.mds_str);
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_S_n_name_= ',lisa_arm1.Icat,d_inpre,sprintf('_T_%s_',lisa_arm1.mds_str),'_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_S_t_name_= ',lisa_arm1.Icat,d_inpre,sprintf('_T_%s_',lisa_arm1.mds_str),'_t.b16');
end;%if (flag_T==1);
fprintf(fp,'GLOBAL_DIR_NAME= %s;\n',lisa_arm1.dir_out_s0_pca);
fprintf(fp,'END= 0;\n');
fprintf(fp,'%% generated by pca_PGC_uADZSZDA_ver0.m on %s;\n',date);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
fclose(fp);
type(fname__in);
disp(sprintf(' %% fname__in:\n%s',fname__in));
command_str = sprintf('%s/lakcluster_ver18 < %s',dir_code,fname__in);
system(command_str);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end;%if (~exist(pca_fname_V_arm1_,'file'));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Now load V_arm1_ and generate pca for arm2. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
V_arm1_ = mda_read_r8(pca_fname_V_arm1_);
if (~isempty(cl_num_arm1_mc_A)); disp(sprintf(' %% limiting V_arm1_ to %d via %s',sum(cl_num_arm1_mc_A),cl_num_arm1_string)); V_arm1_ = V_arm1_.*repmat(cl_num_arm1_mc_A,1,pca_rank); end;
for (nr=1:pca_rank); assert(sum(V_arm1_(:,nr)~=0)<=length(mc_A_arm1_cap)); assert(sum(V_arm1_(:,nr))==sum(V_arm1_(:,nr).*mc_A_arm1_cap)); end;
V_arm2_ = zeros(length(mc_A_arm2),pca_rank);
for nc=1:length(ii); V_arm2_(i_arm2(ii(nc)),:) = V_arm1_(i_arm1(ii(nc)),:); end;%for nc=1:length(ii);
if (~isempty(cl_num_arm2_mc_A)); disp(sprintf(' %% limiting V_arm2_ to %d via %s',sum(cl_num_arm2_mc_A),cl_num_arm2_string)); V_arm2_ = V_arm2_.*repmat(cl_num_arm2_mc_A,1,pca_rank); end;
for (nr=1:pca_rank); assert(sum(V_arm2_(:,nr)~=0)<=length(mc_A_arm2_cap)); assert(sum(V_arm2_(:,nr))==sum(V_arm2_(:,nr).*mc_A_arm2_cap)); end;
pca_fname_V_arm2_ = sprintf('%s/%s_k%d_B%d_V_arm2_.mda',lisa_arm1.dir_out_s0_pca,pca_infix,pca_rank,pca_b_mlt);
mda_write_d3_r8(V_arm2_,pca_fname_V_arm2_);

pca_proj_arm1_infix = sprintf('pca_proj_arm1_ni%d_tst%d',niteration,lisa_arm2.cl_num);
pca_fname_AnV_arm1_ = sprintf('%s/%s_k%d_B%d_AnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm1_infix,pca_rank,pca_b_mlt);
pca_fname_ZnV_arm1_ = sprintf('%s/%s_k%d_B%d_ZnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm1_infix,pca_rank,pca_b_mlt);
if (flag_rerun==0 &  exist(pca_fname_AnV_arm1_,'file') &  exist(pca_fname_ZnV_arm1_,'file'));
disp(sprintf(' %% loading %s and %s',pca_fname_AnV_arm1_,pca_fname_ZnV_arm1_));
end;%if ( exist(pca_fname_AnV_arm1_,'file') &  exist(pca_fname_ZnV_arm1_,'file'));
if (flag_rerun==1 | ~exist(pca_fname_AnV_arm1_,'file') | ~exist(pca_fname_ZnV_arm1_,'file'));
disp(sprintf(' %% calculating %s and %s',pca_fname_AnV_arm1_,pca_fname_ZnV_arm1_));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% setting up input file for pca_proj arm1. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
nshuffle=0;
d_inpre = sprintf('%s/%s',lisa_arm1.dir__in,lisa_arm1.string_prefix); 
d_oupre = sprintf('%s/%s',lisa_arm1.dir_out_s0,lisa_arm1.string_name_s0);
d_oupre_pca = sprintf('%s/%s',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0);
%pca_b_mlt = 44;
%pca_tolerance = 1e-2;
%pca_rank = 2;
lisa_arm1.mds_str = sprintf('m%dr%d',length(lisa_arm1.mds_used_),lisa_arm1.mds_repl);
Y_n_cols=0;
M_n_rows_ = zeros(lisa_arm1.Icat,1); M_n_cols = length(mc_A_arm1);
for nb=0:lisa_arm1.Icat-1; M_n_rows_(1+nb) = length(lisa_arm1.mr_A__{1+nb});end;%for nb=0:lisa_arm1.Icat-1;
pca_proj_arm1_infix = sprintf('pca_proj_arm1_ni%d_tst%d',niteration,lisa_arm2.cl_num);
fname__in = sprintf('%s/%s_%s.in',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0,pca_proj_arm1_infix);
fp = fopen(fname__in,'w');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
fprintf(fp,'GLOBAL_verbose= %d;\n',flag_verbose);
fprintf(fp,'GLOBAL_thread_count= 15;\n');
fprintf(fp,'GLOBAL_omp_type= 1;\n');
fprintf(fp,'GLOBAL_TEST_TYPE= %s;\n','pca_proj_driver');
fprintf(fp,'GLOBAL_pca_infix= %s;\n',pca_proj_arm1_infix);
fprintf(fp,'GLOBAL_pca_V_= %s;\n',pca_fname_V_arm1_);
fprintf(fp,'GLOBAL_pca_iteration_num= 1;\n');
fprintf(fp,'GLOBAL_pca_iteration_max= 0;\n');
fprintf(fp,'GLOBAL_pca_iteration_min= 0;\n');
fprintf(fp,'GLOBAL_pca_rank= %d;\n',pca_rank);
fprintf(fp,'GLOBAL_pca_tolerance= %0.16f;\n',pca_tolerance);
fprintf(fp,'GLOBAL_TEST_niter= 1024;\n');
fprintf(fp,'GLOBAL_NBINS= %d;\n',lisa_arm1.Icat);
fprintf(fp,'GLOBAL_B_MLT= %d;\n',pca_b_mlt);
fprintf(fp,'GLOBAL_gamma= %0.4f;\n',gamma);
fprintf(fp,'GLOBAL_Ireq= %d;\n',lisa_arm1.Ireq);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
if (nshuffle==0); A_name_string = '_A_'; end;%if (nshuffle==0);
if (nshuffle>0); A_name_string = '_A_shuffle_'; end;%if (nshuffle>0);
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_name_= ',lisa_arm1.Icat,d_inpre,A_name_string,'_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_t_name_= ',lisa_arm1.Icat,d_inpre,A_name_string,'_t.b16');
dexcluster_PGC_uADZSZDA_excerpt_1(fp,'GLOBAL_A_n_rows_= ',lisa_arm1.Icat,M_n_rows_);
fprintf(fp,'GLOBAL_A_n_cols= %d;\n',M_n_cols);
if (flag_reverse==1); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_rind_= ',lisa_arm1.Icat,d_oupre,'_mr_Z_','.b16'); end;
if (flag_reverse==0); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_rind_= ',lisa_arm1.Icat,d_oupre,'_mr_A_','.b16'); end;
fprintf(fp,'GLOBAL_A_n_cind= %s_mc_A_arm1_%s.b16;\n',d_oupre_pca,pca_infix);
fprintf(fp,'GLOBAL_A_p_name= %s/A_p.mda;\n',lisa_arm1.dir_out_s0);
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_name_= ',lisa_arm1.Icat,d_inpre,A_name_string,'_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_t_name_= ',lisa_arm1.Icat,d_inpre,A_name_string,'_t.b16');
dexcluster_PGC_uADZSZDA_excerpt_1(fp,'GLOBAL_Z_n_rows_= ',lisa_arm1.Icat,M_n_rows_);
if (flag_reverse==1); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_rind_= ',lisa_arm1.Icat,d_oupre,'_mr_A_','.b16'); end;
if (flag_reverse==0); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_rind_= ',lisa_arm1.Icat,d_oupre,'_mr_Z_','.b16'); end;
fprintf(fp,'GLOBAL_Y_n_cols= %d;\n',Y_n_cols);
fprintf(fp,'GLOBAL_DIR_NAME= %s;\n',lisa_arm1.dir_out_s0_pca);
fprintf(fp,'END= 0;\n');
fprintf(fp,'%% generated by pca_PGC_uADZSZDA_ver0.m on %s;\n',date);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
fclose(fp);
type(fname__in);
disp(sprintf(' %% fname__in:\n%s',fname__in));
command_str = sprintf('%s/lakcluster_ver18 < %s',dir_code,fname__in);
system(command_str);
end;%if (~exist(pca_fname_AnV_arm1_,'file') | ~exist(pca_fname_ZnV_arm1_,'file'));

%%%%%%%%%%%%%%%%;
tmpchar = sprintf('%s/PGC_cl%d_maf01_mr_A_full.b16',lisa_arm2.dir__in,lisa_arm2.cl_num);
[bitj,nrows,ncols] = tutorial_binary_getsize(tmpchar); mr_A_arm2_full = tutorial_binary_uncompress(tmpchar,1:nrows,1:ncols)>0;
tmpchar = sprintf('%s/PGC_cl%d_maf01_mr_Z_full.b16',lisa_arm2.dir__in,lisa_arm2.cl_num);
[bitj,nrows,ncols] = tutorial_binary_getsize(tmpchar); mr_Z_arm2_full = tutorial_binary_uncompress(tmpchar,1:nrows,1:ncols)>0;
%%%%%%%%%%%%%%%%;
pca_proj_arm2_infix = sprintf('pca_proj_arm2_ni%d_tst%d',niteration,lisa_arm2.cl_num);
pca_fname_AnV_arm2_ = sprintf('%s/%s_k%d_B%d_AnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm2_infix,pca_rank,pca_b_mlt);
pca_fname_ZnV_arm2_ = sprintf('%s/%s_k%d_B%d_ZnV_.mda',lisa_arm1.dir_out_s0_pca,pca_proj_arm2_infix,pca_rank,pca_b_mlt);
if (flag_rerun==0 &  exist(pca_fname_AnV_arm2_,'file') &  exist(pca_fname_ZnV_arm2_,'file'));
disp(sprintf(' %% loading %s and %s',pca_fname_AnV_arm2_,pca_fname_ZnV_arm2_));
end;%if ( exist(pca_fname_AnV_arm2_,'file') &  exist(pca_fname_ZnV_arm2_,'file'));
if (flag_rerun==1 | ~exist(pca_fname_AnV_arm2_,'file') | ~exist(pca_fname_ZnV_arm2_,'file'));
disp(sprintf(' %% calculating %s and %s',pca_fname_AnV_arm2_,pca_fname_ZnV_arm2_));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% setting up input file for pca_proj arm2. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
nshuffle=0;
d_inpre_arm2 = sprintf('%s/%s',lisa_arm2.dir__in,lisa_arm2.string_prefix); 
d_oupre = sprintf('%s/%s',lisa_arm1.dir_out_s0,lisa_arm1.string_name_s0);
d_oupre_pca = sprintf('%s/%s',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0);
%pca_b_mlt = 44;
%pca_tolerance = 1e-2;
%pca_rank = 2;
lisa_arm2.mds_str = sprintf('m%dr%d',length(lisa_arm2.mds_used_),lisa_arm2.mds_repl);
Y_n_cols=0;
lisa_arm2.Icat = 1; M_n_rows_ = length(mr_A_arm2_full);
M_n_cols = length(mc_A_arm2);
fname__in = sprintf('%s/%s_%s.in',lisa_arm1.dir_out_s0_pca,lisa_arm1.string_name_s0,pca_proj_arm2_infix);
fp = fopen(fname__in,'w');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
fprintf(fp,'GLOBAL_verbose= %d;\n',flag_verbose);
fprintf(fp,'GLOBAL_thread_count= 15;\n');
fprintf(fp,'GLOBAL_omp_type= 1;\n');
fprintf(fp,'GLOBAL_TEST_TYPE= %s;\n','pca_proj_driver');
fprintf(fp,'GLOBAL_pca_infix= %s;\n',pca_proj_arm2_infix);
fprintf(fp,'GLOBAL_pca_V_= %s;\n',pca_fname_V_arm2_);
fprintf(fp,'GLOBAL_pca_iteration_num= 1;\n');
fprintf(fp,'GLOBAL_pca_iteration_max= 0;\n');
fprintf(fp,'GLOBAL_pca_iteration_min= 0;\n');
fprintf(fp,'GLOBAL_pca_rank= %d;\n',pca_rank);
fprintf(fp,'GLOBAL_pca_tolerance= %0.16f;\n',pca_tolerance);
fprintf(fp,'GLOBAL_TEST_niter= 1024;\n');
fprintf(fp,'GLOBAL_NBINS= %d;\n',lisa_arm2.Icat);
fprintf(fp,'GLOBAL_B_MLT= %d;\n',pca_b_mlt);
fprintf(fp,'GLOBAL_gamma= %0.4f;\n',gamma);
fprintf(fp,'GLOBAL_Ireq= %d;\n',lisa_arm2.Ireq);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
if (nshuffle==0); A_name_string = '_A_'; end;%if (nshuffle==0);
if (nshuffle>0); A_name_string = '_A_shuffle_'; end;%if (nshuffle>0);
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_name_= ',lisa_arm2.Icat,d_inpre_arm2,A_name_string,'_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_t_name_= ',lisa_arm2.Icat,d_inpre_arm2,A_name_string,'_t.b16');
dexcluster_PGC_uADZSZDA_excerpt_1(fp,'GLOBAL_A_n_rows_= ',lisa_arm2.Icat,M_n_rows_);
fprintf(fp,'GLOBAL_A_n_cols= %d;\n',M_n_cols);
if (flag_reverse==1); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_rind_= ',lisa_arm2.Icat,d_inpre_arm2,'_mr_Z_','.b16'); end;
if (flag_reverse==0); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_A_n_rind_= ',lisa_arm2.Icat,d_inpre_arm2,'_mr_A_','.b16'); end;
fprintf(fp,'GLOBAL_A_n_cind= %s_mc_A_arm2_%s.b16;\n',d_oupre_pca,pca_infix);
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_name_= ',lisa_arm2.Icat,d_inpre_arm2,A_name_string,'_n.b16');
dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_t_name_= ',lisa_arm2.Icat,d_inpre_arm2,A_name_string,'_t.b16');
dexcluster_PGC_uADZSZDA_excerpt_1(fp,'GLOBAL_Z_n_rows_= ',lisa_arm2.Icat,M_n_rows_);
if (flag_reverse==1); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_rind_= ',lisa_arm2.Icat,d_inpre_arm2,'_mr_A_','.b16'); end;
if (flag_reverse==0); dexcluster_PGC_uADZSZDA_excerpt_0(fp,'GLOBAL_Z_n_rind_= ',lisa_arm2.Icat,d_inpre_arm2,'_mr_Z_','.b16'); end;
fprintf(fp,'GLOBAL_Y_n_cols= %d;\n',Y_n_cols);
fprintf(fp,'GLOBAL_DIR_NAME= %s;\n',lisa_arm1.dir_out_s0_pca);
fprintf(fp,'END= 0;\n');
fprintf(fp,'%% generated by pca_PGC_uADZSZDA_ver0.m on %s;\n',date);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
fclose(fp);
type(fname__in);
disp(sprintf(' %% fname__in:\n%s',fname__in));
command_str = sprintf('%s/lakcluster_ver18 < %s',dir_code,fname__in);
system(command_str);
end;%if (~exist(pca_fname_AnV_arm2_,'file') | ~exist(pca_fname_ZnV_arm2_,'file'));

pca_fname_fig = sprintf('%s/%s_pca_proj_ni%d_tst%d.jpg',lisa_arm1.dir_out_s0_pca_jpg,lisa_arm1.string_name_s0,niteration,lisa_arm2.cl_num); 
if (flag_rerun==0 &  exist(pca_fname_fig,'file')); end;
if (flag_rerun==1 | ~exist(pca_fname_fig,'file'));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% plot results. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
if (flag_reverse==1); 
mr_Z_arm1_tmp = lisa_arm1.mr_Z_full_*0; mr_Z_arm1_tmp(lisa_arm1.rdrop_a_(length(lisa_arm1.rdrop_a_)-lisa_arm1.r_rem_(niteration)+1:length(lisa_arm1.rdrop_a_)))=1;
end;%if (flag_reverse==1); 
if (flag_reverse==0); 
mr_A_arm1_tmp = lisa_arm1.mr_A_full_*0; mr_A_arm1_tmp(lisa_arm1.rdrop_a_(length(lisa_arm1.rdrop_a_)-lisa_arm1.r_rem_(niteration)+1:length(lisa_arm1.rdrop_a_)))=1;
end;%if (flag_reverse==0); 
%figure(ni);clf;
figure(1);clf;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
DnV_arm1_ = mda_read_r8(pca_fname_AnV_arm1_);
XnV_arm1_ = mda_read_r8(pca_fname_ZnV_arm1_);
subplot(2,2,1);hold on; 
if (flag_reverse==1);
plot(XnV_arm1_(find(lisa_arm1.mr_A_full_),1),XnV_arm1_(find(lisa_arm1.mr_A_full_),2),'k.','MarkerSize',15);
plot(DnV_arm1_(find(lisa_arm1.mr_Z_full_-mr_Z_arm1_tmp),1),DnV_arm1_(find(lisa_arm1.mr_Z_full_-mr_Z_arm1_tmp),2),'g.','MarkerSize',15);
plot(DnV_arm1_(find(mr_Z_arm1_tmp),1),DnV_arm1_(find(mr_Z_arm1_tmp),2),'r.','MarkerSize',25);
end;%if (flag_reverse==1);
if (flag_reverse==0);
plot(XnV_arm1_(find(lisa_arm1.mr_Z_full_),1),XnV_arm1_(find(lisa_arm1.mr_Z_full_),2),'k.','MarkerSize',15);
plot(DnV_arm1_(find(lisa_arm1.mr_A_full_-mr_A_arm1_tmp),1),DnV_arm1_(find(lisa_arm1.mr_A_full_-mr_A_arm1_tmp),2),'g.','MarkerSize',15);
plot(DnV_arm1_(find(mr_A_arm1_tmp),1),DnV_arm1_(find(mr_A_arm1_tmp),2),'r.','MarkerSize',25);
end;%if (flag_reverse==0);
hold off;
xlabel('PC1');ylabel('PC2'); title(sprintf('ni %d arm1',niteration));
subplot(2,2,2); hold on;
hlim = mean(union(XnV_arm1_(:,1),DnV_arm1_(:,1))) + [-1,1]*3.5*std(union(XnV_arm1_(:,1),DnV_arm1_(:,1)));
if (min(hlim)>=max(hlim)); hlim = mean(hlim) + [-1,+1]; end;
hbins=linspace(min(hlim),max(hlim),64);
if (flag_reverse==1);
h_A_full = hist(XnV_arm1_(find(lisa_arm1.mr_A_full_),1),hbins); h_A_full = h_A_full/sum(lisa_arm1.mr_A_full_);
h_Z_full = hist(DnV_arm1_(find(lisa_arm1.mr_Z_full_),1),hbins); h_Z_full = h_Z_full/sum(lisa_arm1.mr_Z_full_);
h_Z_exc = hist(DnV_arm1_(find(lisa_arm1.mr_Z_full_-mr_Z_arm1_tmp),1),hbins); h_Z_exc = h_Z_exc/sum(lisa_arm1.mr_Z_full_);
h_Z_tmp = hist(DnV_arm1_(find(mr_Z_arm1_tmp),1),hbins); h_Z_tmp = h_Z_tmp/sum(lisa_arm1.mr_Z_full_);
stairs(hbins,h_A_full,'k-','LineWidth',2);
stairs(hbins,h_Z_full,'m-','LineWidth',2);
stairs(hbins,h_Z_exc,'g-','LineWidth',2);
stairs(hbins,h_Z_tmp,'r-','LineWidth',2);
end;%if (flag_reverse==1);
if (flag_reverse==0);
h_Z_full = hist(XnV_arm1_(find(lisa_arm1.mr_Z_full_),1),hbins); h_Z_full = h_Z_full/sum(lisa_arm1.mr_Z_full_);
h_A_full = hist(DnV_arm1_(find(lisa_arm1.mr_A_full_),1),hbins); h_A_full = h_A_full/sum(lisa_arm1.mr_A_full_);
h_A_exc = hist(DnV_arm1_(find(lisa_arm1.mr_A_full_-mr_A_arm1_tmp),1),hbins); h_A_exc = h_A_exc/sum(lisa_arm1.mr_A_full_);
h_A_tmp = hist(DnV_arm1_(find(mr_A_arm1_tmp),1),hbins); h_A_tmp = h_A_tmp/sum(lisa_arm1.mr_A_full_);
stairs(hbins,h_Z_full,'k-','LineWidth',2);
stairs(hbins,h_A_full,'m-','LineWidth',2);
stairs(hbins,h_A_exc,'g-','LineWidth',2);
stairs(hbins,h_A_tmp,'r-','LineWidth',2);
end;%if (flag_reverse==0);
hold off;
xlim(hlim);xlabel('PC1');ylabel('hist'); title(sprintf('ni %d arm1',niteration));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
DnV_arm2_ = mda_read_r8(pca_fname_AnV_arm2_);
XnV_arm2_ = mda_read_r8(pca_fname_ZnV_arm2_);
subplot(2,2,3);hold on; 
if (flag_reverse==1);
plot(XnV_arm2_(find(mr_A_arm2_full),1),XnV_arm2_(find(mr_A_arm2_full),2),'k.','MarkerSize',15);
plot(DnV_arm2_(find(mr_Z_arm2_full),1),DnV_arm2_(find(mr_Z_arm2_full),2),'m.','MarkerSize',15);
end;%if (flag_reverse==1);
if (flag_reverse==0);
plot(XnV_arm2_(find(mr_Z_arm2_full),1),XnV_arm2_(find(mr_Z_arm2_full),2),'k.','MarkerSize',15);
plot(DnV_arm2_(find(mr_A_arm2_full),1),DnV_arm2_(find(mr_A_arm2_full),2),'m.','MarkerSize',15);
end;%if (flag_reverse==0);
hold off;
xlabel('PC1');ylabel('PC2'); title(sprintf('ni %d arm2',niteration));
subplot(2,2,4); hold on;
hlim = mean(union(XnV_arm2_(:,1),DnV_arm2_(:,1))) + [-1,1]*3.5*std(union(XnV_arm2_(:,1),DnV_arm2_(:,1)));
if (min(hlim)>=max(hlim)); hlim = mean(hlim) + [-1,+1]; end;
hbins=linspace(min(hlim),max(hlim),64);
if (flag_reverse==1);
h_A_full = hist(XnV_arm2_(find(mr_A_arm2_full),1),hbins); h_A_full = h_A_full/sum(mr_A_arm2_full);
h_Z_full = hist(DnV_arm2_(find(mr_Z_arm2_full),1),hbins); h_Z_full = h_Z_full/sum(mr_Z_arm2_full);
stairs(hbins,h_A_full,'k-','LineWidth',2);
stairs(hbins,h_Z_full,'m-','LineWidth',2);
end;%if (flag_reverse==1);
if (flag_reverse==0);
h_Z_full = hist(XnV_arm2_(find(mr_Z_arm2_full),1),hbins); h_Z_full = h_Z_full/sum(mr_Z_arm2_full);
h_A_full = hist(DnV_arm2_(find(mr_A_arm2_full),1),hbins); h_A_full = h_A_full/sum(mr_A_arm2_full);
stairs(hbins,h_Z_full,'k-','LineWidth',2);
stairs(hbins,h_A_full,'m-','LineWidth',2);
end;%if (flag_reverse==0);
hold off;
xlim(hlim);xlabel('PC1');ylabel('hist'); title(sprintf('ni %d arm2',niteration));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
set(gcf,'Position',1+[0,0,1024*2,1024]);
drawnow();
print('-djpeg',pca_fname_fig);
end;%if (~exist(pca_fname_fig,'file'));

end;%if (flag_rerun==1 | flag_found_local==0); 

end;%for ni=1:length(niteration_);

end;%if (flag_found_all==0);
