function xdrop_ = test_dcc_AAAA(A_n_);
[n_r,n_c] = size(A_n_);
n_iteration = max(n_r,n_c);
r_rem_ = round(linspace(n_r,0,n_iteration+1));
c_rem_ = round(linspace(n_c,0,n_iteration+1));
r_rmv_ = -diff(r_rem_);
c_rmv_ = -diff(c_rem_);
xdrop_ = zeros(n_r+n_c,2);
tab=0;
r_ij_ = transpose(1:n_r);
c_ij_ = transpose(1:n_c);
for niteration=1:n_iteration;
B_n_ = A_n_(r_ij_,c_ij_); B_t_ = transpose(B_n_); e_n_ = ones(size(B_n_,1),1);
BB_ = B_n_*B_t_;
QR_ = BB_*e_n_ - diag(BB_);
QC_ = (B_t_*e_n_).^2 - sum(B_t_.^2,2);
r_rmv = r_rmv_(niteration);
c_rmv = c_rmv_(niteration);
[~,tmp_r_ij_] = sort(QR_,'ascend'); 
[~,tmp_c_ij_] = sort(QC_,'ascend'); 
if r_rmv>0;
xdrop_(tab+(1:r_rmv),[1,2]) = [ r_ij_(tmp_r_ij_(1:r_rmv))-1 , -ones(r_rmv,1) ];
tab = tab+r_rmv;
end;%if r_rmv>0;
if c_rmv>0;
xdrop_(tab+(1:c_rmv),[1,2]) = [ -ones(c_rmv,1) , c_ij_(tmp_c_ij_(1:c_rmv))-1 ];
tab = tab+c_rmv;
end;%if c_rmv>0;
r_ij_ = setdiff(r_ij_,r_ij_(tmp_r_ij_(1:r_rmv)));
c_ij_ = setdiff(c_ij_,c_ij_(tmp_c_ij_(1:c_rmv)));
end;%for niteration=1:n_iteration;
