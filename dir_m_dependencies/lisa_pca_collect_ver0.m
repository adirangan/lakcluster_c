clear;clc;
dir_code = sprintf('/data/rangan/dir_bcc/dir_lakcluster_c_dev'); 
dir_trunk = sprintf('/data/rangan/dir_bcc/dir_PGC_20180304');
path(path,sprintf('%s/dir_m',dir_code)); 
cl_num = 4;
[study_trunk_,study_name_,n_study] = lisa_define_study_ver0(cl_num);
Ireq_half = floor(n_study/2); Icat_full = n_study;
string_prefix = sprintf('PGC_cl%d_maf01',cl_num);
flag_dex_vs_lak = 'dex'; 
gamma=0.004;B_MLT=34;n_mds=20;
flag_reverse = 0;
n_maf = 5;
n_cov = 1;
%%%%%%%%%%%%%%%% ;
if n_maf==1; maf_lo_threshold = 0.01; maf_hi_threshold = 0.50; end; % all (since we thresholded maf at 0.01 to start with) ;
if n_maf==2; maf_lo_threshold = 0.01; maf_hi_threshold = 0.05; end; % extreme snps (differential expression only, no loop-counting later on) ;
if n_maf==3; maf_lo_threshold = 0.01; maf_hi_threshold = 0.10; end; % extreme snps (differential expression only, no loop-counting later on) ;
if n_maf==4; maf_lo_threshold = 0.10; maf_hi_threshold = 0.50; end; % more balanced snps (differential expression to start, as well as loop-counting later on) ;
if n_maf==5; maf_lo_threshold = 0.25; maf_hi_threshold = 0.50; end; % more balanced snps (differential expression to start, as well as loop-counting later on) ;
%%%%%%%%%%%%%%%% ;
if n_cov==1; Ireq=0; Icat=1; mds_used_=[1:2]; mds_repl=2; end; % only correct for mds-components [1:2], but replicated twice, so that each 'sector' is 45 degrees ;
if n_cov==2; Ireq=Ireq_half; Icat=Icat_full; mds_used_=[]; mds_repl=0; end; % correct for study, requiring at least Ireq_half, but not for mds-components. ;
if n_cov==3; Ireq=Ireq_half; Icat=Icat_full; mds_used_=[1:2]; mds_repl=1; end; % correct for study, requiring at least Ireq_half, as well as correct for mds-components [1:2], but replicated only once, so that each 'sector' is 90 degrees ;
if n_cov==4; Ireq=Ireq_half; Icat=Icat_full; mds_used_=[1:2]; mds_repl=2; end; % correct for study, requiring at least Ireq_half, as well as correct for mds-components [1:2], replicated twice, so that each 'sector' is 45 degrees ;
%%%%%%%%%%%%%%%% ;
n_shuffle = 64;
dir__in = sprintf('%s/dir_%s',dir_trunk,string_prefix);
dir_out = sprintf('%s/dir_%s_analyze',dir_trunk,string_prefix);
disp(sprintf(' %% dir__in: %s',dir__in));
disp(sprintf(' %% dir_out: %s',dir_out));
cl_num_arm1 = cl_num; 
%%%%%%%%%%%%%%%%;
lisa_xdropplot_loadtrace_ver0;
%%%%%%%%%%%%%%%%;
QR_ = zeros(n_finished,iteration_max);
QC_ = zeros(n_finished,iteration_max);
for nf=1:n_finished;
ns = trace_finished_ij_(nf); trace_tmp_ = trace_{ns};
QR_(nf,:) = transpose(trace_tmp_(:,4));
QC_(nf,:) = transpose(trace_tmp_(:,5));
end;%for nf=1:n_finished;
%%%%%%%%%%%%%%%% ;
PR_ = zeros(n_finished,iteration_max);
PC_ = zeros(n_finished,iteration_max);
for ni=1:iteration_max;
[~,tmp_ij] = sort(QR_(:,ni),'ascend'); [~,PR_(:,ni)] = sort(tmp_ij,'ascend');
[~,tmp_ij] = sort(QC_(:,ni),'ascend'); [~,PC_(:,ni)] = sort(tmp_ij,'ascend');
end;%for ni=1:iteration_max;
%%%%%%%%%%%%%%%% ;
QR_ = transpose(QR_); QC_ = transpose(QC_);
PR_ = transpose(PR_); PC_ = transpose(PC_);
QR_avg_ = mean(QR_,2); QR_std_ = std(QR_,[],2); QC_avg_ = mean(QC_,2); QC_std_ = std(QC_,[],2);
ZR_ = (QR_ - repmat(QR_avg_,1,n_finished))./repmat(QR_std_,1,n_finished); ZC_ = (QC_ - repmat(QC_avg_,1,n_finished))./repmat(QC_std_,1,n_finished);
%%%%%%%%%%%%%%%%;
dir__in_arm1 = dir__in;
string_prefix_arm1 = string_prefix;
cl_num_arm1 = cl_num;
nshuffle=0;
string_name_s0000_arm1 = string_name_s0000;
dir_out_s0000_arm1 = dir_out_s0000;
dir_out_s0000_pca_arm1 = sprintf('%s/dir_pca',dir_out_s0000_arm1);
if (~exist(dir_out_s0000_pca_arm1,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_arm1)); mkdir(dir_out_s0000_pca_arm1); end;
dir_out_trace_arm1 = dir_out_trace;
out_xdrop_a_arm1_ = out_xdrop_a_; rdrop_a_arm1_ = rdrop_a_; cdrop_a_arm1_ = cdrop_a_;
out_xdrop_b_arm1_ = out_xdrop_b_; rdrop_b_arm1_ = rdrop_b_; cdrop_b_arm1_ = cdrop_b_;
bim_arm1_ = bim_;
n_snp_arm1 = n_snp;
fam_arm1_ = fam_;
mr_A_arm1_ = mr_A_;
mr_A_arm1_full = mr_A_full;
mr_Z_arm1_ = mr_Z_;
mr_Z_arm1_full = mr_Z_full;
study_index_arm1_ = study_index_;
iteration_max_arm1 = iteration_max;
r_rem_arm1_ = r_rem_;
c_rem_arm1_ = c_rem_;
pca_b_mlt = 44; pca_tolerance = 1e-2; pca_rank = 2;
%%%%%%%%%%%%%%%%;
niteration_ = 0:25:iteration_max_arm1; 
niteration_(1)=1; niteration_(end) = min(niteration_(end),iteration_max_arm1-1);
niteration_ = niteration_(length(niteration_):-1:1);

%%%%%%%%%%%%%%%%;
% generate plot. ;
%%%%%%%%%%%%%%%%;
subplot(3,4,0*4 + cl_num_arm1);hold on; 
plot(max(t_ret_)-t_ret_(end:-1:1),ZC_(t_ret_,1),'ro-',max(t_ret_)-t_ret_(end:-1:1),ZC_(t_ret_,2:end),'b-'); xlabel('iteration'); ylabel('ZC_','Interpreter','none'); xlim([0,max((t_ret_))+1]);
title('ZC(iteration)');
subplot(3,4,1*4 + cl_num_arm1);hold on; 
plot(max(t_ret_)-t_ret_(end:-1:1),ZR_(t_ret_,1),'ro-',max(t_ret_)-t_ret_(end:-1:1),ZR_(t_ret_,2:end),'b-'); xlabel('iteration'); ylabel('ZR_','Interpreter','none'); xlim([0,max((t_ret_))+1]);
title('ZR(iteration)');
subplot(3,4,2*4 + cl_num_arm1);hold on; 
plot(max(t_ret_)-t_ret_(end:-1:1),c_rem_,'k-'); xlabel('iteration'); ylabel('col rem','Interpreter','none'); xlim([0,max((t_ret_))+1]);
title('ZR(iteration)');
%subplot(3,4,1*4 + cl_num_arm1);hold on; 
%plot(max(c_rem_)-c_rem_(t_ret_),ZC_(t_ret_,1),'ro-',max(c_rem_)-c_rem_(t_ret_),ZC_(t_ret_,2:end),'b-'); xlabel('cols eliminated'); ylabel('ZC_','Interpreter','none'); xlim([0,max(max(c_rem_)-c_rem_(t_ret_))+1]);
%title('ZC(cols rem)');
%subplot(3,4,2*4 + cl_num_arm1);hold on; 
%plot(max(c_rem_)-c_rem_(t_ret_),ZR_(t_ret_,1),'ro-',max(c_rem_)-c_rem_(t_ret_),ZR_(t_ret_,2:end),'b-'); xlabel('cols eliminated'); ylabel('ZR_','Interpreter','none'); xlim([0,max(max(c_rem_)-c_rem_(t_ret_))+1]);
%title('ZR(cols rem)');
%%%%%%%%%%%%%%%%;
for cl_num_arm2 = [1:4];
%%%%%%%%%%%%%%%%;
if (cl_num_arm2~=cl_num_arm1);
disp(sprintf(' %% cl_num_arm1 %d cl_num_arm2 %d',cl_num_arm1,cl_num_arm2));
%%%%%%%%%%%%%%%%;
get_auc_arm1_ = zeros(length(niteration_),1) + 0.5;
logp_auc_arm1_ = zeros(length(niteration_),1);
corr_arm1_ = zeros(length(niteration_),1);
flag_flip_ = zeros(length(niteration_),1);
for ni=1:length(niteration_);
niteration = niteration_(ni);
pca_proj_arm1_infix = sprintf('pca_proj_arm1_ni%d_tst%d',niteration,cl_num_arm2);
try;
AnV_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_AnV_.mda',dir_out_s0000_pca_arm1,pca_proj_arm1_infix,pca_rank,pca_b_mlt));
ZnV_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_ZnV_.mda',dir_out_s0000_pca_arm1,pca_proj_arm1_infix,pca_rank,pca_b_mlt));
get_auc_arm1_(ni) = get_auc(ZnV_arm1_(find(mr_Z_arm1_full),1),AnV_arm1_(find(mr_A_arm1_full),1));
if (get_auc_arm1_(ni)>=0.5); flag_flip_(ni)=0; end;
if (get_auc_arm1_(ni) <0.5); flag_flip_(ni)=1; end;
if (flag_flip_(ni)); get_auc_arm1_(ni) = 1.0 - get_auc_arm1_(ni); end;% if flag_flip_(ni);
logp_auc_arm1_(ni) = logp_auc_0(get_auc_arm1_(ni),min(sum(mr_A_arm1_full),sum(mr_Z_arm1_full)));
corr_arm1_(ni) = corr( [ZnV_arm1_(find(mr_Z_arm1_full),1) ; AnV_arm1_(find(mr_A_arm1_full),1)] , [zeros(sum(mr_Z_arm1_full),1) ; ones(sum(mr_A_arm1_full),1)]);
if (flag_flip_(ni)); corr_arm1_(ni) = -corr_arm1_(ni); end;%if (flag_flip_(ni));
catch; end;%try;
end;%for ni=1:length(niteration_);
subplot(3,4,0*4 + cl_num_arm2);hold on; plot(niteration_,get_auc_arm1_,'rx-'); hold off;
xlabel('iteration'); ylabel('auc arm1'); xlim([min(niteration_),max(niteration_)]);
subplot(3,4,1*4 + cl_num_arm2);hold on; plot(niteration_,min(30,-logp_auc_arm1_),'rx-'); hold off; ylim([0,30]);
xlabel('iteration'); ylabel('-logp arm1'); xlim([min(niteration_),max(niteration_)]);
subplot(3,4,2*4 + cl_num_arm2);hold on; plot(niteration_,corr_arm1_,'rx-'); hold off;
xlabel('iteration'); ylabel('corr arm1'); xlim([min(niteration_),max(niteration_)]);
%%%%%%%%%%%%%%%%;
string_prefix_arm2 = sprintf('PGC_cl%d_maf01',cl_num_arm2);
dir__in_arm2 = sprintf('%s/dir_%s',dir_trunk,string_prefix_arm2);
tmpchar = sprintf('%s/PGC_cl%d_maf01_mr_A_full.b16',dir__in_arm2,cl_num_arm2);
[bitj,nrows,ncols] = tutorial_binary_getsize(tmpchar); mr_A_arm2_full = tutorial_binary_uncompress(tmpchar,1:nrows,1:ncols)>0;
tmpchar = sprintf('%s/PGC_cl%d_maf01_mr_Z_full.b16',dir__in_arm2,cl_num_arm2);
[bitj,nrows,ncols] = tutorial_binary_getsize(tmpchar); mr_Z_arm2_full = tutorial_binary_uncompress(tmpchar,1:nrows,1:ncols)>0;
%%%%%%%%%%%%%%%%;
get_auc_arm2_ = zeros(length(niteration_),1) + 0.5;
logp_auc_arm2_ = zeros(length(niteration_),1);
corr_arm2_ = zeros(length(niteration_),1);
for ni=1:length(niteration_);
niteration = niteration_(ni);
pca_proj_arm2_infix = sprintf('pca_proj_arm2_ni%d_tst%d',niteration,cl_num_arm2);
try;
AnV_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_AnV_.mda',dir_out_s0000_pca_arm1,pca_proj_arm2_infix,pca_rank,pca_b_mlt));
ZnV_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_ZnV_.mda',dir_out_s0000_pca_arm1,pca_proj_arm2_infix,pca_rank,pca_b_mlt));
get_auc_arm2_(ni) = get_auc(ZnV_arm2_(find(mr_Z_arm2_full),1),AnV_arm2_(find(mr_A_arm2_full),1));
if (flag_flip_(ni)); get_auc_arm2_(ni) = 1.0 - get_auc_arm2_(ni); end;%if (flag_flip_(ni)); 
logp_auc_arm2_(ni) = logp_auc_0(get_auc_arm2_(ni),min(sum(mr_A_arm2_full),sum(mr_Z_arm2_full)));
corr_arm2_(ni) = corr( [ZnV_arm2_(find(mr_Z_arm2_full),1) ; AnV_arm2_(find(mr_A_arm2_full),1)] , [zeros(sum(mr_Z_arm2_full),1) ; ones(sum(mr_A_arm2_full),1)]);
if (flag_flip_(ni)); corr_arm2_(ni) = -corr_arm2_(ni); end;%if (flag_flip_(ni)); 
catch; end;%try;
end;%for ni=1:length(niteration_);
%%%%%%%%%%%%%%%%;
subplot(3,4,0*4 + cl_num_arm2);hold on; plot(niteration_,get_auc_arm2_,'bo-'); hold off;
xlabel('iteration'); ylabel('auc arm2'); xlim([min(niteration_),max(niteration_)]);
title(sprintf('tst%d trn%d: auc',cl_num_arm1,cl_num_arm2));
subplot(3,4,1*4 + cl_num_arm2);hold on; 
plot(niteration_,min(30,-logp_auc_arm2_),'bo-',niteration_,0*niteration_ + -log(0.05),'k:'); 
plot(niteration_,0*niteration_ + -log(0.05),'k--');
plot(niteration_,0*niteration_ + -log(0.01),'k--');
hold off; ylim([0,30]);
xlabel('iteration'); ylabel('-logp arm2'); xlim([min(niteration_),max(niteration_)]);
title(sprintf('tst%d trn%d: -logp(auc)',cl_num_arm1,cl_num_arm2));
subplot(3,4,2*4 + cl_num_arm2);hold on; plot(niteration_,corr_arm2_,'bo-'); hold off;
xlabel('iteration'); ylabel('corr arm2'); xlim([min(niteration_),max(niteration_)]);
title(sprintf('tst%d trn%d: corr',cl_num_arm1,cl_num_arm2));
%%%%%%%%%%%%%%%%;
end;%if (cl_num_arm2~=cl_num_arm1);
%%%%%%%%%%%%%%%%;
end;%for cl_num_arm2 = [1:4];
set(gcf,'Position',1+[0,0,1024*2,1024]);
