% Test cluster-supervised pca. ;
% Clusters are each distinct gaussians with different means and (slightly) different standard-deviations. ;
setup;
M = 1024; N = 2*M;
n_cluster = 3;
[tmp_VORI_,~] = qr(randn(N,n_cluster),0);
w_ = linspace(0,1,M+1); w_ = w_(1:end-1);
Sample_Label_ = floor(n_cluster* w_.^2 );
u_Sample_Label_ = unique(Sample_Label_); n_Sample_Label = length(u_Sample_Label_);
n_Sample_Label_ = zeros(n_Sample_Label,1);
Sample_Label_ij_ = cell(n_Sample_Label);
for nSample_Label=1:n_Sample_Label;
Sample_Label_ij_{nSample_Label} = find(Sample_Label_==u_Sample_Label_(nSample_Label));
n_Sample_Label_(nSample_Label) = length(Sample_Label_ij_{nSample_Label});
end;%for nSample_Label=1:n_Sample_Label;
mu = 0.5;
sg_ = ones(n_cluster,1); %sg_ = 0.5 + rand(n_cluster,1);
D_ = zeros(M,N);
for ncluster=1:n_cluster;
D_(Sample_Label_ij_{ncluster},:) = randn(n_Sample_Label_(ncluster),N)*sg_(ncluster) + mu*ones(n_Sample_Label_(ncluster),1)*transpose(tmp_VORI_(:,ncluster));
end;%for ncluster=1:n_cluster;
tmp_UORI_ = D_*tmp_VORI_;
[tmp_USVD_,tmp_SSVD_,tmp_VSVD_] = svds(D_,3);
Delta_ = zeros(M,M);
Alpha_ = zeros(M,M);
for nm1=1:M; for nm2=1:M;
Delta_(nm1,nm2) = (Sample_Label_(nm1)==Sample_Label_(nm2));
end;end;%for nm1=1:M; for nm2=1:M;
%Alpha_ = 1-1*Delta_;
for nm1=1:M; for nm2=1:M;
tmp_m1 = find(u_Sample_Label_==Sample_Label_(nm1)); assert(length(tmp_m1)==1);
tmp_m2 = find(u_Sample_Label_==Sample_Label_(nm2)); assert(length(tmp_m2)==1);
%Alpha_(nm1,nm2) = (1-2*(Sample_Label_(nm1)==Sample_Label_(nm2))) / (n_Sample_Label_(tmp_m1)*n_Sample_Label_(tmp_m2)) ;
Alpha_(nm1,nm2) = (1/4-1*(Sample_Label_(nm1)==Sample_Label_(nm2))) / (n_Sample_Label_(tmp_m1)*n_Sample_Label_(tmp_m2)) ;
end;end;%for nm1=1:M; for nm2=1:M;
A2_ = Alpha_ - diag(sum(Alpha_,2));
A1_ = real(sqrtm(-A2_));
[tmp_UAD_,tmp_SAD_,tmp_VAD_] = svds(A1_*D_,M);
tmp_DVAD_ = D_*tmp_VAD_;
%%%%%%%%;
e_n_ = ones(M,1); e_t_ = ones(1,M);
S1_ORI = e_t_*transpose(Alpha_)*(D_*tmp_VORI_(:,1)).^2 + e_t_*(Alpha_)*(D_*tmp_VORI_(:,1)).^2 - 2*(transpose(tmp_VORI_(:,1))*transpose(D_)*Alpha_*D_*tmp_VORI_(:,1));
S2_ORI = e_t_*transpose(Alpha_)*(D_*tmp_VORI_(:,2)).^2 + e_t_*(Alpha_)*(D_*tmp_VORI_(:,2)).^2 - 2*(transpose(tmp_VORI_(:,2))*transpose(D_)*Alpha_*D_*tmp_VORI_(:,2));
disp(sprintf(' %% S_ORI: [%0.6f , %0.6f]',S1_ORI,S2_ORI));
S1_SVD = e_t_*transpose(Alpha_)*(D_*tmp_VSVD_(:,1)).^2 + e_t_*(Alpha_)*(D_*tmp_VSVD_(:,1)).^2 - 2*(transpose(tmp_VSVD_(:,1))*transpose(D_)*Alpha_*D_*tmp_VSVD_(:,1));
S2_SVD = e_t_*transpose(Alpha_)*(D_*tmp_VSVD_(:,2)).^2 + e_t_*(Alpha_)*(D_*tmp_VSVD_(:,2)).^2 - 2*(transpose(tmp_VSVD_(:,2))*transpose(D_)*Alpha_*D_*tmp_VSVD_(:,2));
disp(sprintf(' %% S_SVD: [%0.6f , %0.6f]',S1_SVD,S2_SVD));
S1_UAD = e_t_*transpose(Alpha_)*(D_*tmp_VAD_(:,1)).^2 + e_t_*(Alpha_)*(D_*tmp_VAD_(:,1)).^2 - 2*(transpose(tmp_VAD_(:,1))*transpose(D_)*Alpha_*D_*tmp_VAD_(:,1));
S2_UAD = e_t_*transpose(Alpha_)*(D_*tmp_VAD_(:,2)).^2 + e_t_*(Alpha_)*(D_*tmp_VAD_(:,2)).^2 - 2*(transpose(tmp_VAD_(:,2))*transpose(D_)*Alpha_*D_*tmp_VAD_(:,2));
disp(sprintf(' %% S_UAD: [%0.6f , %0.6f]',S1_UAD,S2_UAD));
%%%%%%%%;
subplot(2,2,1)
scatter3(tmp_UORI_(:,1),tmp_UORI_(:,2),tmp_UORI_(:,3),15,Sample_Label_,'filled'); colormap(colormap_beach()); axis vis3d;
axisnotick;
title(sprintf('ori S[%0.6f %0.6f]',S1_ORI,S2_ORI));
subplot(2,2,2);
scatter3(tmp_USVD_(:,1),tmp_USVD_(:,2),tmp_USVD_(:,3),15,Sample_Label_,'filled'); colormap(colormap_beach()); axis vis3d;
axisnotick;
title(sprintf('SVD S[%0.6f %0.6f]',S1_SVD,S2_SVD));
subplot(2,2,3);
scatter3(tmp_UAD_(:,1),tmp_UAD_(:,2),tmp_UAD_(:,3),15,Sample_Label_,'filled'); colormap(colormap_beach()); axis vis3d;
title(sprintf('UAD S[%0.6f %0.6f]',S1_UAD,S2_UAD));
axisnotick;
subplot(2,2,4);
scatter3(tmp_DVAD_(:,1),tmp_DVAD_(:,2),tmp_DVAD_(:,3),15,Sample_Label_,'filled'); colormap(colormap_beach()); axis vis3d;
title(sprintf('DVAD'));
figbig;

%[~,tmp_ij_] = sort(Sample_Label_);
%imagesc(Alpha_(tmp_ij_,tmp_ij_)); axisnotick;
%title('Alpha');
