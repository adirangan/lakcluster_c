function ...
[ ...
 parameter ...
,a_duo_prm___ ...
,A_duo_prm____ ...
,BB_inv_duo_prm____ ...
,CC_inv_duo_prm____ ...
,index_nvar0_from_nvv_ ...
,index_nvar1_from_nvv_ ...
] = ...
dolphin_duo_from_each_prm_0( ...
 parameter ...
,A_cmb_prm___ ...
,BB_inv_cmb_prm___ ...
,CC_inv_cmb_prm___ ...
,a_each_prm___ ...
,A_each_prm___ ...
,BB_inv_each_prm___ ...
,CC_inv_each_prm___ ...
);

verbose=0;
if verbose; disp(sprintf(' %% [entering dolphin_duo_from_each_prm_0]')); end;

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na);,A_cmb_prm___=[]; end; na=na+1;
if (nargin<1+na);,BB_inv_cmb_prm___=[]; end; na=na+1;
if (nargin<1+na);,CC_inv_cmb_prm___=[]; end; na=na+1;
if (nargin<1+na);,a_each_prm___=[]; end; na=na+1;
if (nargin<1+na);,A_each_prm___=[]; end; na=na+1;
if (nargin<1+na);,BB_inv_each_prm___=[]; end; na=na+1;
if (nargin<1+na);,CC_inv_each_prm___=[]; end; na=na+1;

if isempty(parameter); parameter = struct('type','parameter'); end;

n_var = size(A_cmb_prm___,1);
n_duo = n_var*(n_var-1)/2;
n_prm = size(A_cmb_prm___,3);

index_nvar0_from_nvv_ = zeros(n_duo,1);
index_nvar1_from_nvv_ = zeros(n_duo,1);
a_duo_prm___ = zeros(2,n_duo,n_prm);
A_duo_prm____ = zeros(2,2,n_duo,n_prm);
BB_inv_duo_prm____ = zeros(2,2,n_duo,n_prm);
CC_inv_duo_prm____ = zeros(2,2,n_duo,n_prm);

for nprm=0:n_prm-1;
[ ...
 parameter ...
,a_duo_prm___(:,:,1+nprm) ...
,A_duo_prm____(:,:,:,1+nprm) ...
,BB_inv_duo_prm____(:,:,:,1+nprm) ...
,CC_inv_duo_prm____(:,:,:,1+nprm) ...
,index_nvar0_from_nvv_ ...
,index_nvar1_from_nvv_ ...
] = ...
dolphin_duo_from_each_0( ...
 parameter ...
,A_cmb_prm___(:,:,1+nprm) ...
,BB_inv_cmb_prm___(:,:,1+nprm) ...
,CC_inv_cmb_prm___(:,:,1+nprm) ...
,a_each_prm___(:,:,1+nprm) ...
,A_each_prm___(:,:,1+nprm) ...
,BB_inv_each_prm___(:,:,1+nprm) ...
,CC_inv_each_prm___(:,:,1+nprm) ...
);
end;%for nprm=0:n_prm-1;

if verbose; disp(sprintf(' %% [finished dolphin_duo_from_each_prm_0]')); end;














  
