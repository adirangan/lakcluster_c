function test_dexcluster_multi_1(M,N,gamma,X,mu,n_rank,n_iteration,n_shuffle,flag_rerun);
% tries to find up to 8 clusters. ;
%{

  %%%%%%%%;
  % check snr definition. ;
  %%%%%%%%;
  %M = 178; N = 2e3; gamma = 0.01; n_rank = 6; n_iteration = 8; n_shuffle = 32; flag_rerun = 0;
  M = 1781; N = 2e4; gamma = 0.01; n_rank = 6; n_iteration = 8; n_shuffle = 32; flag_rerun = 0;
  n_step = 21;
  X_ = linspace(0.50,0.65,n_step); mu_ = linspace(0.0,1.0,n_step);
  snr_ = zeros(n_step,1);
  svs_ = zeros(M,n_step);
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  A_n_ = randn(M,N); B_n_ = randn(MX,NX)+mu*ones(MX,1)*(2*(rand(1,NX)>0.5) - 1);  A_n_(1:MX,1:NX) = B_n_;
  svs_(:,nstep) = eigs(A_n_*transpose(A_n_)/N,M);
  end;%for nstep=1:n_step;
  %%%%%%%%;
  % check marchenko-pastur ;
  %%%%%%%%;
  M = 1781; 
  N = 2*M;
  lambda = M/N;
  lambda_p = (1 + sqrt(lambda))^2;
  lambda_n = (1 - sqrt(lambda))^2;
  mp = @(x) (1/(2*pi)) * sqrt((lambda_p - x).*(x - lambda_n))./(lambda*x) ;
  n_x = 1024;
  x_ = linspace(lambda_n,lambda_p,n_x);
  mp_ = mp(x_);
  A_n_ = randn(M,N)/sqrt(N); 
  svs_ = eigs(A_n_*transpose(A_n_),M);
  n_h = 32;
  hx_ = linspace(min(x_),max(x_),n_h);
  h_ = hist(svs_,hx_); h_ = h_/sum(h_)/mean(diff(hx_));
  clf;
  hold on;
  plot(x_,mp_,'r-');
  bar(hx_,h_,'k');
  hold off;

  %M = 178; N = 1e3; gamma = 0.01; n_rank = 6; n_iteration = 256; n_shuffle = 256; flag_rerun = 0;
  M = 1781; N = 2e4; gamma = 0.01; n_rank = 6; n_iteration = 8; n_shuffle = 32; flag_rerun = 0;
  n_step = 21;
  snr_ = zeros(n_step,1);%snr_ = linspace(0.5,1.5,n_step);
  X_ = linspace(0.55,0.65,n_step); mu_ = linspace(0.5,0.75,n_step);
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  test_dexcluster_multi_1(M,N,gamma,X,mu,n_rank,n_iteration,n_shuffle,flag_rerun);
  end;%for nstep=1:n_step;

  %M = 178; N = 1e3; gamma = 0.01; n_rank = 6; n_iteration = 256; n_shuffle = 256; flag_rerun = 0;
  dir_trunk = sprintf('/data/rangan/dir_bcc/dir_jamison');
  dir_base = sprintf('%s/dir_dexcluster_multi_1',dir_trunk);
  M = 1781; N = 2e4; gamma = 0.01; n_rank = 6; n_iteration = 8; n_shuffle = 32; flag_rerun = 0;
  n_cluster = 8;
  n_step = 21;
  snr_ = zeros(n_step,1);%snr_ = linspace(0.5,1.5,n_step);
  X_ = linspace(0.55,0.65,n_step); mu_ = linspace(0.5,0.75,n_step);
  %%%%%%%%;
  lpv_spectral_isosplit5__ = zeros(n_step,n_rank,n_iteration);
  lP0_spectral_isosplit5__ = zeros(n_step,n_rank,n_iteration);
  lpv_spectral_isosplit5_ = zeros(n_step,n_rank);
  lP0_spectral_isosplit5_ = zeros(n_step,n_rank);
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  %%%%%%%%;
  n_found = 0;
  for niteration=1:n_iteration;
  str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
  str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_base,'file')); disp(sprintf(' %% could not find %s',str_base)); end;
  if ( exist(str_base,'file'));
  base_ = load(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
  end;%if ( exist(str_base,'file'));
  str_xfix = test_dexcluster_multi_xfix_1('spectral_isosplit5',M,N,gamma,X,mu,niteration);
  str_spectral_isosplit5_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_spectral_isosplit5_mat,'file')); disp(sprintf(' %% could not find %s',str_spectral_isosplit5_mat)); end;
  if ( exist(str_spectral_isosplit5_mat,'file'));
  disp(sprintf(' %% loading %s...',str_spectral_isosplit5_mat)); 
  tmp_ = load(str_spectral_isosplit5_mat,'lpv_','lP0_','fla_','label_B__');
  tmp_.lpv_(find(~isfinite(tmp_.lpv_))) = 0; tmp_.lP0_(find(~isfinite(tmp_.lP0_))) = 0;
  lpv_spectral_isosplit5__(nstep,:,1+n_found) = tmp_.lpv_;
  lP0_spectral_isosplit5__(nstep,:,1+n_found) = tmp_.lP0_;
  n_found = n_found+1;
  end;%if ( exist(str_spectral_isosplit5_mat,'file'));
  end;%for niteration=1:n_iteration;
  if n_found>0; lpv_spectral_isosplit5_(nstep,:) = mean(lpv_spectral_isosplit5__(nstep,:,1:n_found),3); end;
  if n_found>0; lP0_spectral_isosplit5_(nstep,:) = mean(lP0_spectral_isosplit5__(nstep,:,1:n_found),3); end;
  end;%for nstep=1:n_step;
  %%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  %%%%%%%%;
  lpv_spectral_kmeansK__ = zeros(n_step,n_rank,n_iteration);
  lP0_spectral_kmeansK__ = zeros(n_step,n_rank,n_iteration);
  lpv_spectral_kmeansK_ = zeros(n_step,n_rank);
  lP0_spectral_kmeansK_ = zeros(n_step,n_rank);
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  %%%%%%%%;
  n_found = 0;
  for niteration=1:n_iteration;
  str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
  str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_base,'file')); disp(sprintf(' %% could not find %s',str_base)); end;
  if ( exist(str_base,'file'));
  base_ = load(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
  end;%if ( exist(str_base,'file'));
  str_xfix = test_dexcluster_multi_xfix_1('spectral_kmeansK',M,N,gamma,X,mu,niteration);
  str_spectral_kmeansK_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_spectral_kmeansK_mat,'file')); disp(sprintf(' %% could not find %s',str_spectral_kmeansK_mat)); end;
  if ( exist(str_spectral_kmeansK_mat,'file'));
  disp(sprintf(' %% loading %s...',str_spectral_kmeansK_mat)); 
  tmp_ = load(str_spectral_kmeansK_mat,'lpv_','lP0_','fla_','label_B__');
  tmp_.lpv_(find(~isfinite(tmp_.lpv_))) = 0; tmp_.lP0_(find(~isfinite(tmp_.lP0_))) = 0;
  lpv_spectral_kmeansK__(nstep,:,1+n_found) = tmp_.lpv_;
  lP0_spectral_kmeansK__(nstep,:,1+n_found) = tmp_.lP0_;
  n_found = n_found+1;
  end;%if ( exist(str_spectral_kmeansK_mat,'file'));
  end;%for niteration=1:n_iteration;
  if n_found>0; lpv_spectral_kmeansK_(nstep,:) = mean(lpv_spectral_kmeansK__(nstep,:,1:n_found),3); end;
  if n_found>0; lP0_spectral_kmeansK_(nstep,:) = mean(lP0_spectral_kmeansK__(nstep,:,1:n_found),3); end;
  end;%for nstep=1:n_step;
  %%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  %%%%%%%%;
  lpv_spectral_kmeansJ___ = zeros(n_step,n_rank,n_cluster,n_iteration);
  lP0_spectral_kmeansJ___ = zeros(n_step,n_rank,n_cluster,n_iteration);
  lpv_spectral_kmeansJ__ = zeros(n_step,n_rank,n_cluster);
  lP0_spectral_kmeansJ__ = zeros(n_step,n_rank,n_cluster);
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  %%%%%%%%;
  n_found = 0;
  for niteration=1:n_iteration;
  str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
  str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_base,'file')); disp(sprintf(' %% could not find %s',str_base)); end;
  if ( exist(str_base,'file'));
  base_ = load(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
  end;%if ( exist(str_base,'file'));
  str_xfix = test_dexcluster_multi_xfix_1('spectral_kmeansJ',M,N,gamma,X,mu,niteration);
  str_spectral_kmeansJ_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_spectral_kmeansJ_mat,'file')); disp(sprintf(' %% could not find %s',str_spectral_kmeansJ_mat)); end;
  if ( exist(str_spectral_kmeansJ_mat,'file'));
  disp(sprintf(' %% loading %s...',str_spectral_kmeansJ_mat)); 
  tmp_ = load(str_spectral_kmeansJ_mat,'lpv__','lP0__','fla__','label_B___');
  tmp_.lpv__(find(~isfinite(tmp_.lpv__))) = 0; tmp_.lP0__(find(~isfinite(tmp_.lP0__))) = 0;
  lpv_spectral_kmeansJ___(nstep,:,:,1+n_found) = tmp_.lpv__;
  lP0_spectral_kmeansJ___(nstep,:,:,1+n_found) = tmp_.lP0__;
  n_found = n_found+1;
  end;%if ( exist(str_spectral_kmeansJ_mat,'file'));
  end;%for niteration=1:n_iteration;
  if n_found>0; lpv_spectral_kmeansJ__(nstep,:,:) = mean(lpv_spectral_kmeansJ___(nstep,:,:,1:n_found),4); end;
  if n_found>0; lP0_spectral_kmeansJ__(nstep,:,:) = mean(lP0_spectral_kmeansJ___(nstep,:,:,1:n_found),4); end;
  end;%for nstep=1:n_step;
  %%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  %%%%%%%%;
  lpv_tsne00_isosplit5__ = zeros(n_step,min(2,n_rank),n_iteration);
  lP0_tsne00_isosplit5__ = zeros(n_step,min(2,n_rank),n_iteration);
  lpv_tsne00_isosplit5_ = zeros(n_step,min(2,n_rank));
  lP0_tsne00_isosplit5_ = zeros(n_step,min(2,n_rank));
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  %%%%%%%%;
  n_found = 0;
  for niteration=1:n_iteration;
  str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
  str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_base,'file')); disp(sprintf(' %% could not find %s',str_base)); end;
  if ( exist(str_base,'file'));
  base_ = load(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
  end;%if ( exist(str_base,'file'));
  str_xfix = test_dexcluster_multi_xfix_1('tsne00_isosplit5',M,N,gamma,X,mu,niteration);
  str_tsne00_isosplit5_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_tsne00_isosplit5_mat,'file')); disp(sprintf(' %% could not find %s',str_tsne00_isosplit5_mat)); end;
  if ( exist(str_tsne00_isosplit5_mat,'file'));
  disp(sprintf(' %% loading %s...',str_tsne00_isosplit5_mat)); 
  tmp_ = load(str_tsne00_isosplit5_mat,'lpv_','lP0_','fla_','label_B__');
  tmp_.lpv_(find(~isfinite(tmp_.lpv_))) = 0; tmp_.lP0_(find(~isfinite(tmp_.lP0_))) = 0;
  lpv_tsne00_isosplit5__(nstep,:,1+n_found) = tmp_.lpv_;
  lP0_tsne00_isosplit5__(nstep,:,1+n_found) = tmp_.lP0_;
  n_found = n_found+1;
  end;%if ( exist(str_tsne00_isosplit5_mat,'file'));
  end;%for niteration=1:n_iteration;
  if n_found>0; lpv_tsne00_isosplit5_(nstep,:) = mean(lpv_tsne00_isosplit5__(nstep,:,1:n_found),3); end;
  if n_found>0; lP0_tsne00_isosplit5_(nstep,:) = mean(lP0_tsne00_isosplit5__(nstep,:,1:n_found),3); end;
  end;%for nstep=1:n_step;
  %%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  %%%%%%%%;
  lpv_tsne00_kmeansK__ = zeros(n_step,min(2,n_rank),n_iteration);
  lP0_tsne00_kmeansK__ = zeros(n_step,min(2,n_rank),n_iteration);
  lpv_tsne00_kmeansK_ = zeros(n_step,min(2,n_rank));
  lP0_tsne00_kmeansK_ = zeros(n_step,min(2,n_rank));
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  %%%%%%%%;
  n_found = 0;
  for niteration=1:n_iteration;
  str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
  str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_base,'file')); disp(sprintf(' %% could not find %s',str_base)); end;
  if ( exist(str_base,'file'));
  base_ = load(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
  end;%if ( exist(str_base,'file'));
  str_xfix = test_dexcluster_multi_xfix_1('tsne00_kmeansK',M,N,gamma,X,mu,niteration);
  str_tsne00_kmeansK_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_tsne00_kmeansK_mat,'file')); disp(sprintf(' %% could not find %s',str_tsne00_kmeansK_mat)); end;
  if ( exist(str_tsne00_kmeansK_mat,'file'));
  disp(sprintf(' %% loading %s...',str_tsne00_kmeansK_mat)); 
  tmp_ = load(str_tsne00_kmeansK_mat,'lpv_','lP0_','fla_','label_B__');
  tmp_.lpv_(find(~isfinite(tmp_.lpv_))) = 0; tmp_.lP0_(find(~isfinite(tmp_.lP0_))) = 0;
  lpv_tsne00_kmeansK__(nstep,:,1+n_found) = tmp_.lpv_;
  lP0_tsne00_kmeansK__(nstep,:,1+n_found) = tmp_.lP0_;
  n_found = n_found+1;
  end;%if ( exist(str_tsne00_kmeansK_mat,'file'));
  end;%for niteration=1:n_iteration;
  if n_found>0; lpv_tsne00_kmeansK_(nstep,:) = mean(lpv_tsne00_kmeansK__(nstep,:,1:n_found),3); end;
  if n_found>0; lP0_tsne00_kmeansK_(nstep,:) = mean(lP0_tsne00_kmeansK__(nstep,:,1:n_found),3); end;
  end;%for nstep=1:n_step;
  %%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  %%%%%%%%;
  lpv_tsne50_isosplit5__ = zeros(n_step,min(2,n_rank),n_iteration);
  lP0_tsne50_isosplit5__ = zeros(n_step,min(2,n_rank),n_iteration);
  lpv_tsne50_isosplit5_ = zeros(n_step,min(2,n_rank));
  lP0_tsne50_isosplit5_ = zeros(n_step,min(2,n_rank));
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  %%%%%%%%;
  n_found = 0;
  for niteration=1:n_iteration;
  str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
  str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_base,'file')); disp(sprintf(' %% could not find %s',str_base)); end;
  if ( exist(str_base,'file'));
  base_ = load(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
  end;%if ( exist(str_base,'file'));
  str_xfix = test_dexcluster_multi_xfix_1('tsne50_isosplit5',M,N,gamma,X,mu,niteration);
  str_tsne50_isosplit5_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_tsne50_isosplit5_mat,'file')); disp(sprintf(' %% could not find %s',str_tsne50_isosplit5_mat)); end;
  if ( exist(str_tsne50_isosplit5_mat,'file'));
  disp(sprintf(' %% loading %s...',str_tsne50_isosplit5_mat)); 
  tmp_ = load(str_tsne50_isosplit5_mat,'lpv_','lP0_','fla_','label_B__');
  tmp_.lpv_(find(~isfinite(tmp_.lpv_))) = 0; tmp_.lP0_(find(~isfinite(tmp_.lP0_))) = 0;
  lpv_tsne50_isosplit5__(nstep,:,1+n_found) = tmp_.lpv_;
  lP0_tsne50_isosplit5__(nstep,:,1+n_found) = tmp_.lP0_;
  n_found = n_found+1;
  end;%if ( exist(str_tsne50_isosplit5_mat,'file'));
  end;%for niteration=1:n_iteration;
  if n_found>0; lpv_tsne50_isosplit5_(nstep,:) = mean(lpv_tsne50_isosplit5__(nstep,:,1:n_found),3); end;
  if n_found>0; lP0_tsne50_isosplit5_(nstep,:) = mean(lP0_tsne50_isosplit5__(nstep,:,1:n_found),3); end;
  end;%for nstep=1:n_step;
  %%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  %%%%%%%%;
  lpv_tsne50_kmeansK__ = zeros(n_step,min(2,n_rank),n_iteration);
  lP0_tsne50_kmeansK__ = zeros(n_step,min(2,n_rank),n_iteration);
  lpv_tsne50_kmeansK_ = zeros(n_step,min(2,n_rank));
  lP0_tsne50_kmeansK_ = zeros(n_step,min(2,n_rank));
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  %%%%%%%%;
  n_found = 0;
  for niteration=1:n_iteration;
  str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
  str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_base,'file')); disp(sprintf(' %% could not find %s',str_base)); end;
  if ( exist(str_base,'file'));
  base_ = load(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
  end;%if ( exist(str_base,'file'));
  str_xfix = test_dexcluster_multi_xfix_1('tsne50_kmeansK',M,N,gamma,X,mu,niteration);
  str_tsne50_kmeansK_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_tsne50_kmeansK_mat,'file')); disp(sprintf(' %% could not find %s',str_tsne50_kmeansK_mat)); end;
  if ( exist(str_tsne50_kmeansK_mat,'file'));
  disp(sprintf(' %% loading %s...',str_tsne50_kmeansK_mat)); 
  tmp_ = load(str_tsne50_kmeansK_mat,'lpv_','lP0_','fla_','label_B__');
  tmp_.lpv_(find(~isfinite(tmp_.lpv_))) = 0; tmp_.lP0_(find(~isfinite(tmp_.lP0_))) = 0;
  lpv_tsne50_kmeansK__(nstep,:,1+n_found) = tmp_.lpv_;
  lP0_tsne50_kmeansK__(nstep,:,1+n_found) = tmp_.lP0_;
  n_found = n_found+1;
  end;%if ( exist(str_tsne50_kmeansK_mat,'file'));
  end;%for niteration=1:n_iteration;
  if n_found>0; lpv_tsne50_kmeansK_(nstep,:) = mean(lpv_tsne50_kmeansK__(nstep,:,1:n_found),3); end;
  if n_found>0; lP0_tsne50_kmeansK_(nstep,:) = mean(lP0_tsne50_kmeansK__(nstep,:,1:n_found),3); end;
  end;%for nstep=1:n_step;
  %%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  %%%%%%%%;
  lpv_dexcluster_nonbinary_trace_ZRmax__ = zeros(n_step,2,n_iteration);
  lP0_dexcluster_nonbinary_trace_ZRmax__ = zeros(n_step,2,n_iteration);
  lpv_dexcluster_nonbinary_trace_ZRmax_ = zeros(n_step,2);
  lP0_dexcluster_nonbinary_trace_ZRmax_ = zeros(n_step,2);
  for nstep=1:n_step;
  X = X_(nstep); mu = mu_(nstep);
  MX = ceil(M^X); NX = ceil(N^X); 
  snr_(nstep) = sqrt(MX*NX)*mu/sqrt(N);
  %%%%%%%%;
  n_found = 0;
  for niteration=1:n_iteration;
  str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
  str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_base,'file')); disp(sprintf(' %% could not find %s',str_base)); end;
  if ( exist(str_base,'file'));
  base_ = load(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
  end;%if ( exist(str_base,'file'));
  str_xfix = test_dexcluster_multi_xfix_1('dexcluster_nonbinary_trace_ZRmax',M,N,gamma,X,mu,niteration);
  str_dexcluster_nonbinary_trace_ZRmax_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
  if (~exist(str_dexcluster_nonbinary_trace_ZRmax_mat,'file')); disp(sprintf(' %% could not find %s',str_dexcluster_nonbinary_trace_ZRmax_mat)); end;
  if ( exist(str_dexcluster_nonbinary_trace_ZRmax_mat,'file'));
  disp(sprintf(' %% loading %s...',str_dexcluster_nonbinary_trace_ZRmax_mat)); 
  tmp_ = load(str_dexcluster_nonbinary_trace_ZRmax_mat,'lpv_','lP0_','fla_','label_B__');
  %[tmp_lP0,tmp_cap_] = label_to_label_enrichment_lP0(base_.label_A_,tmp_.label_B__{1});
  %disp(sprintf(' %% niteration %d --> lP0 %0.2f',niteration,tmp_lP0));
  %disp(tmp_cap_);
  tmp_.lpv_(find(~isfinite(tmp_.lpv_))) = 0; tmp_.lP0_(find(~isfinite(tmp_.lP0_))) = 0;
  lpv_dexcluster_nonbinary_trace_ZRmax__(nstep,:,1+n_found) = tmp_.lpv_;
  lP0_dexcluster_nonbinary_trace_ZRmax__(nstep,:,1+n_found) = tmp_.lP0_;
  n_found = n_found+1;
  end;%if ( exist(str_dexcluster_nonbinary_trace_ZRmax_mat,'file'));
  end;%for niteration=1:n_iteration;
  if n_found>0; lpv_dexcluster_nonbinary_trace_ZRmax_(nstep,:) = mean(lpv_dexcluster_nonbinary_trace_ZRmax__(nstep,:,1:n_found),3); end;
  if n_found>0; lP0_dexcluster_nonbinary_trace_ZRmax_(nstep,:) = mean(lP0_dexcluster_nonbinary_trace_ZRmax__(nstep,:,1:n_found),3); end;
  end;%for nstep=1:n_step;
  %%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

  figure(1);clf; 
  subplot(1,1,1); hold on;
  Msize = 10;
  hold on;
  plot(snr_,(1-lP0_dexcluster_nonbinary_trace_ZRmax_(:,1)),'ko-','MarkerSize',Msize,'MarkerFaceColor','m');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,1)),'ko-','MarkerSize',Msize,'MarkerFaceColor','g');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,2)),'kd-','MarkerSize',Msize,'MarkerFaceColor','g');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,3)),'k^-','MarkerSize',Msize,'MarkerFaceColor','g');
  %plot(snr_,(1-lP0_spectral_isosplit5_(:,4)),'ks-','MarkerSize',Msize,'MarkerFaceColor','g');
  %plot(snr_,(1-lP0_spectral_isosplit5_(:,5)),'kp-','MarkerSize',Msize,'MarkerFaceColor','g');
  %plot(snr_,(1-lP0_spectral_isosplit5_(:,6)),'kh-','MarkerSize',Msize,'MarkerFaceColor','g');
  %plot(snr_,(1-lP0_spectral_kmeansK_),'ks-','MarkerSize',Msize,'MarkerFaceColor','g');
  plot(snr_,(1-lP0_tsne00_isosplit5_(:,2)),'kh-','MarkerSize',Msize,'MarkerFaceColor','c');
  plot(snr_,(1-lP0_tsne00_kmeansK_(:,2)),'ks-','MarkerSize',Msize,'MarkerFaceColor','c');
  plot(snr_,(1-lP0_tsne50_isosplit5_(:,2)),'kh-','MarkerSize',Msize,'MarkerFaceColor','b');
  plot(snr_,(1-lP0_tsne50_kmeansK_(:,2)),'ks-','MarkerSize',Msize,'MarkerFaceColor','b');
  hold off;
  xlim([min(snr_),max(snr_)]); ylim([0,3500]);
  xlabel('snr (i.e., signal)'); ylabel('entropy (i.e., recovery)');
  legend({'loop','pca1->isosplit','pca2->isosplit','pca3->isosplit','tsne->isosplit','tsne->kmeans9','fitsne->isosplit','fitsne->kmeans9'},'Location','NorthWest');
  figbig;
  title(sprintf('Comparison of clustering algorithms; Random matrix of size M %d N %d with 8 planted clusters embedded within',M,N));
  str_fig_M_N_g = sprintf('%s/test_dexcluster_multi_1_M%d_N%d_g%0.3d',dir_base,M,N,floor(gamma*1000));
  disp(sprintf(' %% writing %s',sprintf('%s_B1.jpg',str_fig_M_N_g)));
  print('-djpeg',sprintf('%s_B1.jpg',str_fig_M_N_g));
  print('-depsc',sprintf('%s_B1.eps',str_fig_M_N_g));

  figure(1);clf; 
  subplot(1,1,1); hold on;
  Msize = 10;
  hold on;
  plot(snr_,(1-lP0_dexcluster_nonbinary_trace_ZRmax_(:,1)),'ko-','MarkerSize',Msize,'MarkerFaceColor','m');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,1)),'ko-','MarkerSize',Msize,'MarkerFaceColor','g');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,2)),'kd-','MarkerSize',Msize,'MarkerFaceColor','g');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,3)),'k^-','MarkerSize',Msize,'MarkerFaceColor','g');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,4)),'ks-','MarkerSize',Msize,'MarkerFaceColor','g');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,5)),'kp-','MarkerSize',Msize,'MarkerFaceColor','g');
  plot(snr_,(1-lP0_spectral_isosplit5_(:,6)),'kh-','MarkerSize',Msize,'MarkerFaceColor','g');
  %plot(snr_,(1-lP0_spectral_kmeansK_),'ks-','MarkerSize',Msize,'MarkerFaceColor','g');
  %plot(snr_,(1-lP0_tsne00_isosplit5_(:,2)),'kh-','MarkerSize',Msize,'MarkerFaceColor','c');
  %plot(snr_,(1-lP0_tsne00_kmeansK_(:,2)),'ks-','MarkerSize',Msize,'MarkerFaceColor','c');
  %plot(snr_,(1-lP0_tsne50_isosplit5_(:,2)),'kh-','MarkerSize',Msize,'MarkerFaceColor','b');
  %plot(snr_,(1-lP0_tsne50_kmeansK_(:,2)),'ks-','MarkerSize',Msize,'MarkerFaceColor','b');
  hold off;
  xlim([min(snr_),max(snr_)]); ylim([0,3500]);
  xlabel('snr (i.e., signal)'); ylabel('entropy (i.e., recovery)');
  %legend({'loop','pca1->isosplit','pca2->isosplit','pca3->isosplit','tsne->isosplit','tsne->kmeans9','fitsne->isosplit','fitsne->kmeans9'},'Location','NorthWest');
  legend({'loop','pca1->isosplit','pca2->isosplit','pca3->isosplit','pca4->isosplit','pca5->isosplit','pca6->isosplit'},'Location','NorthWest');
  figbig;
  title(sprintf('Comparison of clustering algorithms; Random matrix of size M %d N %d with 8 planted clusters embedded within',M,N));
  str_fig_M_N_g = sprintf('%s/test_dexcluster_multi_1_M%d_N%d_g%0.3d',dir_base,M,N,floor(gamma*1000));
  disp(sprintf(' %% writing %s',sprintf('%s_B2.jpg',str_fig_M_N_g)));
  print('-djpeg',sprintf('%s_B2.jpg',str_fig_M_N_g));
  print('-depsc',sprintf('%s_B2.eps',str_fig_M_N_g));

  %}

setup();
dir_trunk = sprintf('/data/rangan/dir_bcc/dir_jamison');
dir_base = sprintf('%s/dir_dexcluster_multi_1',dir_trunk);
if (~exist(dir_base,'dir')); disp(sprintf(' %% mkdir %s',dir_base)); mkdir(dir_base); end;
%%%%%%%%;
MX = ceil(M^X); NX = ceil(N^X); snr = sqrt(MX*NX)*mu/sqrt(N);
%%%%%%%%;
for niteration=1:n_iteration;
rng(niteration);
A_n_ = randn(M,N); 
for nj=1:2; 
pf_{nj} = randperm(size(A_n_,nj)); 
[~,pi_{nj}] = sort(pf_{nj}); [~,pi_{nj}] = sort(pi_{nj}); 
end;% for nj=1:2;
n_cluster = min(8,ceil(M/M^0.65));
B_n_ = cell(n_cluster,1);
B_label_ = zeros(M,1); 
for ncluster=1:n_cluster;
B_n_{ncluster}=randn(MX,NX)+mu*ones(MX,1)*(2*(rand(1,NX)>0.5) - 1); 
A_n_(pf_{1}(MX*(ncluster-1) + (1:MX)),pf_{2}(NX*(ncluster-1) + (1:NX))) = B_n_{ncluster};
B_label_(pi_{1}(MX*(ncluster-1) + (1:MX))) = ncluster;
label_A_ = B_label_;
end;%for ncluster=1:n_cluster;
%%%%%%%%;
disp(sprintf(' %% niteration %d/%d',niteration,n_iteration));
%%%%%%%%;
str_xfix = test_dexcluster_multi_xfix_1('base',M,N,gamma,X,mu,niteration);
str_base = sprintf('%s/%s.mat',dir_base,str_xfix);
if (~exist(str_base,'file')); 
disp(sprintf(' %% %s not found, creating',str_base)); 
save(str_base,'M','N','X','mu','MX','NX','snr','B_label_','label_A_','n_cluster');
end;%if (~exist(str_base,'file')); 
%%%%%%%%;
% spectral. ; 
% pca --> isosplit. ;
% pca --> kmeans2. ;
%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% spectral --> isosplit5. ;
str_xfix = test_dexcluster_multi_xfix_1('spectral_isosplit5',M,N,gamma,X,mu,niteration);
str_spectral_isosplit5_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_spectral_isosplit5_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_spectral_isosplit5_mat,'file') & ~exist(str_spectral_isosplit5_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_spectral_isosplit5_mat)); 
save(str_spectral_isosplit5_tmp,'str_spectral_isosplit5_mat');
try;
%%%%%%%%;
[tmp_U_,tmp_S_,tmp_V_] = svds(A_n_,n_rank);
[~,tmp_U_ij_] = sort(abs(tmp_U_(:,1)),'descend'); [~,tmp_V_ij_] = sort(abs(tmp_V_(:,1)),'descend');
lpv_ = zeros(n_rank,1); lP0_ = zeros(n_rank,1); fla_ = zeros(n_rank,1); label_B__ = cell(n_rank,1);
for nrank=1:n_rank;
A_n_sub_ = tmp_U_(:,1:nrank);
opts_isosplit5 = struct('K_init',200,'isocut_threshold',1.0);
label_B__{nrank} = transpose(isosplit5(transpose(A_n_sub_),opts_isosplit5));
[lpv_(nrank),lP0_(nrank),fla_(nrank)] = label_to_label_enrichment_2(label_A_,label_B__{nrank});
end;%for nrank=1:n_rank;
%%%%%%%%;
save(str_spectral_isosplit5_mat,'lpv_','lP0_','fla_','label_B__');
clear lpv_ lP0_ fla_ label_B__ ;
catch; disp(sprintf(' %% error generating %s',str_spectral_isosplit5_mat)); end;%try;
delete(str_spectral_isosplit5_tmp);
end;%if (~exist(str_spectral_isosplit5,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% spectral --> kmeansK. ;
str_xfix = test_dexcluster_multi_xfix_1('spectral_kmeansK',M,N,gamma,X,mu,niteration);
str_spectral_kmeansK_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_spectral_kmeansK_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_spectral_kmeansK_mat,'file') & ~exist(str_spectral_kmeansK_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_spectral_kmeansK_mat)); 
save(str_spectral_kmeansK_tmp,'str_spectral_kmeansK_mat');
try;
%%%%%%%%;
[tmp_U_,tmp_S_,tmp_V_] = svds(A_n_,n_rank);
[~,tmp_U_ij_] = sort(abs(tmp_U_(:,1)),'descend'); [~,tmp_V_ij_] = sort(abs(tmp_V_(:,1)),'descend');
lpv_ = zeros(n_rank,1); lP0_ = zeros(n_rank,1); fla_ = zeros(n_rank,1); label_B__ = cell(n_rank,1);
for nrank=1:n_rank;
A_n_sub_ = tmp_U_(:,1:nrank);
label_B__{nrank} = kmeans(A_n_sub_,n_cluster);
[lpv_(nrank),lP0_(nrank),fla_(nrank)] = label_to_label_enrichment_2(label_A_,label_B__{nrank});
end;%for nrank=1:n_rank;
%%%%%%%%;
save(str_spectral_kmeansK_mat,'lpv_','lP0_','fla_','label_B__');
clear lpv_ lP0_ fla_ label_B__ ;
catch; disp(sprintf(' %% error generating %s',str_spectral_kmeansK_mat)); end;%try;
delete(str_spectral_kmeansK_tmp);
end;%if (~exist(str_spectral_kmeansK,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% spectral --> kmeansJ. ;
str_xfix = test_dexcluster_multi_xfix_1('spectral_kmeansJ',M,N,gamma,X,mu,niteration);
str_spectral_kmeansJ_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_spectral_kmeansJ_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_spectral_kmeansJ_mat,'file') & ~exist(str_spectral_kmeansJ_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_spectral_kmeansJ_mat)); 
save(str_spectral_kmeansJ_tmp,'str_spectral_kmeansJ_mat');
try;
%%%%%%%%;
[tmp_U_,tmp_S_,tmp_V_] = svds(A_n_,n_rank);
[~,tmp_U_ij_] = sort(abs(tmp_U_(:,1)),'descend'); [~,tmp_V_ij_] = sort(abs(tmp_V_(:,1)),'descend');
lpv__ = zeros(n_rank,n_cluster); lP0__ = zeros(n_rank,n_cluster); fla__ = zeros(n_rank,n_cluster); label_B___ = cell(n_rank,n_cluster);
for nrank=1:n_rank;
A_n_sub_ = tmp_U_(:,1:nrank);
for ncluster=1:n_cluster;
label_B__{nrank,ncluster} = kmeans(A_n_sub_,ncluster);
[lpv_(nrank,ncluster),lP0_(nrank,ncluster),fla_(nrank,ncluster)] = label_to_label_enrichment_2(label_A_,label_B__{nrank,ncluster});
end;%for ncluster=1:n_cluster;
end;%for nrank=1:n_rank;
%%%%%%%%;
save(str_spectral_kmeansJ_mat,'lpv__','lP0__','fla__','label_B___');
clear lpv__ lP0__ fla__ label_B___ ;
catch; disp(sprintf(' %% error generating %s',str_spectral_kmeansJ_mat)); end;%try;
delete(str_spectral_kmeansJ_tmp);
end;%if (~exist(str_spectral_kmeansJ,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% tsne00 --> isosplit5 ;
str_xfix = test_dexcluster_multi_xfix_1('tsne00_isosplit5',M,N,gamma,X,mu,niteration);
str_tsne00_isosplit5_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_tsne00_isosplit5_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_tsne00_isosplit5_mat,'file') & ~exist(str_tsne00_isosplit5_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_tsne00_isosplit5_mat)); 
save(str_tsne00_isosplit5_tmp,'str_tsne00_isosplit5_mat');
try;
%%%%%%%%;
lpv_ = zeros(min(2,n_rank),1); lP0_ = zeros(min(2,n_rank),1); fla_ = zeros(min(2,n_rank),1); 
label_B__ = cell(min(2,n_rank),1);
for nrank=1:min(2,n_rank);
A_n_sub_ = fast_tsne_dr_0(A_n_,struct('rand_seed',1,'no_dims',nrank,'theta',0));
opts_isosplit5 = struct('K_init',200,'isocut_threshold',1.0);
label_B__{nrank} = transpose(isosplit5(transpose(A_n_sub_),opts_isosplit5));
[lpv_(nrank),lP0_(nrank),fla_(nrank)] = label_to_label_enrichment_2(label_A_,label_B__{nrank});
end;%for nrank=1:min(2,n_rank);
%%%%%%%%;
save(str_tsne00_isosplit5_mat,'lpv_','lP0_','fla_','label_B__');
clear lpv_ lP0_ fla_ label_B__ ;
catch; disp(sprintf(' %% error generating %s',str_tsne00_isosplit5_mat)); end;%try;
delete(str_tsne00_isosplit5_tmp);
end;%if (~exist(str_tsne00_isosplit5,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% tsne00 --> kmeansK ;
str_xfix = test_dexcluster_multi_xfix_1('tsne00_kmeansK',M,N,gamma,X,mu,niteration);
str_tsne00_kmeansK_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_tsne00_kmeansK_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_tsne00_kmeansK_mat,'file') & ~exist(str_tsne00_kmeansK_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_tsne00_kmeansK_mat)); 
save(str_tsne00_kmeansK_tmp,'str_tsne00_kmeansK_mat');
try;
%%%%%%%%;
lpv_ = zeros(min(2,n_rank),1); lP0_ = zeros(min(2,n_rank),1); fla_ = zeros(min(2,n_rank),1); 
label_B__ = cell(min(2,n_rank),1);
for nrank=1:min(2,n_rank);
A_n_sub_ = fast_tsne_dr_0(A_n_,struct('rand_seed',1,'no_dims',nrank,'theta',0));
label_B__{nrank} = kmeans(A_n_sub_,n_cluster);
[lpv_(nrank),lP0_(nrank),fla_(nrank)] = label_to_label_enrichment_2(label_A_,label_B__{nrank});
end;%for nrank=1:min(2,n_rank);
%%%%%%%%;
save(str_tsne00_kmeansK_mat,'lpv_','lP0_','fla_','label_B__');
clear lpv_ lP0_ fla_ label_B__ ;
catch; disp(sprintf(' %% error generating %s',str_tsne00_kmeansK_mat)); end;%try;
delete(str_tsne00_kmeansK_tmp);
end;%if (~exist(str_tsne00_kmeansK,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% tsne00 --> kmeansJ ;
str_xfix = test_dexcluster_multi_xfix_1('tsne00_kmeansJ',M,N,gamma,X,mu,niteration);
str_tsne00_kmeansJ_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_tsne00_kmeansJ_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_tsne00_kmeansJ_mat,'file') & ~exist(str_tsne00_kmeansJ_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_tsne00_kmeansJ_mat)); 
save(str_tsne00_kmeansJ_tmp,'str_tsne00_kmeansJ_mat');
try;
%%%%%%%%;
lpv__ = zeros(min(2,n_rank),n_cluster); lP0__ = zeros(min(2,n_rank),n_cluster); fla__ = zeros(min(2,n_rank),n_cluster); 
label_B___ = cell(min(2,n_rank),n_cluster);
for nrank=1:min(2,n_rank);
A_n_sub_ = fast_tsne_dr_0(A_n_,struct('rand_seed',1,'no_dims',nrank,'theta',0));
for ncluster=1:n_cluster;
label_B__{nrank,ncluster} = kmeans(A_n_sub_,ncluster);
[lpv_(nrank,ncluster),lP0_(nrank,ncluster),fla_(nrank,ncluster)] = label_to_label_enrichment_2(label_A_,label_B__{nrank,ncluster});
end;%for ncluster=1:n_cluster;
end;%for nrank=1:min(2,n_rank);
%%%%%%%%;
save(str_tsne00_kmeansJ_mat,'lpv__','lP0__','fla__','label_B___');
clear lpv__ lP0__ fla__ label_B___ ;
catch; disp(sprintf(' %% error generating %s',str_tsne00_kmeansJ_mat)); end;%try;
delete(str_tsne00_kmeansJ_tmp);
end;%if (~exist(str_tsne00_kmeansJ,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% tsne50 --> isosplit5 ;
str_xfix = test_dexcluster_multi_xfix_1('tsne50_isosplit5',M,N,gamma,X,mu,niteration);
str_tsne50_isosplit5_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_tsne50_isosplit5_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_tsne50_isosplit5_mat,'file') & ~exist(str_tsne50_isosplit5_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_tsne50_isosplit5_mat)); 
save(str_tsne50_isosplit5_tmp,'str_tsne50_isosplit5_mat');
try;
%%%%%%%%;
lpv_ = zeros(min(2,n_rank),1); lP0_ = zeros(min(2,n_rank),1); fla_ = zeros(min(2,n_rank),1); 
label_B__ = cell(min(2,n_rank),1);
for nrank=1:min(2,n_rank);
A_n_sub_ = fast_tsne_dr_0(A_n_,struct('rand_seed',1,'no_dims',nrank,'theta',0.5));
opts_isosplit5 = struct('K_init',200,'isocut_threshold',1.0);
label_B__{nrank} = transpose(isosplit5(transpose(A_n_sub_),opts_isosplit5));
[lpv_(nrank),lP0_(nrank),fla_(nrank)] = label_to_label_enrichment_2(label_A_,label_B__{nrank});
end;%for nrank=1:min(2,n_rank);
%%%%%%%%;
save(str_tsne50_isosplit5_mat,'lpv_','lP0_','fla_','label_B__');
clear lpv_ lP0_ fla_ label_B__ ;
catch; disp(sprintf(' %% error generating %s',str_tsne50_isosplit5_mat)); end;%try;
delete(str_tsne50_isosplit5_tmp);
end;%if (~exist(str_tsne50_isosplit5,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% tsne50 --> kmeansK ;
str_xfix = test_dexcluster_multi_xfix_1('tsne50_kmeansK',M,N,gamma,X,mu,niteration);
str_tsne50_kmeansK_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_tsne50_kmeansK_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_tsne50_kmeansK_mat,'file') & ~exist(str_tsne50_kmeansK_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_tsne50_kmeansK_mat)); 
save(str_tsne50_kmeansK_tmp,'str_tsne50_kmeansK_mat');
try;
%%%%%%%%;
lpv_ = zeros(min(2,n_rank),1); lP0_ = zeros(min(2,n_rank),1); fla_ = zeros(min(2,n_rank),1); 
label_B__ = cell(min(2,n_rank),1);
for nrank=1:min(2,n_rank);
A_n_sub_ = fast_tsne_dr_0(A_n_,struct('rand_seed',1,'no_dims',nrank,'theta',0.5));
label_B__{nrank} = kmeans(A_n_sub_,n_cluster);
[lpv_(nrank),lP0_(nrank),fla_(nrank)] = label_to_label_enrichment_2(label_A_,label_B__{nrank});
end;%for nrank=1:min(2,n_rank);
%%%%%%%%;
save(str_tsne50_kmeansK_mat,'lpv_','lP0_','fla_','label_B__');
clear lpv_ lP0_ fla_ label_B__ ;
catch; disp(sprintf(' %% error generating %s',str_tsne50_kmeansK_mat)); end;%try;
delete(str_tsne50_kmeansK_tmp);
end;%if (~exist(str_tsne50_kmeansK,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% tsne50 --> kmeansJ ;
str_xfix = test_dexcluster_multi_xfix_1('tsne50_kmeansJ',M,N,gamma,X,mu,niteration);
str_tsne50_kmeansJ_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_tsne50_kmeansJ_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_tsne50_kmeansJ_mat,'file') & ~exist(str_tsne50_kmeansJ_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_tsne50_kmeansJ_mat)); 
save(str_tsne50_kmeansJ_tmp,'str_tsne50_kmeansJ_mat');
try;
%%%%%%%%;
lpv__ = zeros(min(2,n_rank),n_cluster); lP0__ = zeros(min(2,n_rank),n_cluster); fla__ = zeros(min(2,n_rank),n_cluster); 
label_B___ = cell(min(2,n_rank),n_cluster);
for nrank=1:min(2,n_rank);
A_n_sub_ = fast_tsne_dr_0(A_n_,struct('rand_seed',1,'no_dims',nrank,'theta',0.5));
for ncluster=1:n_cluster;
label_B__{nrank,ncluster} = kmeans(A_n_sub_,ncluster);
[lpv_(nrank,ncluster),lP0_(nrank,ncluster),fla_(nrank,ncluster)] = label_to_label_enrichment_2(label_A_,label_B__{nrank,ncluster});
end;%for ncluster=1:n_cluster;
end;%for nrank=1:min(2,n_rank);
%%%%%%%%;
save(str_tsne50_kmeansJ_mat,'lpv__','lP0__','fla__','label_B___');
clear lpv__ lP0__ fla__ label_B___ ;
catch; disp(sprintf(' %% error generating %s',str_tsne50_kmeansJ_mat)); end;%try;
delete(str_tsne50_kmeansJ_tmp);
end;%if (~exist(str_tsne50_kmeansJ,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% dexcluster --> ZRmax ;
str_xfix = test_dexcluster_multi_xfix_1('dexcluster_nonbinary_trace_ZRmax',M,N,gamma,X,mu,niteration);
str_dexcluster_nonbinary_trace_ZRmax_mat = sprintf('%s/%s.mat',dir_base,str_xfix);
str_dexcluster_nonbinary_trace_ZRmax_tmp = sprintf('%s/%s.tmp',dir_base,str_xfix);
if (~exist(str_dexcluster_nonbinary_trace_ZRmax_mat,'file') & ~exist(str_dexcluster_nonbinary_trace_ZRmax_tmp,'file')); 
disp(sprintf(' %% %s not found, creating',str_dexcluster_nonbinary_trace_ZRmax_mat)); 
save(str_dexcluster_nonbinary_trace_ZRmax_tmp,'str_dexcluster_nonbinary_trace_ZRmax_mat');
try;
%%%%%%%%;
prefix_base = sprintf('tmp_%s',str_xfix); 
dir_out = []; E_array_base_ = A_n_; E_array_r_ij_ = []; E_array_c_ij_ = []; p_set = [];
test_loader_dexcluster_nonbinary_trace_ZRmax_recursive_0(dir_out,prefix_base,E_array_base_,E_array_r_ij_,E_array_c_ij_,gamma,n_shuffle,p_set);
ZRmax_label_ = test_loader_dexcluster_nonbinary_trace_ZRmax_recursive_0(dir_out,prefix_base,E_array_base_,E_array_r_ij_,E_array_c_ij_,gamma,n_shuffle,p_set);
lpv_ = zeros(2,1); lP0_ = zeros(2,1); fla_ = zeros(2,1); label_B__ = cell(2,1);
label_B__{1} = label_str_to_enum_0(ZRmax_label_); 
label_B__{2} = label_rearrange_0(label_B__{1},E_array_base_);
[lpv_(1),lP0_(1),fla_(1)] = label_to_label_enrichment_2(label_A_,label_B__{1});
[lpv_(2),lP0_(2),fla_(2)] = label_to_label_enrichment_2(label_A_,label_B__{2});
%%%%%%%%;
save(str_dexcluster_nonbinary_trace_ZRmax_mat,'lpv_','lP0_','fla_','label_B__');
clear lpv_ lP0_ fla_ label_B__ ;
rmdir(sprintf('dir_%s',prefix_base),'s');
catch; disp(sprintf(' %% error generating %s',str_dexcluster_nonbinary_trace_ZRmax_mat)); end;%try;
delete(str_dexcluster_nonbinary_trace_ZRmax_tmp);
end;%if (~exist(str_dexcluster_nonbinary_trace_ZRmax,'file')); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%for niteration=1:n_iteration;

