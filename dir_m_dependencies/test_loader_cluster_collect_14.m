%function test_loader_cluster_collect_14();
% intended for use with test_loader_33.m ;

clear;

platform = 'access1';
%platform = 'OptiPlex';
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;

dir_trunk = sprintf('/%s/rangan/dir_bcc/dir_jamison',string_root);
dir_data = sprintf('%s/data_summary_20190730',dir_trunk);
dir_mat = sprintf('%s/dir_mat',dir_trunk);
dir_jpg = sprintf('%s/dir_jpg',dir_trunk);
dir_cluster = sprintf('%s/dir_loader_cluster',dir_trunk);

flag_compute = strcmp(platform,'access1');

if flag_compute;

%%%%%%%%;
% checking clustering. ;
%%%%%%%%;
date_diff_threshold = 1.0;
flag_force_create_mat = 0;
flag_force_create_tmp = 0;
fp_label_A_ = fopen(sprintf('%s/str_CLabel_sub_.nsv',dir_mat),'r');
str_label_A_ = textscan(fp_label_A_,'%s'); fclose(fp_label_A_);
n_u = numel(str_label_A_{1});
label_A_ = label_str_to_enum_0(str_label_A_{1});
u_label_A_ = unique(str_label_A_{1});
n_label_A = length(u_label_A_);
label_A_each__ = zeros(n_u,n_label_A);
for nlabel_A=0:n_label_A-1;
label_A_each__(:,1+nlabel_A) = zeros(n_u,1);
tmp_index_ = efind(strcmp(str_label_A_{1},u_label_A_{1+nlabel_A}));
label_A_each__(1+tmp_index_,1+nlabel_A) = 1;
end;%for nlabel_A=0:n_label_A-1;
u_label_A_enum_ = zeros(n_label_A,1); 
u_label_A_enum_(1:n_label_A-1) = cellfun(@str2num,u_label_A_(1:n_label_A-1));
u_label_A_enum_(end) = n_label_A;
[~,index_label_A_] = sort(u_label_A_enum_,'ascend'); index_label_A_ = index_label_A_ - 1;
%%%%%%%%;
gamma = 0.01; n_shuffle = 64; p_set = 0.05; n_member_lob = 3;
gamma_d = floor(gamma*1000); str_g = sprintf('_g%.3d',gamma_d);
p_set_d = floor(p_set*1000); str_p = sprintf('_p%.3d',p_set_d);
str_nml = sprintf('_nml%d',n_member_lob);
str_dex = sprintf('dexcluster_nonbinary_trace_ZRimax%s%s%s',str_g,str_p,str_nml);
%%%%%%%%;
str_X_ = {'E','I','EI'}; n_X = numel(str_X_);
prefix_normalization_ = {'liXf','liXf_clogr','fill'}; n_normalization = numel(prefix_normalization_);
prefix_method_ = {'spectral_isosplit5','tsne00_isosplit5','tsne50_isosplit5','umap00_default','umap00_isosplit5','umap00_hdbscan',str_dex}; n_method = numel(prefix_method_);
n_correction__ = zeros(n_X,n_normalization);
prefix_correction__ = cell(n_X,n_normalization);
rank_estimate__ = cell(n_X,n_normalization);
%%%%%%%%;
for nX=0:n_X-1;
str_X = str_X_{1+nX};
for nnormalization=0:n_normalization-1;
prefix_normalization = prefix_normalization_{1+nnormalization};
tmp_fname_tsv = sprintf('%s/n_QCluster_U%s_%s_C_mahalanobis.tsv',dir_mat,str_X,prefix_normalization);
n_QCluster = textread(tmp_fname_tsv); n_QCluster = n_QCluster(1);
disp(sprintf(' %% %s_%s n_QCluster %d',str_X,prefix_normalization,n_QCluster));
prefix_correction_ = {'','c127'};
n_correction = 2;
for nQCluster=0:n_QCluster-1;
prefix_correction_{n_correction+1} = sprintf('UX_c%d',1+nQCluster);
n_correction = n_correction+1;
end;%for nQCluster=0:n_QCluster-1;
n_correction__(1+nX,1+nnormalization) = n_correction;
prefix_correction__{1+nX,1+nnormalization} = prefix_correction_;
end;%for nnormalization=0:n_normalization-1;
end;%for nX=0:n_X-1;
%%%%%%%%;
flag_stage0__ = cell(n_X,n_normalization);
flag_stage1__ = cell(n_X,n_normalization);
n_cluster_stage0__ = cell(n_X,n_normalization);
lpv_A_vs_B__ = cell(n_X,n_normalization);
lP0_A_vs_B__ = cell(n_X,n_normalization);
n_X_GENE__ = cell(n_X,n_normalization);
markergene_A__ = cell(n_X,n_normalization);
n_Z_index__ = cell(n_X,n_normalization);
lpv_A_each_vs_B__ = cell(n_X,n_normalization);
lpv_A_each_vs_B_each__ = cell(n_X,n_normalization);
for nX=0:n_X-1;
for nnormalization=0:n_normalization-1;
n_correction = n_correction__(1+nX,1+nnormalization);
rank_estimate__{1+nX,1+nnormalization} = zeros(n_correction,1);
flag_stage0__{1+nX,1+nnormalization} = zeros(n_correction,n_method);
flag_stage1__{1+nX,1+nnormalization} = zeros(n_correction,n_method);
n_cluster_stage0__{1+nX,1+nnormalization} = cell(n_correction,n_method);
lpv_A_vs_B__{1+nX,1+nnormalization} = cell(n_correction,n_method);
lP0_A_vs_B__{1+nX,1+nnormalization} = cell(n_correction,n_method);
n_X_GENE__{1+nX,1+nnormalization} = zeros(n_correction,1);
markergene_A__{1+nX,1+nnormalization} = cell(n_correction,1);
n_Z_index__{1+nX,1+nnormalization} = zeros(n_correction,n_method);
lpv_A_each_vs_B__{1+nX,1+nnormalization} = cell(n_correction,n_method);
lpv_A_each_vs_B_each__{1+nX,1+nnormalization} = cell(n_correction,n_method);
end;%for nnormalization=0:n_normalization-1;
end;%for nX=0:n_X-1;
%%%%%%%%;
for nX=0:n_X-1;
str_X = str_X_{1+nX};
for nnormalization=0:n_normalization-1;
prefix_normalization = prefix_normalization_{1+nnormalization};
n_correction = n_correction__(1+nX,1+nnormalization);
prefix_correction_ = prefix_correction__{1+nX,1+nnormalization};
for ncorrection=0:n_correction-1;
prefix_correction = prefix_correction_{1+ncorrection};
if (numel(prefix_correction)==0); tmp_dir_cluster = sprintf('%s/dir_%s_%s_cluster',dir_cluster,str_X,prefix_normalization); end;
if (numel(prefix_correction)> 0); tmp_dir_cluster = sprintf('%s/dir_%s_%s_%s_cluster',dir_cluster,str_X,prefix_normalization,prefix_correction); end;
disp(sprintf(' %% dir: %s',tmp_dir_cluster));
if (ncorrection==0); rank_estimate__{1+nX,1+nnormalization}(1+ncorrection) = 0; end;
if (ncorrection==1); 
tmp_fname_mat = sprintf('%s/S_c127_original.mat',dir_mat);
tmp_ = load(tmp_fname_mat); rank_estimate_C_xxxx = tmp_.rank_estimate_sample; clear tmp_;
rank_estimate__{1+nX,1+nnormalization}(1+ncorrection) = rank_estimate_C_xxxx;
end;%if (ncorrection==1); 
if (ncorrection>=2);
nQCluster = ncorrection-2;
tmp_fname_mat = sprintf('%s/S_c%d_U%s_%s_C_mahalanobis.mat',dir_mat,1+nQCluster,str_X,prefix_normalization);
tmp_ = load(tmp_fname_mat); rank_estimate_UXC = tmp_.rank_estimate_sample; clear tmp_;
rank_estimate__{1+nX,1+nnormalization}(1+ncorrection) = rank_estimate_UXC;
end;%if (ncorrection>=2);
tmp_fname_mat = sprintf('%s/markergene_A__.mat',tmp_dir_cluster);
if ( exist(tmp_fname_mat,'file'));
tmp_ = load(tmp_fname_mat);
n_X_GENE__{1+nX,1+nnormalization}(1+ncorrection) = tmp_.n_X_GENE;
markergene_A__{1+nX,1+nnormalization}{1+ncorrection} = tmp_.markergene_auz_A__;
clear tmp_;
end;%if ( exist(tmp_fname_mat,'file'));
for nmethod=0:n_method-1;
prefix_method = prefix_method_{1+nmethod};
tmp_fname_mat = sprintf('%s/%s.mat',tmp_dir_cluster,prefix_method);
if ( exist(tmp_fname_mat,'file'));
flag_stage0__{1+nX,1+nnormalization}(1+ncorrection,1+nmethod) = 1;
tmp_ = load(tmp_fname_mat);
n_Z_index = numel(tmp_.label_B__);
n_cluster_stage0__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod} = zeros(n_Z_index,1);
lpv_A_vs_B__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod} = tmp_.lpv_;
lP0_A_vs_B__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod} = tmp_.lP0_;
for nZ_index=0:n_Z_index-1;
n_cluster_stage0__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod}(1+nZ_index) = numel(unique(tmp_.label_B__{1+nZ_index}));
end;%for nZ_index=0:n_Z_index-1;
clear tmp_;
end;%if ( exist(tmp_fname_mat,'file'));
tmp_fname_mat = sprintf('%s/%s_markergene_B___.mat',tmp_dir_cluster,prefix_method);
if ( exist(tmp_fname_mat,'file'));
flag_stage1__{1+nX,1+nnormalization}(1+ncorrection,1+nmethod) = 1;
tmp_ = load(tmp_fname_mat);
n_Z_index__{1+nX,1+nnormalization}(1+ncorrection,1+nmethod) = tmp_.n_Z_index;
lpv_A_each_vs_B__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod} = tmp_.lpv_A_each_vs_B__;
lpv_A_each_vs_B_each__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod} = -tmp_.nlpv_each___;
clear tmp_;
end;%if ( exist(tmp_fname_mat,'file'));
end;%for nmethod=0:n_method-1;
end;%for ncorrection=0:n_correction-1;
end;%for nnormalization=0:n_normalization-1;
end;%for nX=0:n_X-1;
%%%%%%%%;

save(sprintf('%s/tlcc.mat',dir_mat));

end;%if flag_compute;

disp('returning'); return;

%%%%%%%%;
% copy to OptiPlex.; 
%%%%%%%%;
% scp -p rangan@access1.cims.nyu.edu:/data/rangan/dir_bcc/dir_jamison/dir_mat/tlcc.mat /home/rangan/dir_bcc/dir_jamison/dir_mat/tlcc.mat;

clear;

load(sprintf('/home/rangan/dir_bcc/dir_jamison/dir_mat/tlcc.mat'));

%platform = 'access1';
platform = 'OptiPlex';
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;

dir_trunk = sprintf('/%s/rangan/dir_bcc/dir_jamison',string_root);
dir_data = sprintf('%s/data_summary_20190730',dir_trunk);
dir_mat = sprintf('%s/dir_mat',dir_trunk);
dir_jpg = sprintf('%s/dir_jpg',dir_trunk);
dir_cluster = sprintf('%s/dir_loader_cluster',dir_trunk);

%%%%%%%%;
% Collect markergene_A__. ;
%%%%%%%%;
n_skip_sml = 1;
n_skip_big = 4;
n_cnx = 0;
for nX=0:n_X-1;
for nnormalization=0:n_normalization-1;
n_correction = n_correction__(1+nX,1+nnormalization);
for ncorrection=0:n_correction-1;
n_cnx = n_cnx+1;
end;%for ncorrection=0:n_correction-1;
if (nnormalization< n_normalization-1); n_cnx = n_cnx+n_skip_sml; end;
end;%for nnormalization=0:n_normalization-1;
if (nX< n_X-1); n_cnx = n_cnx+n_skip_big; end;
end;%for nX=0:n_X-1;
disp(sprintf(' %% n_cnx %d',n_cnx));
%%%%%%%%;
prefix_cnx_ = cell(n_cnx,1);
ticklabel_cnx_ = cell(n_cnx,1);
ncnx=0;
for nX=0:n_X-1;
str_X = str_X_{1+nX};
for nnormalization=0:n_normalization-1;
prefix_normalization = prefix_normalization_{1+nnormalization};
n_correction = n_correction__(1+nX,1+nnormalization);
prefix_correction_ = prefix_correction__{1+nX,1+nnormalization};
for ncorrection=0:n_correction-1;
prefix_correction = prefix_correction_{1+ncorrection};
if (numel(prefix_correction)==0); prefix_cnx = sprintf('%s_%s',str_X,prefix_normalization); end;
if (numel(prefix_correction)> 0); prefix_cnx = sprintf('%s_%s_%s',str_X,prefix_normalization,prefix_correction); end;
prefix_cnx_{1+ncnx} = prefix_cnx;
ticklabel_cnx = prefix_cnx; ticklabel_cnx(strfind(prefix_cnx,'_')) = ' ';
rank_estimate = rank_estimate__{1+nX,1+nnormalization}(1+ncorrection);
if (rank_estimate>0); ticklabel_cnx = sprintf('%s (r%d)',ticklabel_cnx,rank_estimate); end;
ticklabel_cnx_{1+ncnx} = ticklabel_cnx;
ncnx = ncnx+1;
end;%for ncorrection=0:n_correction-1;
if (nnormalization< n_normalization-1);
for nl=0:n_skip_sml-1;
prefix_cnx_{1+ncnx} = '';
ticklabel_cnx_{1+ncnx} = '';
ncnx = ncnx+1;
end;%for nl=0:n_skip_sml-1;
end;%if (nnormalization< n_normalization-1);
end;%for nnormalization=0:n_normalization-1;
if (nX< n_X-1);
for nl=0:n_skip_big-1;
prefix_cnx_{1+ncnx} = '';
ticklabel_cnx_{1+ncnx} = '';
ncnx = ncnx+1;
end;%for nl=0:n_skip_big-1;
end;%if (nX< n_X-1);
end;%for nX=0:n_X-1;
assert(ncnx==n_cnx);
%%%%%%%%;
markergene_correlation_A_cnx__ = -Inf*ones(n_label_A,n_cnx);
markergene_top01_A_cnx__ = -Inf*ones(n_label_A,n_cnx);
ncnx=0;
for nX=0:n_X-1;
for nnormalization=0:n_normalization-1;
n_X_GENE = n_X_GENE__{1+nX,1+nnormalization}(1+0);
n_top01 = ceil(n_X_GENE*0.01);
tmp_markergene_A_auz_0__ = markergene_A__{1+nX,1+nnormalization}{1+0};
[~,tmp_ij_0__] = sort(abs(tmp_markergene_A_auz_0__),1,'descend');
tmp_ij_0_top01__ = tmp_ij_0__(1:n_top01,:);
n_correction = n_correction__(1+nX,1+nnormalization);
for ncorrection=0:n_correction-1;
tmp_markergene_A_auz_1__ = markergene_A__{1+nX,1+nnormalization}{1+1*ncorrection};
if (numel(tmp_markergene_A_auz_0__)==numel(tmp_markergene_A_auz_1__));
tmp_C__ = corr(tmp_markergene_A_auz_0__,tmp_markergene_A_auz_1__);
markergene_correlation_A_cnx__(:,1+ncnx) = diag(tmp_C__);
[~,tmp_ij_1__] = sort(abs(tmp_markergene_A_auz_1__),1,'descend');
tmp_ij_1_top01__ = tmp_ij_1__(1:n_top01,:);
for nlabel_A=0:n_label_A-1;
markergene_top01_A_cnx__(1+nlabel_A,1+ncnx) = numel(intersect(tmp_ij_0_top01__(:,1+nlabel_A),tmp_ij_1_top01__(:,1+nlabel_A)))/n_top01;
end;%for nlabel_A=0:n_label_A-1;
end;%if (numel(tmp_markergene_A_auz_0__)==numel(tmp_markergene_A_auz_1__));
ncnx = ncnx+1;
end;%for ncorrection=0:n_correction-1;
if (nnormalization< n_normalization-1); ncnx = ncnx+n_skip_sml; end;
end;%for nnormalization=0:n_normalization-1;
if (nX< n_X-1); ncnx = ncnx+n_skip_big; end;
end;%for nX=0:n_X-1;
assert(ncnx==n_cnx);
%%%%%%%%;

fname_fig = sprintf('%s/test_loader_cluster_collect_14_markergene_A__',dir_jpg);
if (1 | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
%%%%%%%%;
figure(1);clf;
c_ = colormap_beach(); n_c = size(c_,1); c_(1,:) = [1,1,1]; colormap(c_);
subplot(1,2,1);
tmp_lim_ = [0,1]; tmp_min = min(tmp_lim_) + diff(tmp_lim_)/n_c;
tmp_ = markergene_correlation_A_cnx__(1+index_label_A_,:);
tmp_(find( isfinite(tmp_))) = max(tmp_min,tmp_(find( isfinite(tmp_))));
tmp_(find(~isfinite(tmp_))) = min(tmp_lim_);
imagesc(tmp_,tmp_lim_);colorbar;
set(gca,'YTick',1:n_label_A,'YTickLabel',u_label_A_(1+index_label_A_));
set(gca,'XTick',1:n_cnx,'XTickLabel',ticklabel_cnx_); xtickangle(90);
set(gca,'TickLength',[0,0]);
ylabel('AIBS sample cluster');
xlabel('data normalization+correction');
title('correlation');
set(gca,'FontSize',6);
axis image;
subplot(1,2,2);
tmp_lim_ = [0,1]; tmp_min = min(tmp_lim_) + diff(tmp_lim_)/n_c;
tmp_ = markergene_top01_A_cnx__(1+index_label_A_,:);
tmp_(find( isfinite(tmp_))) = max(tmp_min,tmp_(find( isfinite(tmp_))));
tmp_(find(~isfinite(tmp_))) = min(tmp_lim_);
imagesc(tmp_,tmp_lim_);colorbar;
set(gca,'YTick',1:n_label_A,'YTickLabel',u_label_A_(1+index_label_A_));
set(gca,'XTick',1:n_cnx,'XTickLabel',ticklabel_cnx_); xtickangle(90);
set(gca,'TickLength',[0,0]);
ylabel('AIBS sample cluster');
xlabel('data normalization+correction');
title('top01');
set(gca,'FontSize',6);
axis image;
figbig; set(gcf,'Color',[1,1,1]);
%%%%%%%%;
disp(sprintf(' %% writing %s',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));

%%%%%%%%;
% collect lpv_A_each_vs_B__. ; 
% ordering: ;
% Aa: [all , each(sorted) ]. ;
% cnx: ncorrection, nnormalization, nX ;
% zm: % nZ_index, nmethod ;
%%%%%%%%;

n_Z_index_max_ = zeros(n_method,1);
for nX=0:n_X-1;
for nnormalization=0:n_normalization-1;
n_Z_index_max_ = max(n_Z_index_max_,transpose(max(n_Z_index__{1+nX,1+nnormalization},[],1)));
end;%for nnormalization=0:n_normalization-1;
end;%for nX=0:n_X-1;
n_zm = sum(n_Z_index_max_);
prefix_zm_ = cell(n_zm,1);
%%%%%%%%;
nzm=0;
for nmethod=0:n_method-1;
n_Z_index = n_Z_index_max_(1+nmethod);
for nZ_index=0:n_Z_index-1;
if ( isempty(strfind(prefix_method_{1+nmethod},'dexcluster')));
prefix_zm = sprintf('%s (r%d)',prefix_method_{1+nmethod},1+nZ_index);
prefix_zm(strfind(prefix_zm,'_')) = ' ';
prefix_zm_{1+nzm} = prefix_zm;
end;%if ( isempty(strfind(prefix_method_{1+nmethod},'dexcluster')));
if (~isempty(strfind(prefix_method_{1+nmethod},'dexcluster'))); 
if (nZ_index==0); prefix_zm_{1+nzm} = sprintf('loop (pre)'); end;
if (nZ_index==1); prefix_zm_{1+nzm} = sprintf('loop (pos)'); end;
end;%if (~isempty(strfind(prefix_method_{1+nmethod},'dexcluster'))); 
nzm = nzm+1;
end;%for nZ_index=0:n_Z_index-1;
end;%for nmethod=0:n_method-1;
assert(nzm==n_zm);
%%%%%%%%;

n_cluster_cnx_zm__ = -Inf*ones(n_cnx,n_zm);
nlpv_A_vs_B_Aa_cnx_zm___ = -Inf*ones(n_label_A+1,n_cnx,n_zm);
ncnx=0;
for nX=0:n_X-1;
for nnormalization=0:n_normalization-1;
n_correction = n_correction__(1+nX,1+nnormalization);
for ncorrection=0:n_correction-1;
nzm=0;
for nmethod=0:n_method-1;
n_Z_index = n_Z_index_max_(1+nmethod);
for nZ_index=0:n_Z_index-1;
n_cluster_stage0_ = n_cluster_stage0__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod};
if (~isempty(n_cluster_stage0_));
n_cluster_cnx_zm__(1+ncnx,1+nzm) = n_cluster_stage0_(1+nZ_index);
end;%if (~isempty(n_cluster_stage0_));
tmp_lpv__ = lpv_A_each_vs_B__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod};
if (~isempty(tmp_lpv__)); nlpv_A_vs_B_Aa_cnx_zm___(1:n_label_A,1+ncnx,1+nzm) = -tmp_lpv__(1+index_label_A_,1+nZ_index); end;%if (~isempty(tmp_lpv__));
tmp_lpv_ = lpv_A_vs_B__{1+nX,1+nnormalization}{1+ncorrection,1+nmethod};
if (~isempty(tmp_lpv_)); nlpv_A_vs_B_Aa_cnx_zm___(1+n_label_A,1+ncnx,1+nzm) = -tmp_lpv_(1+nZ_index); end;%if (~isempty(tmp_lpv_));
nzm = nzm+1;
end;%for nZ_index=0:n_Z_index-1;
end;%for nmethod=0:n_method-1;
ncnx = ncnx+1;
end;%for ncorrection=0:n_correction-1;
if (nnormalization< n_normalization-1); ncnx = ncnx+n_skip_sml; end;
end;%for nnormalization=0:n_normalization-1;
if (nX< n_X-1); ncnx = ncnx+n_skip_big; end;
end;%for nX=0:n_X-1;
assert(nzm==n_zm);
assert(ncnx==n_cnx);
%%%%%%%%;
ticklabel_Aa_ = u_label_A_(1+index_label_A_);
ticklabel_Aa_{n_label_A+1} = 'all';

fname_fig = sprintf('%s/test_loader_cluster_collect_14_lpv_A_each_vs_B__',dir_jpg);
if (1 | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
%%%%%%%%;
figure(1);clf;
c_ = colormap(1-colormap('hot')); n_c = size(c_,1); c_(1,:) = [1,1,1]; colormap(c_);
%c_ = colormap('hot'); n_c = size(c_,1); c_(1,:) = [1,1,1]; colormap(c_);
np=0;n_prows=3;n_pcols=5;
for nzm=0:n_zm-1;
subplot(n_prows,n_pcols,1+np); cla;
tmp_lim_ = [0,2e2]; tmp_min = min(tmp_lim_) + diff(tmp_lim_)/n_c;
tmp_ = nlpv_A_vs_B_Aa_cnx_zm___(:,:,1+nzm);
tmp_(find( isfinite(tmp_))) = max(tmp_min,tmp_(find( isfinite(tmp_))));
tmp_(find(~isfinite(tmp_))) = min(tmp_lim_);
imagesc(tmp_,tmp_lim_);colorbar;
set(gca,'YTick',1:n_label_A+1,'YTickLabel',ticklabel_Aa_);
set(gca,'XTick',1:n_cnx,'XTickLabel',ticklabel_cnx_); xtickangle(90);
set(gca,'TickLength',[0,0]);
ylabel('AIBS sample cluster');
xlabel('data normalization+correction');
title(sprintf('%s',prefix_zm_{1+nzm}),'Interpreter','none');
set(gca,'FontSize',6);
axis image;
np = np+1;
end;%for nzm=0:n_zm-1;
figbig;
%%%%%%%%;
disp(sprintf(' %% writing %s',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));

%{
%%%%%%%%;
% compare dex with all. ;
%%%%%%%%;
figure(1);clf;
tmp_lim_ = [0,6];%tmp_lim_ = [0,2e2];
tmp_min = min(tmp_lim_) + diff(tmp_lim_)/n_c;
c_ = colormap(1-colormap('hot')); n_c = size(c_,1); c_(1,:) = 0.85*[1,1,1]; colormap(c_);
subplot(1,2,1);
nzm=n_zm-1;
tmp_ = nlpv_A_vs_B_Aa_cnx_zm___(:,:,1+nzm) - log(n_label_A);
tmp_(find( isfinite(tmp_))) = max(tmp_min,tmp_(find( isfinite(tmp_))));
tmp_(find(~isfinite(tmp_))) = min(tmp_lim_);
imagesc(tmp_,tmp_lim_);colorbar;
set(gca,'YTick',1:n_label_A+1,'YTickLabel',ticklabel_Aa_);
set(gca,'XTick',1:n_cnx,'XTickLabel',ticklabel_cnx_); xtickangle(90);
set(gca,'TickLength',[0,0]);
ylabel('AIBS sample cluster');
xlabel('data normalization+correction');
title(sprintf('%s',prefix_zm_{1+nzm}),'Interpreter','none');
set(gca,'FontSize',6);
%axis image;
subplot(1,2,2);
tmp_ = max(nlpv_A_vs_B_Aa_cnx_zm___(:,:,1+[0:n_zm-1]),[],3) - log(n_label_A) - log(n_zm);
tmp_(find( isfinite(tmp_))) = max(tmp_min,tmp_(find( isfinite(tmp_))));
tmp_(find(~isfinite(tmp_))) = min(tmp_lim_);
imagesc(tmp_,tmp_lim_);colorbar;
set(gca,'YTick',1:n_label_A+1,'YTickLabel',ticklabel_Aa_);
set(gca,'XTick',1:n_cnx,'XTickLabel',ticklabel_cnx_); xtickangle(90);
set(gca,'TickLength',[0,0]);
ylabel('AIBS sample cluster');
xlabel('data normalization+correction');
title(sprintf('best'));
set(gca,'FontSize',6);
%axis image;
figbig;
set(gcf,'Color',0.85*[1,1,1]);
%}

symbol_zm_ = cell(n_zm,1);
msize_zm_ = zeros(n_zm,1);
nzm=0;
symbol_zm_{1+nzm} = 'ro'; msize_zm_(1+nzm) = 15; nzm=nzm+1;
symbol_zm_{1+nzm} = 'rx'; msize_zm_(1+nzm) = 15; nzm=nzm+1;
symbol_zm_{1+nzm} = 'r^'; msize_zm_(1+nzm) = 15; nzm=nzm+1;
symbol_zm_{1+nzm} = 'rs'; msize_zm_(1+nzm) = 15; nzm=nzm+1;
symbol_zm_{1+nzm} = 'r*'; msize_zm_(1+nzm) = 15; nzm=nzm+1;
symbol_zm_{1+nzm} = 'rh'; msize_zm_(1+nzm) = 15; nzm=nzm+1;
symbol_zm_{1+nzm} = 'co'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
symbol_zm_{1+nzm} = 'cx'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
symbol_zm_{1+nzm} = 'bo'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
symbol_zm_{1+nzm} = 'bx'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
symbol_zm_{1+nzm} = 'kx'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
symbol_zm_{1+nzm} = 'ko'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
symbol_zm_{1+nzm} = 'k^'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
symbol_zm_{1+nzm} = 'mo'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
symbol_zm_{1+nzm} = 'ms'; msize_zm_(1+nzm) = 10; nzm=nzm+1;
assert(nzm==n_zm);

fname_fig = sprintf('%s/test_loader_cluster_collect_14_n_cluster__',dir_jpg);
if (1 | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
%%%%%%%%;
figure(1);clf;
subplot(2,3,1); cla;
hold on;
for nzm=0:n_zm-1;
plot(1:n_cnx,reshape(nlpv_A_vs_B_Aa_cnx_zm___(n_label_A+1,:,1+nzm),[n_cnx,1]),symbol_zm_{1+nzm},'MarkerSize',msize_zm_(1+nzm));
end;%for nzm=0:n_zm-1;
hold off;
set(gca,'XTick',1:n_cnx,'XTickLabel',ticklabel_cnx_); xtickangle(90);
xlabel('data normalization+correction');
ylabel('log(p)');
set(gca,'TickLength',[0,0]);
%legend(prefix_zm_);
title(sprintf('log(p)'));
set(gca,'FontSize',6);
subplot(2,3,4); cla;
hold on;
for nzm=0:n_zm-1;
plot(1:n_cnx,reshape(n_cluster_cnx_zm__(:,1+nzm),[n_cnx,1]),symbol_zm_{1+nzm},'MarkerSize',msize_zm_(1+nzm));
end;%for nzm=0:n_zm-1;
hold off;
set(gca,'XTick',1:n_cnx,'XTickLabel',ticklabel_cnx_); xtickangle(90);
xlabel('data normalization+correction');
ylabel('# clusters');
set(gca,'TickLength',[0,0]);
%legend(prefix_zm_);
title(sprintf('# clusters'));
set(gca,'FontSize',6);
subplot(2,3,[2,3,5,6]); cla;
hold on;
for nzm=0:n_zm-1;
tmp_index_ = efind(~cellfun(@isempty,strfind(prefix_cnx_,'liXf')));
tmp_n_cnx = numel(tmp_index_);
plot( ...
 reshape(n_cluster_cnx_zm__(1+tmp_index_,1+nzm),[tmp_n_cnx,1]) ...
,reshape(nlpv_A_vs_B_Aa_cnx_zm___(n_label_A+1,1+tmp_index_,1+nzm),[tmp_n_cnx,1]) ...
,symbol_zm_{1+nzm},'MarkerSize',msize_zm_(1+nzm) ...
);
end;%for nzm=0:n_zm-1;
hold off;
xlabel('# clusters');
ylabel('log(p)');
%legend(prefix_zm_);
title(sprintf('scatterplot (liXf)'));
set(gca,'FontSize',6);
figbig;
%%%%%%%%;
disp(sprintf(' %% writing %s',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));

fname_fig = sprintf('%s/test_loader_cluster_collect_14_markergene_A_vs_c127__',dir_jpg);
if (1 | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
%%%%%%%%;
figure(1);clf;
nnormalization=0;
ncorrection_0 = 0;
ncorrection_1 = 1;
figbeach();
np=0;
for nX=0:n_X-1;
%%%%%%%%;
tmp_markergene_A_auz_0__ = markergene_A__{1+nX,1+nnormalization}{1+ncorrection_0};
tmp_markergene_A_auz_1__ = markergene_A__{1+nX,1+nnormalization}{1+ncorrection_1};
n_X_GENE = n_X_GENE__{1+nX,1+nnormalization}(1+0);
n_top01 = ceil(n_X_GENE*0.01);
tmp_r_rem_ = transpose(flip(unique([n_top01:n_top01:n_X_GENE,n_X_GENE])));
fr_ = tmp_r_rem_/n_X_GENE; n_fr = numel(fr_);
r_fr__ = zeros(n_label_A,n_fr);
r_nlpv__ = zeros(n_label_A,n_fr);
for nlabel_A=0:n_label_A-1;
[~,tmp_rdrop_0_] = sort(abs(tmp_markergene_A_auz_0__(:,1+nlabel_A)),'ascend');
[~,tmp_rdrop_1_] = sort(abs(tmp_markergene_A_auz_1__(:,1+nlabel_A)),'ascend');
[tmp_r_fr__,tmp_r_pv__,tmp_r_rtn__,tmp_r_mu__,tmp_r_sg__] = cumulative_intersect_general(tmp_r_rem_,tmp_rdrop_0_,tmp_r_rem_,tmp_rdrop_1_);
tmp_r_nlpv__ = -0.5*erfcln((tmp_r_rtn__ - tmp_r_mu__)./(sqrt(2) * tmp_r_sg__));
r_fr__(1+nlabel_A,:) = diag(tmp_r_fr__);
r_nlpv__(1+nlabel_A,:) = diag(tmp_r_nlpv__);
end;%for nlabel_A=0:n_label_A-1;
subplot(1,3,1+np+0*3);
imagesc(r_fr__(1+index_label_A_,:) - ones(n_label_A,1)*transpose(fr_.^2),[0,1]); colorbar;
set(gca,'XTick',round(linspace(1,n_fr,11)),'XTickLabel',100:-10:0); xlabel('% remaining');
set(gca,'YTick',1:n_label_A,'YTickLabel',u_label_A_(1+index_label_A_)); ylabel('AIBS sample cluster');
title(sprintf('%s %s fr',str_X_{1+nX},prefix_normalization_{1+nnormalization}),'Interpreter','none');
set(gca,'FontSize',6);
%{
  subplot(2,3,1+np+1*3);
  imagesc(real(log(r_nlpv__(1+index_label_A_,:))),[0,9]); colorbar;
  set(gca,'XTick',round(linspace(1,n_fr,11)),'XTickLabel',100:-10:0); xlabel('% remaining');
  set(gca,'YTick',1:n_label_A,'YTickLabel',u_label_A_(1+index_label_A_)); ylabel('AIBS sample cluster');
  title(sprintf('%s %s nlpv',str_X_{1+nX},prefix_normalization_{1+nnormalization}),'Interpreter','none');
  set(gca,'FontSize',6);
  %}
np=np+1;
%%%%%%%%;
end;%for nX=0:n_X-1;
figbig;
%%%%%%%%;
disp(sprintf(' %% writing %s',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));

%%%%%%%%;
% plot A_each_vs_B_each for E_liXf_ and E_liXf_c127_. ;
%%%%%%%%;

str_X = 'E';
prefix_normalization = 'liXf';
prefix_correction = '';
nX = efind(strcmp(str_X_,str_X)); %<-- E, I or EI. ;
nnormalization = efind(strcmp(prefix_normalization_,prefix_normalization)); %<-- liXf, liXf_clogr or fill. ;
n_correction = n_correction__(1+nX,1+nnormalization);
prefix_correction_ = prefix_correction__{1+nX,1+nnormalization};
ncorrection=0;
if (~isempty(prefix_correction)); ncorrection = efind(strcmp(prefix_correction_,prefix_correction)); end;
prefix_cnx = sprintf('%s_%s',str_X,prefix_normalization);
if (ncorrection> 0); prefix_cnx = sprintf('%s_%s_%s',str_X,prefix_normalization,prefix_correction); end;
nmethod = efind(~cellfun(@isempty,strfind(prefix_method_,'dex'))); %<-- loop. ;
nZ_index = 1; %<-- pos. ;
ncnx = efind(strcmp(prefix_cnx_,prefix_cnx));
assert(strcmp(prefix_cnx_{1+ncnx},prefix_cnx));
nzm = efind(strcmp(prefix_zm_,'loop (pos)')); %<-- loop;
str_tmp = sprintf('%s_%s',prefix_cnx_{1+ncnx},'loop');
fname_fig = sprintf('%s/test_loader_cluster_collect_14_%s',dir_jpg,str_tmp);
n_X_GENE = n_X_GENE__{1+nX,1+nnormalization}(1+ncorrection);
if (numel(prefix_correction)==0); tmp_dir_cluster = sprintf('%s/dir_%s_%s_cluster',dir_cluster,str_X,prefix_normalization); end;
if (numel(prefix_correction)> 0); tmp_dir_cluster = sprintf('%s/dir_%s_%s_%s_cluster',dir_cluster,str_X,prefix_normalization,prefix_correction); end;
%%%%%%%%;
gamma = 0.01; n_shuffle = 64; p_set = 0.05; n_member_lob = 3; flag_force_create_mat = 0;
gamma_d = floor(gamma*1000); str_g = sprintf('_g%.3d',gamma_d);
p_set_d = floor(p_set*1000); str_p = sprintf('_p%.3d',p_set_d);
str_nml = sprintf('_nml%d',n_member_lob);
str_xfix = sprintf('dexcluster_nonbinary_trace_ZRimax%s%s%s',str_g,str_p,str_nml);
prefix_base = sprintf('tmp_%s',str_xfix); 
dir_out = []; E_array_base_ = zeros(n_u,n_X_GENE); E_array_r_ij_ = []; E_array_c_ij_ = [];
[ ...
 ZRimax_output_label_ ...
,ZRimax_lpFmax_label_ ...
] = ...
test_loader_dexcluster_nonbinary_trace_ZRimax_recursive_3( ...
 tmp_dir_cluster ...
,dir_out ...
,prefix_base ...
,E_array_base_ ...
,E_array_r_ij_ ...
,E_array_c_ij_ ...
,gamma ...
,n_shuffle ...
,p_set ...
,n_member_lob ...
,flag_force_create_mat ...
);
label_B_ = label_str_to_enum_0(ZRimax_output_label_); 
%%%%%%%%;
figure(1);
label_plot_recursive_0(ZRimax_output_label_,ZRimax_lpFmax_label_,[]);
figbig;
print('-depsc',sprintf('%s_FIGA.eps',fname_fig));
print('-djpeg',sprintf('%s_FIGA.jpg',fname_fig));
close(gcf);
%%%%%%%%;
u_label_B_ = unique(label_B_);
n_label_B = length(u_label_B_);
label_B_each__ = zeros(n_u,n_label_B);
for nlabel_B=0:n_label_B-1;
label_B_each__(:,1+nlabel_B) = zeros(n_u,1);
tmp_index_ = efind(label_B_==u_label_B_(1+nlabel_B));
label_B_each__(1+tmp_index_,1+nlabel_B) = 1;
end;%for nlabel_B=0:n_label_B-1;
%%%%%%%%;
[tmp_lP0,tmp_cap_] = label_to_label_enrichment_lP0(label_A_,label_B_);
%%%%%%%%;
nlpv_each__ = zeros(n_label_A,n_label_B);
for nlabel_A=0:n_label_A-1;
for nlabel_B=0:n_label_B-1;
nlpv_each__(1+nlabel_A,1+nlabel_B) = -label_pair_enrichment(label_A_each__(:,1+nlabel_A),label_B_each__(:,1+nlabel_B));
end;%for nlabel_B=0:n_label_B-1;
end;%for nlabel_A=0:n_label_A-1;
nlpv_each_bonf__ = max(0,nlpv_each__ - log(n_label_A) - log(n_label_B));
%%%%%%%%;
%{
tmp_index_label_B_ = 0:n_label_B-1;
index_label_B_ = zeros(n_label_B,1);
for nlabel_A=0:min(n_label_A,n_label_B)-1;
[~,tmp_index] = max(nlpv_each__(1+index_label_A_(1+nlabel_A),1+tmp_index_label_B_)); tmp_index = tmp_index - 1;
index_label_B_(1+nlabel_A) = tmp_index_label_B_(1+tmp_index);
tmp_index_label_B_ = setdiff(tmp_index_label_B_,index_label_B_(1+nlabel_A));
end;%for nlabel_A=0:min(n_label_A,n_label_B)-1;
%}
%%%%%%%%;
tmp_tab__ = nlpv_each_bonf__(1+index_label_A_,:)>=3;
tmp_index_ = efind(sum(tmp_tab__,1));
[~,tmp_max_ij_] = max(nlpv_each_bonf__(1+index_label_A_,1+tmp_index_),[],1);
[~,index_label_B_] = sort(tmp_max_ij_,'ascend');
index_label_B_ = index_label_B_ - 1;
index_label_B_ = tmp_index_(1+index_label_B_);
index_label_B_ = [index_label_B_,setdiff([0:n_label_B-1],index_label_B_)];
%%%%%%%%;
figure(2);clf;
figbeach;
subplot(1,2,1);
imagesc(tmp_cap_(1+index_label_A_,1+index_label_B_),[0,100]); colorbar;
set(gca,'YTick',1:n_label_A,'YTickLabel',u_label_A_(1+index_label_A_)); %xtickangle(90);
set(gca,'XTick',1:n_label_B,'XTickLabel',u_label_B_(1+index_label_B_)); xtickangle(90);
title('cap');
subplot(1,2,2);
%imagesc(nlpv_each_bonf__(1+index_label_A_,1+index_label_B_),[0,9]); colorbar;
imagesc(nlpv_each__(1+index_label_A_,1+index_label_B_),[0,9]); colorbar;
set(gca,'YTick',1:n_label_A,'YTickLabel',u_label_A_(1+index_label_A_)); %xtickangle(90);
set(gca,'XTick',1:n_label_B,'XTickLabel',u_label_B_(1+index_label_B_)); xtickangle(90);
colorbar;
title('nlpv');
sgtitle(sprintf('%s',str_tmp),'Interpreter','none');
figbig;
print('-depsc',sprintf('%s_FIGB.eps',fname_fig));
print('-djpeg',sprintf('%s_FIGB.jpg',fname_fig));
close(gcf);

