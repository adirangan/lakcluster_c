function test_dexcluster_1(M,N,gamma,X,mu,n_rank,n_iteration,n_shuffle,flag_rerun);
%{

  M = 178; N = 1e3; gamma = 0.01; n_rank = 6; n_iteration = 256; n_shuffle = 256; flag_rerun = 0;
  M = 1781; N = 2e4; gamma = 0.01; n_rank = 6; n_iteration = 32; n_shuffle = 256; flag_rerun = 0;
  X_ = linspace(0.50,0.65,7); mu_ = linspace(0.0,1.0,11);
  p_X_ = randperm(length(X_)); p_mu_ = randperm(length(mu_));
  for nX=1:length(X_); for nmu=1:length(mu_);
  X = X_(p_X_(nX)); mu = mu_(p_mu_(nmu));
  test_dexcluster_1(M,N,gamma,X,mu,n_rank,n_iteration,n_shuffle,flag_rerun);
  end;end;%for nX=1:length(X_); for nmu=1:length(mu_);

  %M = 178; N = 1e3; gamma = 0.01; n_rank = 6; n_iteration = 256; n_shuffle = 256;
  M = 1781; N = 2e4; gamma = 0.01; n_rank = 6; n_iteration = 32; n_shuffle = 256; flag_rerun = 0;
  str_fig_M_N_g = sprintf('./dir_jpg/dextest1_M%d_N%d_g%0.3d',M,N,floor(gamma*1000));
  X_ = linspace(0.50,0.65,7); mu_ = linspace(0.0,1.0,11);
  snr__ = zeros(length(X_),length(mu_));
  Auc_s_avg__ = 0.5*ones(length(X_),length(mu_));
  Auc_label_s__ = 0.5*ones(length(X_),length(mu_));
  Auc_label_si___ = 0.5*ones(length(X_),length(mu_),n_rank);
  Auc_label_sk___ = 0.5*ones(length(X_),length(mu_),n_rank);
  Auc_label_ti___ = 0.5*ones(length(X_),length(mu_),min(2,n_rank));
  Auc_label_tk___ = 0.5*ones(length(X_),length(mu_),min(2,n_rank));
  Auc_m_avg__ = 0.5*ones(length(X_),length(mu_));
  Auc_label_m__ = 0.5*ones(length(X_),length(mu_));
  Auc_label_mi___ = 0.5*ones(length(X_),length(mu_),n_rank);
  Auc_label_mk___ = 0.5*ones(length(X_),length(mu_),n_rank);
  for nX=1:length(X_); for nmu=1:length(mu_);
  X = X_(nX); mu = mu_(nmu);
  MX = ceil(M^X); NX = ceil(N^X);
  snr__(nX,nmu) = sqrt(MX*NX)*mu/sqrt(N);
  str_xfix = test_dexcluster_xfix_0('dextest1',M,N,gamma,X,mu);
  str_mat = sprintf('./dir_mat/%s.mat',str_xfix);
  if ( exist(str_mat,'file'));
  tmp_ = load(str_mat,'M','N','gamma','X','mu','n_rank','n_iteration','n_shuffle','Auc_s_avg_','Auc_label_s_','Auc_label_si__','Auc_label_sk__','Auc_label_ti__','Auc_label_tk__','Auc_m_avg_','Auc_label_m_','Auc_label_mi__','Auc_label_mk__');
  Auc_s_avg__(nX,nmu) = mean(tmp_.Auc_s_avg_);
  Auc_label_s__(nX,nmu) = mean(tmp_.Auc_label_s_);
  Auc_label_si___(nX,nmu,:) = mean(tmp_.Auc_label_si__,1);
  Auc_label_sk___(nX,nmu,:) = mean(tmp_.Auc_label_sk__,1);
  Auc_label_ti___(nX,nmu,:) = mean(tmp_.Auc_label_ti__,1);
  Auc_label_tk___(nX,nmu,:) = mean(tmp_.Auc_label_tk__,1);
  Auc_m_avg__(nX,nmu) = mean(tmp_.Auc_m_avg_);
  Auc_label_m__(nX,nmu) = mean(tmp_.Auc_label_m_);
  Auc_label_mi___(nX,nmu,:) = mean(tmp_.Auc_label_mi__,1);
  Auc_label_mk___(nX,nmu,:) = mean(tmp_.Auc_label_mk__,1);
  clear tmp_ ;
  end;%if ( exist(str_mat,'file'));
  end;end;%for nX=1:length(X_); for nmu=1:length(mu_);

  figure(1);clf;
  subplot(1,1,1);hold on;
  tmp_l = numel(snr__);
  Msize = 10;
  plot(snr__(:),Auc_label_m__(:),'ko','MarkerSize',Msize,'MarkerFaceColor','m');
  plot(snr__(:),Auc_label_s__(:),'ko','MarkerSize',Msize,'MarkerFaceColor','r');
  nrank = 1; plot(snr__(:),reshape(Auc_label_sk___(:,:,nrank),tmp_l,1),'ko','MarkerSize',Msize,'MarkerFaceColor','g');
  nrank = 1; plot(snr__(:),reshape(Auc_label_si___(:,:,nrank),tmp_l,1),'kh','MarkerSize',Msize,'MarkerFaceColor','g');
  nrank = 2; plot(snr__(:),reshape(Auc_label_tk___(:,:,nrank),tmp_l,1),'ks','MarkerSize',Msize,'MarkerFaceColor','c');
  nrank = 2; plot(snr__(:),reshape(Auc_label_ti___(:,:,nrank),tmp_l,1),'kh','MarkerSize',Msize,'MarkerFaceColor','c');
  xlim([min(snr__(:)),max(snr__(:))]); ylim([0.45,1.05]);
  xlabel('snr (i.e,. signal)'); ylabel('Auc (i.e., recovery)');
  legend({'loop','pca1->sort','pca1->kmeans2','pca1->isosplit','tsne->kmeans2','tsne->isosplit'},'Location','NorthWest');
  figbig;
  title(sprintf('Comparison of clustering algorithms; Random matrix of size M %d N %d with single planted cluster embedded within',M,N));
  disp(sprintf(' %% writing %s',sprintf('%s_B1.jpg',str_fig_M_N_g)));
  print('-depsc',sprintf('%s_B1.eps',str_fig_M_N_g));
  print('-djpeg',sprintf('%s_B1.jpg',str_fig_M_N_g));

  figure(1);clf;
  subplot(1,1,1);hold on;
  tmp_l = numel(snr__);
  Msize = 10;
  plot(snr__(:),Auc_label_m__(:),'ko','MarkerSize',Msize,'MarkerFaceColor','m');
  %plot(snr__(:),Auc_label_s__(:),'ko','MarkerSize',Msize,'MarkerFaceColor','r');
  nrank = 1; plot(snr__(:),reshape(Auc_label_sk___(:,:,nrank),tmp_l,1),'ko','MarkerSize',Msize,'MarkerFaceColor','g');
  nrank = 2; plot(snr__(:),reshape(Auc_label_sk___(:,:,nrank),tmp_l,1),'kd','MarkerSize',Msize,'MarkerFaceColor','g');
  nrank = 3; plot(snr__(:),reshape(Auc_label_sk___(:,:,nrank),tmp_l,1),'k^','MarkerSize',Msize,'MarkerFaceColor','g');
  nrank = 4; plot(snr__(:),reshape(Auc_label_sk___(:,:,nrank),tmp_l,1),'ks','MarkerSize',Msize,'MarkerFaceColor','g');
  nrank = 5; plot(snr__(:),reshape(Auc_label_sk___(:,:,nrank),tmp_l,1),'kp','MarkerSize',Msize,'MarkerFaceColor','g');
  nrank = 6; plot(snr__(:),reshape(Auc_label_sk___(:,:,nrank),tmp_l,1),'kh','MarkerSize',Msize,'MarkerFaceColor','g');
  %nrank = 1; plot(snr__(:),reshape(Auc_label_si___(:,:,nrank),tmp_l,1),'kx','MarkerSize',Msize,'MarkerFaceColor','g');
  %nrank = 2; plot(snr__(:),reshape(Auc_label_tk___(:,:,nrank),tmp_l,1),'ks','MarkerSize',Msize,'MarkerFaceColor','c');
  %nrank = 2; plot(snr__(:),reshape(Auc_label_ti___(:,:,nrank),tmp_l,1),'kh','MarkerSize',Msize,'MarkerFaceColor','c');
  xlim([min(snr__(:)),max(snr__(:))]); ylim([0.45,1.05]);
  xlabel('snr (i.e,. signal)'); ylabel('Auc (i.e., recovery)');
  legend({'loop','pca1->kmeans2','pca2->kmeans2','pca3->kmeans2','pca4->kmeans2','pca5->kmeans2','pca6->kmeans2'},'Location','NorthWest');
  figbig;
  title(sprintf('Comparison of clustering algorithms; Random matrix of size M %d N %d with single planted cluster embedded within',M,N));
  disp(sprintf(' %% writing %s',sprintf('%s_B2.jpg',str_fig_M_N_g)));
  print('-depsc',sprintf('%s_B2.eps',str_fig_M_N_g));
  print('-djpeg',sprintf('%s_B2.jpg',str_fig_M_N_g));



  %%%%%%%%;
  figure(1); clf;
  colormap(colormap_beach());
  nrank = 2;
  subplot(3,3,1); imagesc(Auc_s_avg__,[0.5,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('Auc_s_avg'),'Interpreter','none');
  colorbar;
  subplot(3,3,2); imagesc(Auc_m_avg__,[0.5,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('Auc_m_avg'),'Interpreter','none');
  colorbar;
  subplot(3,3,3); imagesc(Auc_m_avg__-Auc_s_avg__,0.2*[-1,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('Auc_m_avg-Auc_s_avg'),'Interpreter','none');
  colorbar;
  subplot(3,3,4); imagesc(Auc_label_si___(:,:,nrank),[0.5,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('Auc_label_si_(rank %d)',nrank),'Interpreter','none');
  colorbar;
  subplot(3,3,5); imagesc(Auc_label_mi___(:,:,nrank),[0.5,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('Auc_label_mi_(rank %d)',nrank),'Interpreter','none');
  colorbar;
  subplot(3,3,6); imagesc(Auc_label_mi___(:,:,nrank)-Auc_label_si___(:,:,nrank),0.2*[-1,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('[Auc_label_mi_-Auc_label_si_](rank %d)',nrank),'Interpreter','none');  
  colorbar;
  subplot(3,3,7); imagesc(Auc_label_sk___(:,:,nrank),[0.5,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('Auc_label_sk_(rank %d)',nrank),'Interpreter','none');
  colorbar;
  subplot(3,3,8); imagesc(Auc_label_mk___(:,:,nrank),[0.5,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('Auc_label_mk_(rank %d)',nrank),'Interpreter','none');
  colorbar;
  subplot(3,3,9); imagesc(Auc_label_mk___(:,:,nrank)-Auc_label_sk___(:,:,nrank),0.2*[-1,1]);
  set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  xlabel('mu'); ylabel('X'); axis image; title(sprintf('[Auc_label_mk_-Auc_label_sk_](rank %d)',nrank),'Interpreter','none');  
  colorbar;
  figbig;
  disp(sprintf(' %% writing %s',sprintf('%s_A.jpg',str_fig_M_N_g)));
  print('-depsc',sprintf('%s_A.eps',str_fig_M_N_g));
  print('-djpeg',sprintf('%s_A.jpg',str_fig_M_N_g));
  %%%%%%%%;
  figure(1); clf;
  colormap(colormap_beach());
  for nrank=1:n_rank;
  subplot(n_rank,6,1 + (nrank-1)*6);
  imagesc(Auc_label_si___(:,:,nrank),[0.5,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('Auc_label_si_(rank %d)',nrank),'Interpreter','none');
  %colorbar;
  subplot(n_rank,6,2 + (nrank-1)*6);
  imagesc(Auc_label_mi___(:,:,nrank),[0.5,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('Auc_label_mi_(rank %d)',nrank),'Interpreter','none');
  %colorbar;
  subplot(n_rank,6,3 + (nrank-1)*6);
  imagesc(Auc_label_mi___(:,:,nrank)-Auc_label_si___(:,:,nrank),0.2*[-1,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('[Auc_label_mi_-Auc_label_si_](rank %d)',nrank),'Interpreter','none');  
  %colorbar;
  subplot(n_rank,6,4 + (nrank-1)*6);
  imagesc(Auc_label_sk___(:,:,nrank),[0.5,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('Auc_label_sk_(rank %d)',nrank),'Interpreter','none');
  %colorbar;
  subplot(n_rank,6,5 + (nrank-1)*6);
  imagesc(Auc_label_mk___(:,:,nrank),[0.5,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('Auc_label_mk_(rank %d)',nrank),'Interpreter','none');
  %colorbar;
  subplot(n_rank,6,6 + (nrank-1)*6);
  imagesc(Auc_label_mk___(:,:,nrank)-Auc_label_sk___(:,:,nrank),0.2*[-1,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('[Auc_label_mk_-Auc_label_sk_](rank %d)',nrank),'Interpreter','none');  
  %colorbar;
  end;%for nrank=1:n_rank;
  figbig;
  disp(sprintf(' %% writing %s',sprintf('%s_xy.jpg',str_fig_M_N_g)));
  print('-depsc',sprintf('%s_xy.eps',str_fig_M_N_g));
  print('-djpeg',sprintf('%s_xy.jpg',str_fig_M_N_g));
  %%%%%%%%;
  figure(1); clf;
  colormap(colormap_beach());
  for nrank=1:min(2,n_rank);
  subplot(min(2,n_rank),3,1 + (nrank-1)*3);
  imagesc(Auc_label_ti___(:,:,nrank),[0.5,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('Auc_label_ti_(rank %d)',nrank),'Interpreter','none');
  %colorbar;
  subplot(min(2,n_rank),3,2 + (nrank-1)*3);
  imagesc(Auc_label_tk___(:,:,nrank),[0.5,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('Auc_label_tk_(rank %d)',nrank),'Interpreter','none');
  %colorbar;
  subplot(min(2,n_rank),3,3 + (nrank-1)*3);
  imagesc(Auc_label_ti___(:,:,nrank)-Auc_label_tk___(:,:,nrank),0.2*[-1,1]);
  set(gca,'XTick',[],'YTick',[]);
  %set(gca,'YTick',1:length(X_),'YTickLabel',X_,'XTick',1:length(mu_),'XTickLabel',mu_); 
  %xlabel('mu'); ylabel('X'); 
  axis image; title(sprintf('[Auc_label_ti_-Auc_label_tk_](rank %d)',nrank),'Interpreter','none');  
  %colorbar;
  end;%for nrank=1:min(2,n_rank);
  figbig;
  disp(sprintf(' %% writing %s',sprintf('%s_ty.jpg',str_fig_M_N_g)));
  print('-depsc',sprintf('%s_ty.eps',str_fig_M_N_g));
  print('-djpeg',sprintf('%s_ty.jpg',str_fig_M_N_g));
  %%%%%%%%;

  %}

setup();
str_xfix = test_dexcluster_xfix_0('dextest1',M,N,gamma,X,mu);
str_mat = sprintf('./dir_mat/%s.mat',str_xfix);
if  ( exist(str_mat,'file') & flag_rerun==0); 
disp(sprintf(' %% %s found, not creating',str_mat));
end;%if  ( exist(str_mat,'file') & flag_rerun==0); 
if (~exist(str_mat,'file') | flag_rerun>0); 
disp(sprintf(' %% %s not found, creating',str_mat));
%%%%%%%%;
rng(1);
%M=178; N=1e3; gamma = 0.01; X = 0.65; mu = 0.85;
%M=178; N=1e3; gamma = 0.01; X = 0.55; mu = 0.65;
%n_rank = 6;
%n_iteration = 128;
MX = ceil(M^X); NX = ceil(N^X); 
%%%%%%%%;
% Permutation tests for spectral and dexcluster. ;
%%%%%%%%;
%n_shuffle = 128;
%%%%%%%%;
Z_sub_ = transpose([1:M].^2 - [1:M]) * ([1:N]) ;
str_rand_mat = sprintf('./dir_mat/dextest1_M%d_N%d_g%0.3d.mat',M,N,floor(gamma*1000));
if (~exist(str_rand_mat,'file') | flag_rerun>1);
disp(sprintf(' %% %s not found, creating',str_rand_mat));
Q_n_s_rand_avg_ = zeros(M,N); Q_n_s_rand_std_ = zeros(M,N);
QR_m_rand_avg_ = []; QR_m_rand_std_ = [];
for nshuffle=1:n_shuffle;
A_n_rand_ = randn(M,N);
[tmp_U_rand_,tmp_S_rand_,tmp_V_rand_] = svds(A_n_rand_,1);
[~,tmp_U_ij_rand_] = sort(abs(tmp_U_rand_(:,1)),'descend'); [~,tmp_V_ij_rand_] = sort(abs(tmp_V_rand_(:,1)),'descend');
rkeep_s_rand_ = tmp_U_ij_rand_; ckeep_s_rand_ = tmp_V_ij_rand_;
[tmp_Q_n_s_rand_] = dexcluster_nonbinary_AAAA_scorebox_ver0(A_n_rand_(rkeep_s_rand_,ckeep_s_rand_))./Z_sub_;
Q_n_s_rand_avg_ = Q_n_s_rand_avg_ + tmp_Q_n_s_rand_;
Q_n_s_rand_std_ = Q_n_s_rand_std_ + tmp_Q_n_s_rand_.^2;
[~,tmp_trace_] = dexcluster_nonbinary_AAAA_ver0(A_n_rand_,gamma);
tmp_QR_m_rand_ = tmp_trace_(:,4);
if (isempty(QR_m_rand_avg_)); QR_m_rand_avg_ = zeros(size(tmp_QR_m_rand_)); end;
if (isempty(QR_m_rand_std_)); QR_m_rand_std_ = zeros(size(tmp_QR_m_rand_)); end;
QR_m_rand_avg_ = QR_m_rand_avg_ + tmp_QR_m_rand_;
QR_m_rand_std_ = QR_m_rand_std_ + tmp_QR_m_rand_.^2;
end;%for nshuffle=1:n_shuffle;
clear A_n_rand_ tmp_Q_n_s_rand_;
Q_n_s_rand_avg_ = Q_n_s_rand_avg_/n_shuffle;
Q_n_s_rand_std_ = sqrt(Q_n_s_rand_std_/n_shuffle - Q_n_s_rand_avg_.^2);
QR_m_rand_avg_ = QR_m_rand_avg_/n_shuffle;
QR_m_rand_std_ = sqrt(QR_m_rand_std_/n_shuffle - QR_m_rand_avg_.^2);
save(str_rand_mat,'Q_n_s_rand_avg_','Q_n_s_rand_std_','QR_m_rand_avg_','QR_m_rand_std_');
end;%if (~exist(str_rand_mat,'file') | flag_rerun>1);
if ( exist(str_rand_mat,'file') & flag_rerun<=1);
disp(sprintf(' %% %s found, not creating',str_rand_mat));
load(str_rand_mat,'Q_n_s_rand_avg_','Q_n_s_rand_std_','QR_m_rand_avg_','QR_m_rand_std_');
end;%if ( exist(str_rand_mat,'file') & flag_rerun<=1);
%%%%%%%%;
Auc_s_avg_ = 0.5*ones(n_iteration,1);
Auc_label_s_ = 0.5*ones(n_iteration,1);
Auc_label_si__ = 0.5*ones(n_iteration,n_rank);
Auc_label_sk__ = 0.5*ones(n_iteration,n_rank);
Auc_label_ti__ = 0.5*ones(n_iteration,min(2,n_rank));
Auc_label_tk__ = 0.5*ones(n_iteration,min(2,n_rank));
Auc_m_avg_ = 0.5*ones(n_iteration,1);
Auc_label_m_ = 0.5*ones(n_iteration,1);
Auc_label_mi__ = 0.5*ones(n_iteration,n_rank);
Auc_label_mk__ = 0.5*ones(n_iteration,n_rank);
%%%%%%%%;
for niteration=1:n_iteration;
A_n_ = randn(M,N); B_n_=randn(MX,NX)+mu*ones(MX,1)*(2*(rand(1,NX)>0.5) - 1); 
for nj=1:2; 
pf_{nj} = randperm(size(A_n_,nj)); 
[~,pi_{nj}] = sort(pf_{nj}); [~,pi_{nj}] = sort(pi_{nj}); 
end;% for nj=1:2;
A_n_(pf_{1}(1:MX),pf_{2}(1:NX)) = B_n_;
B_label_ = zeros(M,1); B_label_(pi_{1}(1:size(B_n_,1))) = 1;
%%%%%%%%;
% Binarize? ;
%%%%%%%%;
% A_n_ = 2*(A_n_>0)-1;
%%%%%%%%;
disp(sprintf(' %% niteration %d/%d',niteration,n_iteration));
%%%%%%%%;
% spectral. ; 
%%%%%%%%;
try;
tic; [tmp_U_,tmp_S_,tmp_V_] = svds(A_n_,n_rank); t_s_ = toc;
[~,tmp_U_ij_] = sort(abs(tmp_U_(:,1)),'descend'); [~,tmp_V_ij_] = sort(abs(tmp_V_(:,1)),'descend');
rkeep_s_ = tmp_U_ij_; ckeep_s_ = tmp_V_ij_;
[~,tmp_Bn_] = intersect(rkeep_s_,pi_{1}(1:size(B_n_,1)),'stable'); [~,tmp_Bc_] = intersect(rkeep_s_,pi_{1}(size(B_n_,1)+1:end),'stable'); Auc_s_(1) = auc_0(tmp_Bn_,tmp_Bc_);
[~,tmp_Bn_] = intersect(ckeep_s_,pi_{2}(1:size(B_n_,2)),'stable'); [~,tmp_Bc_] = intersect(ckeep_s_,pi_{2}(size(B_n_,2)+1:end),'stable'); Auc_s_(2) = auc_0(tmp_Bn_,tmp_Bc_);
Auc_s_avg = mean(Auc_s_); 
[Q_n_s_] = dexcluster_nonbinary_AAAA_scorebox_ver0(A_n_(rkeep_s_,ckeep_s_));
Q_n_s_ = Q_n_s_./Z_sub_;
Z_n_s_ = (Q_n_s_ - Q_n_s_rand_avg_)./Q_n_s_rand_std_;
[~,tmp_ij] = max(Z_n_s_,[],'all','linear'); 
[tmp_r_ij_s,tmp_c_ij_s] = ind2sub(size(Z_n_s_),tmp_ij);
tmp_Bn_ = B_label_(rkeep_s_(1:tmp_r_ij_s)); tmp_Bc_ = B_label_(rkeep_s_(tmp_r_ij_s+1:end));
Auc_label_s = auc_0(tmp_Bc_,tmp_Bn_);
disp(sprintf(' %% spectral   t%4.2f [r:%0.2f c:%0.2f] --> avg:%0.2f; label:%0.2f',t_s_,Auc_s_,Auc_s_avg,Auc_label_s));
Auc_s_avg_(niteration) = Auc_s_avg;
Auc_label_s_(niteration) = Auc_label_s;
%%%%%%%%;
% pca --> isosplit. ;
% pca --> kmeans2. ;
%%%%%%%%;
Auc_label_si_ = 0.5*ones(n_rank,1);
Auc_label_sk_ = 0.5*ones(n_rank,1);
for nrank=1:n_rank;
%A_n_sub_ = tmp_U_(:,1:nrank)*tmp_S_(1:nrank,1:nrank)*transpose(tmp_V_(:,1:nrank));
A_n_sub_ = tmp_U_(:,1:nrank);
opts_isosplit5 = struct('K_init',200,'isocut_threshold',1.0);
try;
isosplit5_label_ = transpose(isosplit5(transpose(A_n_sub_),opts_isosplit5));
Auc_label_si_(nrank) = label_to_Auc_0(isosplit5_label_,B_label_,pi_{1});
catch; disp(sprintf(' %% niteration %d/%d: error in spectral-->isosplit5.',niteration,n_iteration)); end;%try;
try;
kmeans_label_ = kmeans(A_n_sub_,2);
Auc_label_sk_(nrank) = label_to_Auc_0(kmeans_label_,B_label_,pi_{1});
catch; disp(sprintf(' %% niteration %d/%d: error in spectral-->kmeans2.',niteration,n_iteration)); end;%try;
end;%for nrank=1:n_rank;
Auc_label_si_ = max(Auc_label_si_,1.0-Auc_label_si_);
Auc_label_sk_ = max(Auc_label_sk_,1.0-Auc_label_sk_);
disp(sprintf(' %% pca-->isosplit label: [l1:%0.2f l2:%0.2f l3:%0.2f l4:%0.2f l5:%0.2f l6:%0.2f]',Auc_label_si_));
disp(sprintf(' %% pca-->kmeans2  label: [l1:%0.2f l2:%0.2f l3:%0.2f l4:%0.2f l5:%0.2f l6:%0.2f]',Auc_label_sk_));
Auc_label_si__(niteration,:) = transpose(Auc_label_si_);
Auc_label_sk__(niteration,:) = transpose(Auc_label_sk_);
catch; disp(sprintf(' %% niteration %d/%d: error in spectral.',niteration,n_iteration)); end;%try;
%%%%%%%%;
% tsne --> isosplit. ;
% tsne --> kmeans2. ; 
%%%%%%%%;
Auc_label_ti_ = 0.5*ones(min(2,n_rank),1);
Auc_label_tk_ = 0.5*ones(min(2,n_rank),1);
for nrank=1:min(2,n_rank);
try;
A_n_sub_ = fast_tsne_dr_0(A_n_,struct('rand_seed',1,'no_dims',nrank,'theta',0));
try;
opts_isosplit5 = struct('K_init',200,'isocut_threshold',1.0);
isosplit5_label_ = transpose(isosplit5(transpose(A_n_sub_),opts_isosplit5));
Auc_label_ti_(nrank) = label_to_Auc_0(isosplit5_label_,B_label_,pi_{1});
catch; disp(sprintf(' %% niteration %d/%d: error in tsne-->isosplit5.',niteration,n_iteration)); end;%try;
try;
kmeans_label_ = kmeans(A_n_sub_,2);
Auc_label_tk_(nrank) = label_to_Auc_0(kmeans_label_,B_label_,pi_{1});
catch; disp(sprintf(' %% niteration %d/%d: error in tsne-->kmeans2.',niteration,n_iteration)); end;%try;
catch; disp(sprintf(' %% niteration %d/%d: error in tsne.',niteration,n_iteration)); end;%try;
end;%for nrank=1:min(2,n_rank);
Auc_label_ti_ = max(Auc_label_ti_,1.0-Auc_label_ti_);
Auc_label_tk_ = max(Auc_label_tk_,1.0-Auc_label_tk_);
disp(sprintf(' %% tsne-->isosplit5 label: [l1:%0.2f l2:%0.2f]',Auc_label_ti_));
disp(sprintf(' %% tsne-->kmeans2  label: [l1:%0.2f l2:%0.2f]',Auc_label_tk_));
Auc_label_ti__(niteration,:) = transpose(Auc_label_ti_);
Auc_label_tk__(niteration,:) = transpose(Auc_label_tk_);
%%%%%%%%;
% dexcluster. ;
% dexcluster-->isosplit5. ;
% dexcluster-->kmeans2. ;
%%%%%%%%;
try;
tic; [out_xdrop_m_,out_trace_] = dexcluster_nonbinary_AAAA_ver0(A_n_,gamma); t_m_ = toc;
rdrop_m_ = out_xdrop_m_(:,1); rdrop_m_ = 1+rdrop_m_(find(rdrop_m_>-1)); 
cdrop_m_ = out_xdrop_m_(:,2); cdrop_m_ = 1+cdrop_m_(find(cdrop_m_>-1)); 
rkeep_m_ = rdrop_m_(end:-1:1); ckeep_m_ = cdrop_m_(end:-1:1);
[~,tmp_Bn_] = intersect(rkeep_m_,pi_{1}(1:size(B_n_,1)),'stable'); [~,tmp_Bc_] = intersect(rkeep_m_,pi_{1}(size(B_n_,1)+1:end),'stable'); Auc_m_(1) = auc_0(tmp_Bn_,tmp_Bc_);
[~,tmp_Bn_] = intersect(ckeep_m_,pi_{2}(1:size(B_n_,2)),'stable'); [~,tmp_Bc_] = intersect(ckeep_m_,pi_{2}(size(B_n_,2)+1:end),'stable'); Auc_m_(2) = auc_0(tmp_Bn_,tmp_Bc_);
Auc_m_avg = mean(Auc_m_);
QR_m_ = out_trace_(:,4);
ZR_m_ = (QR_m_-QR_m_rand_avg_)./QR_m_rand_std_;
[~,ZR_ij] = max(ZR_m_); if (ZR_ij<length(ZR_m_)); ZR_ij=ZR_ij+1; end;
r_ret = out_trace_(ZR_ij,2); c_ret = out_trace_(ZR_ij,3);
tmp_Bn_ = B_label_(rkeep_m_(1:r_ret)); tmp_Bc_ = B_label_(rkeep_m_(r_ret+1:end));
Auc_label_m = auc_0(tmp_Bc_,tmp_Bn_);
disp(sprintf(' %% dexcluster t%4.2f [r:%0.2f c:%0.2f] --> avg:%0.2f; label:%0.2f',t_m_,Auc_m_,Auc_m_avg,Auc_label_m));
Auc_m_avg_(niteration) = Auc_m_avg;
Auc_label_m_(niteration) = Auc_label_m;
A_n_sub_ = A_n_(rkeep_m_(1:r_ret),ckeep_m_(1:c_ret));
Auc_label_mi_ = 0.5*ones(n_rank,1);
Auc_label_mk_ = 0.5*ones(n_rank,1);
for nrank=1:n_rank;
try;
[tmp_U_,tmp_S_,tmp_V_] = svds(A_n_sub_,n_rank);
A1_n_sub_ = A_n_(:,ckeep_m_(1:c_ret))*tmp_V_;
try;
opts_isosplit5 = struct('K_init',200,'isocut_threshold',1.0);
isosplit5_label_ = transpose(isosplit5(transpose(A1_n_sub_),opts_isosplit5));
Auc_label_mi_(nrank) = label_to_Auc_0(isosplit5_label_,B_label_,pi_{1});
catch; disp(sprintf(' %% niteration %d/%d: error in dexcluster-->isosplit5.',niteration,n_iteration)); end;%try;
try;
kmeans_label_ = kmeans(A1_n_sub_,2);
Auc_label_mk_(nrank) = label_to_Auc_0(kmeans_label_,B_label_,pi_{1});
catch; disp(sprintf(' %% niteration %d/%d: error in dexcluster-->kmeans2.',niteration,n_iteration)); end;%try;
catch; disp(sprintf(' %% niteration %d/%d: error in dexcluster-->svd.',niteration,n_iteration)); end;%try;
end;%for nrank=1:n_rank;
Auc_label_mi_ = max(Auc_label_mi_,1.0-Auc_label_mi_);
Auc_label_mk_ = max(Auc_label_mk_,1.0-Auc_label_mk_);
disp(sprintf(' %% dexcluster-->isosplit label: [l1:%0.2f l2:%0.2f l3:%0.2f l4:%0.2f l5:%0.2f l6:%0.2f]',Auc_label_mi_));
disp(sprintf(' %% dexcluster-->kmeans2  label: [l1:%0.2f l2:%0.2f l3:%0.2f l4:%0.2f l5:%0.2f l6:%0.2f]',Auc_label_mk_));
Auc_label_mi__(niteration,:) = transpose(Auc_label_mi_);
Auc_label_mk__(niteration,:) = transpose(Auc_label_mk_);
catch; disp(sprintf(' %% niteration %d/%d: error in dexcluster.',niteration,n_iteration)); end;%try;
if (mod(niteration,10)==0);
save(str_mat,'M','N','gamma','X','mu','n_rank','niteration','n_iteration','n_shuffle','Auc_s_avg_','Auc_label_s_','Auc_label_si__','Auc_label_sk__','Auc_label_ti__','Auc_label_tk__','Auc_m_avg_','Auc_label_m_','Auc_label_mi__','Auc_label_mk__'); %<-- save every 10 iterations. ;
end;%if (mod(niteration,10)==0);
end;%for niteration=1:n_iteration;
%%%%%%%%;
save(str_mat,'M','N','gamma','X','mu','n_rank','niteration','n_iteration','n_shuffle','Auc_s_avg_','Auc_label_s_','Auc_label_si__','Auc_label_sk__','Auc_label_ti__','Auc_label_tk__','Auc_m_avg_','Auc_label_m_','Auc_label_mi__','Auc_label_mk__');
%%%%%%%%;
end;%if (~exist(str_mat,'file') | flag_rerun>0); 
