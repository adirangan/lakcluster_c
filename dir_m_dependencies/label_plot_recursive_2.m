function label_plot_recursive_2(output_label_,lpFmax_label_,lpnext_label_,item_label_,lplim_);
% use on labels generated by halfloop_nonbinary_f_recursive. ;
na=0;
if nargin<1+na; output_label_ = []; end; na=na+1;
if nargin<1+na; lpFmax_label_ = []; end; na=na+1;
if nargin<1+na; lpnext_label_ = []; end; na=na+1;
if nargin<1+na; item_label_ = []; end; na=na+1;
if nargin<1+na; lplim_ = []; end; na=na+1;

if (isempty(output_label_)); output_label_ = []; end;
if (isempty(lpFmax_label_)); lpFmax_label_ = []; end;
if (isempty(lpnext_label_)); lpnext_label_ = lpFmax_label_; end;
if (isempty(item_label_)); item_label_ = []; end;
if (isempty(lplim_)); lplim_ = [0,27]; end;

verbose=1;
n_item = numel(output_label_);
assert(numel(lpFmax_label_)==n_item);
assert(numel(lpnext_label_)==n_item);
if (~isempty(item_label_)); assert(numel(item_label_)==n_item); end;
[u_output_label_,index_u_from_o_] = unique(output_label_); index_u_from_o_ = index_u_from_o_-1;
u_lpFmax_label_ = lpFmax_label_(1+index_u_from_o_);
u_lpnext_label_ = lpnext_label_(1+index_u_from_o_);
n_cluster = numel(u_output_label_);
if (verbose); disp(sprintf(' %% n_item %d --> n_cluster %d',n_item,n_cluster)); end;
cluster_index__ = cell(n_cluster,1);
for ncluster=0:n_cluster-1;
u_output_label = u_output_label_{1+ncluster};
cluster_index__{1+ncluster} = efind(strcmp(output_label_,u_output_label));
end;%for ncluster=0:n_cluster-1;
%%%%%%%%;
if (verbose);
for ncluster=0:n_cluster-1;
u_output_label = u_output_label_{1+ncluster};
u_lpFmax_label = u_lpFmax_label_{1+ncluster};
u_lpnext_label = u_lpnext_label_{1+ncluster};
cluster_index_ = cluster_index__{1+ncluster};
n_item_sub = numel(cluster_index_);
disp(sprintf(' %% ncluster %.2d/%.2d : length %.3d --> %s %s %s',ncluster,n_cluster,n_item_sub,u_output_label,u_lpFmax_label,u_lpnext_label));
for nitem_sub=0:n_item_sub-1;
nitem = cluster_index_(1+nitem_sub);
if (~isempty(item_label_)); disp(sprintf(' %% %% %s',item_label_{1+nitem})); end;
end;%for nitem_sub=0:n_item_sub-1;
disp(sprintf(' %% '));
end;%for ncluster=0:n_cluster-1;
end;%if (verbose);
%%%%%%%%;
xgap = max(3,ceil(0.01*n_item)); xw = ceil(xgap/3);
n_x = n_item + (n_cluster-1)*xgap;
xpos_from_item_ = zeros(n_item,1);
ypos_from_item_ = zeros(n_item,1);
item_from_xpos_ = zeros(n_x,1);
xtick_from_xpos_ = zeros(n_x,1);
xpos=1; %<-- one based so that we can efind later. ;
for ncluster=0:n_cluster-1;
u_output_label = u_output_label_{1+ncluster};
ypos = length(u_output_label);
cluster_index_ = cluster_index__{1+ncluster};
n_item_sub = numel(cluster_index_);
for nitem_sub=0:n_item_sub-1;
nitem = cluster_index_(1+nitem_sub);
xpos_from_item_(1+nitem) = xpos;
ypos_from_item_(1+nitem) = ypos;
item_from_xpos_(1+xpos) = nitem;
xtick_from_xpos_(1+xpos) = xpos;
xpos=xpos+1;
end;%for nitem_sub=0:n_item_sub-1;
xpos=xpos+xgap;
end;%for ncluster=0:n_cluster-1;
%%%%%%%%;
node_label_ = cell(0,0);
node_isroot_ = zeros(0,0);
node_parent_label_ = cell(0,0);
node_isleaf_ = zeros(0,0);
node_childA_label_ = cell(0,0);
node_childB_label_ = cell(0,0);
node_lpFmax_ = zeros(0,0);
node_lpnext_ = zeros(0,0);
node_ij_ = zeros(0,0);
node_leaf_distance_ = zeros(0,0);
node_root_distance_ = zeros(0,0);
n_node=0;
for ncluster=0:n_cluster-1;
u_output_label = u_output_label_{1+ncluster};
u_lpFmax_label = u_lpFmax_label_{1+ncluster};
u_lpnext_label = u_lpnext_label_{1+ncluster};
u_lpFmax_ = str2num(u_lpFmax_label);
u_lpnext_ = str2num(u_lpnext_label);
n_y = length(u_output_label)-1;
n_0 = strfind(u_output_label,'0');
assert(n_0==n_y+1); %<-- 0 termination. ;
assert(numel(u_lpFmax_)>=n_y); %<-- final entry is nlp for leaf. ;
assert(numel(u_lpnext_)>=n_y); %<-- final entry is nlp for leaf. ;
for ny=-1:n_y-1;
node_root_distance = 1+ny;
node_leaf_distance = n_y-1-ny;
node_label = sprintf('%s0',u_output_label(1+(0:ny)));
node_isroot = 0;
if (ny==-1);
node_isroot = 1;
node_parent_label = '';
end;%if (ny==-1);
if (ny>=0);
node_isroot = 0;
node_parent_label = sprintf('%s0',u_output_label(1+(0:ny-1)));
end;%if (ny>=0);
node_isleaf = 1;
node_childA_label = '';
node_childB_label = '';
node_lpFmax = 0;
node_lpnext = 0;
if (ny<n_y-1);
node_isleaf = 0;
node_childA_label = sprintf('%sA0',u_output_label(1+(0:ny)));
node_childB_label = sprintf('%sB0',u_output_label(1+(0:ny)));
node_lpFmax = u_lpFmax_(1+1+ny);
node_lpnext = u_lpnext_(1+1+ny);
end;%if (ny<n_y-1);
node_ij = 0; if (ny==n_y-1); node_ij = 1+ncluster; end;
if (isempty(intersect(node_label_,{node_label})));
node_label_{1+n_node} = node_label;
node_isroot_(1+n_node) = node_isroot;
node_parent_label_{1+n_node} = node_parent_label;
node_isleaf_(1+n_node) = node_isleaf;
node_childA_label_{1+n_node} = node_childA_label;
node_childB_label_{1+n_node} = node_childB_label;
node_lpFmax_(1+n_node) = node_lpFmax;
node_lpnext_(1+n_node) = node_lpnext;
node_ij_(1+n_node) = node_ij;
node_root_distance_(1+n_node) = node_root_distance;
node_leaf_distance_(1+n_node) = node_leaf_distance;
n_node=n_node+1;
end;%if (isempty(intersect(node_label_,{node_label})));
end;%for ny=-1:n_y-1;
end;%for ncluster=0:n_cluster-1;
assert(n_node==numel(node_label_));
assert(n_node==numel(node_lpFmax_));
assert(n_node==numel(node_lpnext_));
assert(n_node==numel(node_ij_));
%%%%%%%%;
node_n_a_ = zeros(n_node,1);
node_parent_index_ = zeros(n_node,1);
node_childA_index_ = zeros(n_node,1);
node_childB_index_ = zeros(n_node,1);
node_xpos_avg_ = zeros(n_node,1);
node_xpos_max_ = zeros(n_node,1);
node_xpos_min_ = zeros(n_node,1);
node_ypos_ = zeros(n_node,1);
for nnode=0:n_node-1;
node_label = node_label_{1+nnode};
node_isroot = node_isroot_(1+nnode);
if (~node_isroot); node_parent_index_(1+nnode) = efind(strcmp(node_label_,node_parent_label_{1+nnode})); end; %<-- inefficient. ;
node_isleaf = node_isleaf_(1+nnode);
if (~node_isleaf); node_childA_index_(1+nnode) = efind(strcmp(node_label_,node_childA_label_{1+nnode})); end; %<-- inefficient. ;
if (~node_isleaf); node_childB_index_(1+nnode) = efind(strcmp(node_label_,node_childB_label_{1+nnode})); end; %<-- inefficient. ;
n_y = numel(node_label);
if (n_y==1);
n_a = n_item;
tmp_index_ = 0:n_item-1;
else;%if (n_y==1);
n_a=0;
for nitem=0:n_item-1; 
output_label = output_label_{1+nitem};
if (min(strfind(output_label,node_label(1:end-1)))==1);
n_a = n_a+1;
end;%if (min(strfind(output_label,node_label(1:end-1)))==1);
end;%for nitem=0:n_item-1; 
tmp_index_ = zeros(n_a,1);
na=0;
for nitem=0:n_item-1; 
output_label = output_label_{1+nitem};
if (min(strfind(output_label,node_label(1:end-1)))==1);
tmp_index_(1+na) = nitem;
na=na+1;
end;%if (min(strfind(output_label,node_label(1:end-1)))==1);
end;%for nitem=0:n_item-1; 
end;%if (n_y==1);
node_n_a_(1+nnode) = n_a;
node_xpos_avg_(1+nnode) = mean(xpos_from_item_(1+tmp_index_));
node_xpos_max_(1+nnode) = max(xpos_from_item_(1+tmp_index_));
node_xpos_min_(1+nnode) = min(xpos_from_item_(1+tmp_index_));
node_ypos_(1+nnode) = n_y;
end;%for nnode=0:n_node-1;
%%%%%%%%;
node_xpos_parent_ = zeros(n_node,1);
node_xpos_childA_ = zeros(n_node,1);
node_xpos_childB_ = zeros(n_node,1);
[~,nnode_root_last_] = sort(node_root_distance_,'descend'); nnode_root_last_ = nnode_root_last_ - 1;
for nl=0:n_node-1;
nnode = nnode_root_last_(1+nl);
node_label = node_label_{1+nnode};
node_isroot = node_isroot_(1+nnode);
node_parent_index = node_parent_index_(1+nnode);
node_isleaf = node_isleaf_(1+nnode);
node_childA_index = node_childA_index_(1+nnode);
node_childB_index = node_childB_index_(1+nnode);
if ( node_isleaf);
node_xpos_childA_(1+nnode) = node_xpos_min_(1+nnode);
node_xpos_childB_(1+nnode) = node_xpos_max_(1+nnode);
end;%if ( node_isleaf);
if (~node_isleaf);
node_xpos_childA_(1+nnode) = node_xpos_parent_(1+node_childA_index);
node_xpos_childB_(1+nnode) = node_xpos_parent_(1+node_childB_index);
end;%if (~node_isleaf);
node_xpos_parent_(1+nnode) = 0.5*(node_xpos_childA_(1+nnode) + node_xpos_childB_(1+nnode));
end;%for nl=0:n_node-1;
%%%%%%%%;
if (verbose);
for nnode=0:n_node-1;
node_label = node_label_{1+nnode};
node_isroot = node_isroot_(1+nnode);
node_parent_label = node_parent_label_{1+nnode};
node_parent_index = node_parent_index_(1+nnode);
node_isleaf = node_isleaf_(1+nnode);
node_childA_label = node_childA_label_{1+nnode};
node_childA_index = node_childA_index_(1+nnode);
node_childB_label = node_childB_label_{1+nnode};
node_childB_index = node_childB_index_(1+nnode);
node_lpFmax = node_lpFmax_(1+nnode);
node_lpnext = node_lpnext_(1+nnode);
ypos = node_ypos_(1+nnode);
xpos_avg = node_xpos_avg_(1+nnode);
xpos_min = node_xpos_min_(1+nnode);
xpos_max = node_xpos_max_(1+nnode);
node_xpos_childA = node_xpos_childA_(1+nnode);
node_xpos_childB = node_xpos_childB_(1+nnode);
node_xpos_parent = node_xpos_parent_(1+nnode);
n_a = node_n_a_(1+nnode);
disp(sprintf(' %% node %.3d/%.3d --> %s (r%dl%d) (parent %d %s, children %d %s %d %s) [lpFmax %+0.2f lpnext %+0.2f] a %.3d --> [x,y] = [(%+0.2f,%+0.2f,%+0.2f),%+0.2f]',nnode,n_node,node_label,node_isroot,node_isleaf,node_parent_index,node_parent_label,node_childA_index,node_childA_label,node_childB_index,node_childB_label,node_lpFmax,node_lpnext,n_a,xpos_min,xpos_avg,xpos_max,ypos));
end;%for nnode=0:n_node-1;
end;%if (verbose);
%%%%%%%%;

n_item_threshold = 1024;
n_node_threshold = 128;

cla;
hold on;
ypos_upb = max(ypos_from_item_);
xpos_upb = max(xpos_from_item_);
xpos_lob = min(xpos_from_item_);
c_ = colormap_nlpvt(64,(3-min(lplim_))/diff(lplim_)); n_c = size(c_,1);
%%%%%%%%;
for nnode=0:n_node-1;
node_isleaf = node_isleaf_(1+nnode);
node_lpFmax = node_lpFmax_(1+nnode);
node_lpnext = node_lpnext_(1+nnode); if (node_isleaf); node_lpnext = node_lpnext_(1+node_parent_index_(1+nnode)); end;
node_xpos_childA = node_xpos_childA_(1+nnode);
node_xpos_childB = node_xpos_childB_(1+nnode);
node_xpos_parent = node_xpos_parent_(1+nnode);
node_ij = node_ij_(1+nnode);
if ((node_lpnext>=10) & (node_isleaf==0)); str_tmp = sprintf('%.2d',min(99,floor(node_lpnext))); end;
if ((node_lpnext< 10) & (node_isleaf==0)); str_tmp = sprintf('%.1f',floor(10*node_lpnext)/10); end;
if (node_isleaf==1); str_tmp = sprintf('[%d]',node_ij); end;
xpos_avg = node_xpos_avg_(1+nnode);
xpos_min = node_xpos_min_(1+nnode);
xpos_max = node_xpos_max_(1+nnode);
ypos = node_ypos_(1+nnode);
nc = max(0,min(n_c-1,floor(n_c*(node_lpnext - min(lplim_))/diff(lplim_))));
if ( node_isleaf); 
% triangle: ;
tmp_x_ = [ ...
 node_xpos_childA - xw ...
;node_xpos_childB + xw ...
;node_xpos_parent + xw ...
;node_xpos_parent - xw ...
;node_xpos_childA - xw...
];
tmp_y_ = [ ...
 0 ...
;0 ...
;1 ...
;1 ...
;0 ...
];
patch(-0.5+1+tmp_x_,ypos_upb-ypos+1+tmp_y_,c_(1+nc,:),'LineStyle','-','LineWidth',1,'EdgeColor',c_(1+nc,:));
% box: ;
tmp_x_ = [ ...
 node_xpos_childA - xw ...
;node_xpos_childB + xw ...
;node_xpos_childB + xw ...
;node_xpos_childA - xw...
];
tmp_y_ = [ ...
 -ypos_upb ...
;-ypos_upb ...
;1-ypos ...
;1-ypos ...
];
patch(-0.5+1+tmp_x_,ypos_upb+tmp_y_,c_(1+nc,:),'LineStyle','-','LineWidth',1,'EdgeColor',c_(1+nc,:));
end;%if ( node_isleaf); 
if (~node_isleaf); 
%line(-0.5+1+[node_xpos_childA;node_xpos_parent;node_xpos_childB],ypos_upb-ypos+1+[0;1;0],'Color',c_(1+nc,:),'LineWidth',1);
%{
% wedge: ;
tmp_x_ = [ ...
 node_xpos_childA - xw ...
;node_xpos_childA + xw ...
;node_xpos_parent ...
;node_xpos_childB - xw ...
;node_xpos_childB + xw ...
;node_xpos_parent + xw ...
;node_xpos_parent - xw ...
;node_xpos_childA - xw...
];
tmp_yw = xw/(node_xpos_parent - node_xpos_childA);
tmp_y_ = [ ...
 0 ...
;0 ...
;1 - tmp_yw ...
;0 ...
;0 ...
;1 ...
;1 ...
;0 ...
];
%}
% staple: ;
tmp_x_ = [ ...
 node_xpos_childA - xw ...
;node_xpos_childA + xw ...
;node_xpos_childA + xw ...
;node_xpos_childB - xw ...
;node_xpos_childB - xw ...
;node_xpos_childB + xw ...
;node_xpos_childB + xw ...
;node_xpos_childA - xw...
];
tmp_yw = 2*xw*ypos_upb/xpos_upb;
tmp_y_ = [ ...
 0 ...
;0 ...
;1 - tmp_yw ...
;1 - tmp_yw ...
;0 ...
;0 ...
;1 ...
;1 ...
];
patch(-0.5+1+tmp_x_,ypos_upb-ypos+1+tmp_y_,c_(1+nc,:),'LineStyle','-','LineWidth',1,'EdgeColor',c_(1+nc,:));
end;%if (~node_isleaf); 
end;%for nnode=0:n_node-1;
%%%%%%%%;
% colorbar;
%%%%%%%%;
colorbar_width = (1.0/n_c) * (1+1+xpos_upb + 2*xw - xpos_lob) ;
tmp_x_ = 1+1+xpos_upb+xw + 2*colorbar_width + colorbar_width*repmat([0;1;1;0],[1,n_c]);
tmp_y_ = linspace(0,1+ypos_upb,n_c+1); tmp_y_ = [ tmp_y_(1:n_c+0) ; tmp_y_(1:n_c+0) ; tmp_y_(2:n_c+1) ; tmp_y_(2:n_c+1) ] ;
patch(tmp_x_,tmp_y_,reshape(c_,[1,n_c,3]),'LineStyle','none');
n_l = 9;
for nl=0:n_l;
text(1+1+xpos_upb+xw + 3*colorbar_width + colorbar_width*0.25,(1+ypos_upb)*nl/n_l,sprintf('%0.2f',min(lplim_) + diff(lplim_)*nl/n_l));
tmp_ = text(1+1+xpos_upb+xw + 1.25*colorbar_width,(1+ypos_upb)/2,'-log(p)'); set(tmp_,'Rotation',90);
end;%for nl=0:n_l;
%%%%%%%%;
set(gca,'YTick',[]);
tmp_ = text(xpos_lob-xw-2*colorbar_width,(1+ypos_upb)/2,'tree level'); set(tmp_,'Rotation',90);
for nl=0:1+ypos_upb;
tmp_ = text(xpos_lob-xw-1*colorbar_width,(1+ypos_upb)*nl/(1+ypos_upb),sprintf('%d',1+ypos_upb - nl));
end;%for nl=0:1+ypos_upb;
%%%%%%%%;
hold off;
set(gca,'TickLength',[0,0]); box off;
if ( isempty(item_label_));
tmp_ = gca; tmp_.XColor = 'w'; tmp_.YColor = 'w';
set(gca,'XTick',[]); set(gca,'TickLength',[0,0]);
end;%if ( isempty(item_label_));
if (~isempty(item_label_));
%tmp_ = gca; tmp_.XColor = 'w'; tmp_.YColor = 'w';
set(gca,'XTick',1+efind(xtick_from_xpos_),'XTickLabel',item_label_(1+item_from_xpos_(1+efind(xtick_from_xpos_)))); xtickangle(90);
end;%if (~isempty(item_label_)); 
set(gca,'FontSize',6);
xlim([xpos_lob-xw - 2.5*colorbar_width,1+1+xpos_upb+xw + 3*colorbar_width]);
ylim([0,1+ypos_upb]);
set(gcf,'Color',[1,1,1]);
figbig;



