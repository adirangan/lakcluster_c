% Here we test the kmeans clustering algorithm. ; 
% Surprisingly, this algorithm seems very good! ;

M = 178*2; N = 2e3*2; n_rank = 12; %n_rank = ceil(sqrt(N));
snr = 0.4;
n_cluster = 4; rng(1);
[A_n_,label_A_,n_label_A_,pf_,pi_,snr_,MX_,NX_,mu_] = random_matrix_planted_cluster_0(M,N,snr,n_cluster);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% svd-->kmeans. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

[tmp_U_,tmp_S_,tmp_V_] = svds(A_n_,n_rank);

n_k = max(8,2*n_cluster);
lP0__ = zeros(n_rank,n_k); label_B___ = cell(n_rank,n_k); cap___ = cell(n_rank,n_k);
for nrank=1:n_rank;
A_n_sub_ = tmp_U_(:,1:nrank);
for nk=1:n_k;
label_B___{nrank,nk} = kmeans(A_n_sub_,nk);
[lP0__(nrank,nk),cap___{nrank,nk}] = label_to_label_enrichment_lP0(label_A_,label_B___{nrank,nk});
end;%for nk=1:n_k;
end;%for nrank=1:n_rank;

flag_plot=0;
if flag_plot;
% lP0;
figure(1);clf;
colormap(colormap_beach());
imagesc(-lP0__);colorbar;
xlabel('nk'); ylabel('nrank');
title('lP0');
end;%if flag_plot;

flag_plot=1;
if flag_plot;
% overlap. ;
figure(2);clf;
colormap(colormap_beach());
n_row = 6; n_col = 12;
nk_ = round(linspace(2,n_k,n_row));
nrank_ = round(linspace(1,n_rank,n_col));
for nrow=1:n_row; for ncol=1:n_col;
subplot(n_row,n_col,ncol + (nrow-1)*n_col);
nk = nk_(nrow); nrank = nrank_(ncol); 
imagesc(cap___{nrank,nk}./repmat(n_label_A_,1,nk),[0,1]);
%xlabel('discovered'); ylabel('planted');
set(gca,'XTick',[],'YTick',[]);
%title(sprintf('nk %d nrank %d intersection matrix',nk,nrank));
title(sprintf('k%d r%d',nk,nrank));
%colorbar;
end;end;%for nrow=1:n_row; for ncol=1:n_col;
figbig;
end;%if flag_plot;

flag_plot=0;
if flag_plot;
% adjusted snr. ;
figure(3);clf;
colormap(colormap_beach());
n_row = 6; n_col = 12;
nk_ = round(linspace(2,n_k,n_row));
nrank_ = round(linspace(1,n_rank,n_col));
for nrow=1:n_row; for ncol=1:n_col;
subplot(n_row,n_col,ncol + (nrow-1)*n_col);
nk = nk_(nrow); nrank = nrank_(ncol); 
tmp_cap_ = cap___{nrank,nk};
tmp_nlA_ = n_label_A_;
tmp_nlB_ = sum(tmp_cap_,1);
tmp_MX_ = tmp_cap_;
tmp_NX_ = repmat(transpose([N,NX_]),1,nk);
tmp_mu_ = repmat(transpose([0,mu_]),1,nk);
%tmp_snr_ = sqrt(tmp_MX_.*tmp_NX_).*tmp_mu_/sqrt(N);
%imagesc(tmp_snr_,snr + 0.15*[-1,+1]);
tmp_snr_ = sqrt(tmp_MX_.*tmp_NX_).*tmp_mu_./sqrt(repmat(tmp_nlB_,1+n_cluster,1));
imagesc(tmp_snr_,snr*sqrt(N)/sqrt(M) + 0.5*[-1,+1]);
%xlabel('discovered'); ylabel('planted');
set(gca,'XTick',[],'YTick',[]);
%title(sprintf('nk %d nrank %d intersection matrix',nk,nrank));
title(sprintf('k%d r%d',nk,nrank));
%colorbar;
end;end;%for nrow=1:n_row; for ncol=1:n_col;
figbig;
end;%if flag_plot;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% lakcluster. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%M = 178*2; N = 2e3*2; n_rank = 12; %n_rank = ceil(sqrt(N));
%snr = 0.4;
%n_cluster = 4; rng(1);
%[A_n_,label_A_,n_label_A_,pf_,pi_,snr_,MX_,NX_,mu_] = random_matrix_planted_cluster_0(M,N,snr,n_cluster);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
n_shuffle_lak = 8;
for nshuffle_lak=0:n_shuffle_lak;
if (mod(nshuffle_lak,10)==0); disp(sprintf(' %% nshuffle_lak %d/%d',nshuffle_lak,n_shuffle_lak)); end;
if nshuffle_lak==0; tmp_A_n_ = A_n_; end;
if nshuffle_lak>0; [tmp_Q_,~] = qr(randn(M)); tmp_A_n_ = tmp_Q_*A_n_; end;
gamma = 0.0; [out_xdrop_lak__{1+nshuffle_lak},trace_lak__{1+nshuffle_lak}] = lakcluster_nonbinary_AAAA_ver0(tmp_A_n_,gamma);
n_iter_lak__{1+nshuffle_lak} = trace_lak__{1+nshuffle_lak}(:,1); r_rem_lak__{1+nshuffle_lak} = trace_lak__{1+nshuffle_lak}(:,2); c_rem_lak__{1+nshuffle_lak} = trace_lak__{1+nshuffle_lak}(:,3);
QR_lak__{1+nshuffle_lak} = trace_lak__{1+nshuffle_lak}(:,4)./((r_rem_lak__{1+nshuffle_lak}-1).*c_rem_lak__{1+nshuffle_lak});
QC_lak__{1+nshuffle_lak} = trace_lak__{1+nshuffle_lak}(:,5)./(r_rem_lak__{1+nshuffle_lak}.*(r_rem_lak__{1+nshuffle_lak}-1));
rdrop_lak__{1+nshuffle_lak} = out_xdrop_lak__{1+nshuffle_lak}(find(out_xdrop_lak__{1+nshuffle_lak}(:,1)>-1),1)+1; rkeep_lak__{1+nshuffle_lak} = rdrop_lak__{1+nshuffle_lak}(end:-1:1);
cdrop_lak__{1+nshuffle_lak} = out_xdrop_lak__{1+nshuffle_lak}(find(out_xdrop_lak__{1+nshuffle_lak}(:,2)>-1),2)+1; ckeep_lak__{1+nshuffle_lak} = cdrop_lak__{1+nshuffle_lak}(end:-1:1);
end;%for nshuffle_lak=0:n_shuffle_lak;
%%%%%%%%;
n_iteration_lak = size(trace_lak__{1},1);
QR_avg_lak_ = zeros(n_iteration_lak,1);
QR_std_lak_ = zeros(n_iteration_lak,1);
QC_avg_lak_ = zeros(n_iteration_lak,1);
QC_std_lak_ = zeros(n_iteration_lak,1);
for nshuffle_lak=1:n_shuffle_lak;
QR_avg_lak_ = QR_avg_lak_ + QR_lak__{1+nshuffle_lak};
QR_std_lak_ = QR_std_lak_ + QR_lak__{1+nshuffle_lak}.^2;
QC_avg_lak_ = QC_avg_lak_ + QC_lak__{1+nshuffle_lak};
QC_std_lak_ = QC_std_lak_ + QC_lak__{1+nshuffle_lak}.^2;
end;%for nshuffle_lak=1:n_shuffle_lak;
QR_avg_lak_ = QR_avg_lak_/n_shuffle_lak;
QR_std_lak_ = QR_std_lak_/n_shuffle_lak; QR_std_lak_ = sqrt(QR_std_lak_ - QR_avg_lak_.^2);
QC_avg_lak_ = QC_avg_lak_/n_shuffle_lak;
QC_std_lak_ = QC_std_lak_/n_shuffle_lak; QC_std_lak_ = sqrt(QC_std_lak_ - QC_avg_lak_.^2);
ZR_lak__ = cell(1,1+n_shuffle_lak);
ZC_lak__ = cell(1,1+n_shuffle_lak);
for nshuffle_lak=0:n_shuffle_lak;
ZR_lak__{1+nshuffle_lak} = (QR_lak__{1+nshuffle_lak} - QR_avg_lak_)./max(1e-12,QR_std_lak_);
ZC_lak__{1+nshuffle_lak} = (QC_lak__{1+nshuffle_lak} - QC_avg_lak_)./max(1e-12,QC_std_lak_);
end;%for nshuffle_lak=0:n_shuffle_lak;
%%%%%%%%;
for nshuffle_lak=0:n_shuffle_lak;
[~,ZR_ij_lak_{1+nshuffle_lak}] = max(ZR_lak__{1+nshuffle_lak});
tmp_r_rem_lak = r_rem_lak__{1+nshuffle_lak}(ZR_ij_lak_{1+nshuffle_lak});
label_B_lak__{1+nshuffle_lak} = zeros(M,1);
label_B_lak__{1+nshuffle_lak}(rdrop_lak__{1+nshuffle_lak}(end-tmp_r_rem_lak+1:end)) = 1;
[lP0_lak_(1+nshuffle_lak),cap_lak__{1+nshuffle_lak}] = label_to_label_enrichment_lP0(label_A_,label_B_lak__{1+nshuffle_lak});
end;%for nshuffle_lak=0:n_shuffle_lak;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
n_shuffle_dex = 32;
for nshuffle_dex=0:n_shuffle_dex;
if (mod(nshuffle_dex,10)==0); disp(sprintf(' %% nshuffle_dex %d/%d',nshuffle_dex,n_shuffle_dex)); end;
if nshuffle_dex==0; tmp_A_n_ = A_n_; end;
if nshuffle_dex>0; [tmp_Q_,~] = qr(randn(M)); tmp_A_n_ = tmp_Q_*A_n_; end;
gamma = 0.0; [out_xdrop_dex__{1+nshuffle_dex},trace_dex__{1+nshuffle_dex}] = dexcluster_nonbinary_AAAA_ver0(tmp_A_n_,gamma);
n_iter_dex__{1+nshuffle_dex} = trace_dex__{1+nshuffle_dex}(:,1); r_rem_dex__{1+nshuffle_dex} = trace_dex__{1+nshuffle_dex}(:,2); c_rem_dex__{1+nshuffle_dex} = trace_dex__{1+nshuffle_dex}(:,3);
QR_dex__{1+nshuffle_dex} = trace_dex__{1+nshuffle_dex}(:,4)./((r_rem_dex__{1+nshuffle_dex}-1).*c_rem_dex__{1+nshuffle_dex});
QC_dex__{1+nshuffle_dex} = trace_dex__{1+nshuffle_dex}(:,5)./(r_rem_dex__{1+nshuffle_dex}.*(r_rem_dex__{1+nshuffle_dex}-1));
rdrop_dex__{1+nshuffle_dex} = out_xdrop_dex__{1+nshuffle_dex}(find(out_xdrop_dex__{1+nshuffle_dex}(:,1)>-1),1)+1; rkeep_dex__{1+nshuffle_dex} = rdrop_dex__{1+nshuffle_dex}(end:-1:1);
cdrop_dex__{1+nshuffle_dex} = out_xdrop_dex__{1+nshuffle_dex}(find(out_xdrop_dex__{1+nshuffle_dex}(:,2)>-1),2)+1; ckeep_dex__{1+nshuffle_dex} = cdrop_dex__{1+nshuffle_dex}(end:-1:1);
end;%for nshuffle_dex=0:n_shuffle_dex;
%%%%%%%%;
n_iteration_dex = size(trace_dex__{1},1);
QR_avg_dex_ = zeros(n_iteration_dex,1);
QR_std_dex_ = zeros(n_iteration_dex,1);
QC_avg_dex_ = zeros(n_iteration_dex,1);
QC_std_dex_ = zeros(n_iteration_dex,1);
for nshuffle_dex=1:n_shuffle_dex;
QR_avg_dex_ = QR_avg_dex_ + QR_dex__{1+nshuffle_dex};
QR_std_dex_ = QR_std_dex_ + QR_dex__{1+nshuffle_dex}.^2;
QC_avg_dex_ = QC_avg_dex_ + QC_dex__{1+nshuffle_dex};
QC_std_dex_ = QC_std_dex_ + QC_dex__{1+nshuffle_dex}.^2;
end;%for nshuffle_dex=1:n_shuffle_dex;
QR_avg_dex_ = QR_avg_dex_/n_shuffle_dex;
QR_std_dex_ = QR_std_dex_/n_shuffle_dex; QR_std_dex_ = sqrt(QR_std_dex_ - QR_avg_dex_.^2);
QC_avg_dex_ = QC_avg_dex_/n_shuffle_dex;
QC_std_dex_ = QC_std_dex_/n_shuffle_dex; QC_std_dex_ = sqrt(QC_std_dex_ - QC_avg_dex_.^2);
ZR_dex__ = cell(1,1+n_shuffle_dex);
ZC_dex__ = cell(1,1+n_shuffle_dex);
for nshuffle_dex=0:n_shuffle_dex;
ZR_dex__{1+nshuffle_dex} = (QR_dex__{1+nshuffle_dex} - QR_avg_dex_)./max(1e-12,QR_std_dex_);
ZC_dex__{1+nshuffle_dex} = (QC_dex__{1+nshuffle_dex} - QC_avg_dex_)./max(1e-12,QC_std_dex_);
end;%for nshuffle_dex=0:n_shuffle_dex;
%%%%%%%%;
for nshuffle_dex=0:n_shuffle_dex;
[~,ZR_ij_dex_{1+nshuffle_dex}] = max(ZR_dex__{1+nshuffle_dex});
tmp_r_rem_dex = r_rem_dex__{1+nshuffle_dex}(ZR_ij_dex_{1+nshuffle_dex});
label_B_dex__{1+nshuffle_dex} = zeros(M,1);
label_B_dex__{1+nshuffle_dex}(rdrop_dex__{1+nshuffle_dex}(end-tmp_r_rem_dex+1:end)) = 1;
[lP0_dex_(1+nshuffle_dex),cap_dex__{1+nshuffle_dex}] = label_to_label_enrichment_lP0(label_A_,label_B_dex__{1+nshuffle_dex});
end;%for nshuffle_dex=0:n_shuffle_dex;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
flag_plot=1;
if flag_plot;
subplot(2,3,1); hold on;
plot(r_rem_lak__{1},cell2mat(ZR_lak__),'k-','LineWidth',0.5);
plot(r_rem_lak__{1},ZR_lak__{1},'rx-','LineWidth',2);
xlabel('r rem'); ylabel('ZR'); title('lak');
subplot(2,3,2); hold on;
plot(c_rem_lak__{1},cell2mat(ZC_lak__),'k-','LineWidth',0.5);
plot(c_rem_lak__{1},ZC_lak__{1},'bo-','LineWidth',2);
xlabel('c rem'); ylabel('ZC'); title('lak');
subplot(2,3,3); hold on;
plot(n_iter_lak__{1},cell2mat(ZR_lak__),'r-','LineWidth',0.5);
plot(n_iter_lak__{1},ZR_lak__{1},'rx-','LineWidth',2);
plot(n_iter_lak__{1},cell2mat(ZC_lak__),'b-','LineWidth',0.5);
plot(n_iter_lak__{1},ZC_lak__{1},'bo-','LineWidth',2);
xlabel('n iter'); ylabel('ZX'); title('lak');
subplot(2,3,4); hold on;
plot(r_rem_dex__{1},cell2mat(ZR_dex__),'k-','LineWidth',0.5);
plot(r_rem_dex__{1},ZR_dex__{1},'rx-','LineWidth',2);
xlabel('r rem'); ylabel('ZR'); title('dex');
subplot(2,3,5); hold on;
plot(c_rem_dex__{1},cell2mat(ZC_dex__),'k-','LineWidth',0.5);
plot(c_rem_dex__{1},ZC_dex__{1},'bo-','LineWidth',2);
xlabel('c rem'); ylabel('ZC'); title('dex');
subplot(2,3,6); hold on;
plot(n_iter_dex__{1},cell2mat(ZR_dex__),'r-','LineWidth',0.5);
plot(n_iter_dex__{1},ZR_dex__{1},'rx-','LineWidth',2);
plot(n_iter_dex__{1},cell2mat(ZC_dex__),'b-','LineWidth',0.5);
plot(n_iter_dex__{1},ZC_dex__{1},'bo-','LineWidth',2);
xlabel('n iter'); ylabel('ZX'); title('dex');
figbig;
end;%if flag_plot;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
flag_plot=0;
if flag_plot;
% cumulative intersection with bicluster indices. ;
colormap(colormap_beach());
subplot(2,2,1);imagesc(-log(cumulative_intersect_ver5(transpose(M:-1:1),rdrop_lak__{1},transpose(M:-1:1),transpose(pi_{1}(end:-1:1)))));colorbar; title('lak rows');
subplot(2,2,2);imagesc(-log(cumulative_intersect_ver5(transpose(N:-1:1),cdrop_lak__{1},transpose(N:-1:1),transpose(pi_{2}(end:-1:1)))));colorbar; title('lak cols');
subplot(2,2,3);imagesc(-log(cumulative_intersect_ver5(transpose(M:-1:1),rdrop_dex__{1},transpose(M:-1:1),transpose(pi_{1}(end:-1:1)))));colorbar; title('dex rows');
subplot(2,2,4);imagesc(-log(cumulative_intersect_ver5(transpose(N:-1:1),cdrop_dex__{1},transpose(N:-1:1),transpose(pi_{2}(end:-1:1)))));colorbar; title('dex cols');
figbig;
end;%if flag_plot;
