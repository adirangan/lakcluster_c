function [s,d_lo_,d_hi_,llr,s_,llr_] = gsplit(d_);
% splits 1-dimensional data d_, ;
% maximizing the log-likelihood-ratio between: ;
% P(data | 2 gaussians) / P(data | 1 gaussian). ;
if (nargin<1);
flag_test_calculation=0;
if flag_test_calculation;
tmp_ = [randn(81,1);randn(291,1)+4.2]; 
[s_A,d_lo_A_,d_hi_A_,llr_A,s_A_,llr_A_] = gsplit_slow(tmp_);
[s_B,d_lo_B_,d_hi_B_,llr_B,s_B_,llr_B_] = gsplit(tmp_);
disp(sprintf(' %% error %0.6f',fnorm(llr_A_-llr_B_)));
disp('returning');return;
end;%if flag_test_calculation;
flag_test_timing=1;
if flag_test_timing;
tmp_ = [randn(1181,1);randn(5291,1)+4.2];
tic; [s_B,d_lo_B_,d_hi_B_,llr_B,s_B_,llr_B_] = gsplit(tmp_); disp(sprintf(' %% gsplit_fast %0.2fs',toc));
tic; [s_A,d_lo_A_,d_hi_A_,llr_A,s_A_,llr_A_] = gsplit_slow(tmp_); disp(sprintf(' %% gsplit_slow %0.2fs',toc));
plot(s_A_,llr_A_,'k-');
disp(sprintf(' %% error %0.6f',fnorm(llr_A_-llr_B_)));
disp('returning');return;
end;%if flag_test_timing;
tmp_ = [randn(81,1);randn(291,1)+4.2]; 
[s,d_lo_,d_hi_,llr,s_,llr_] = gsplit(tmp_); 
subplot(1,2,1);
hold on; stairs(sort(tmp_),1:length(tmp_)); plot(zeros(length(tmp_),1)+s,1:length(tmp_),'k-');
xlim([min(tmp_),max(tmp_)]); ylim([1,length(tmp_)]);
xlabel('random variable'); ylabel('rank');
title('cumulative-distribution-function');
subplot(1,2,2);
plot(s_,llr_,'k.');
xlim([min(tmp_),max(tmp_)]); 
xlabel('random variable'); ylabel('log-likelihood-ratio');
title('log-likelihood-ratio');
figbig;
disp('returning');return;
end;%if (nargin<1);

d_ = sort(d_(:)); n_d = length(d_);
s=d_(1); d_lo_ = d_; d_hi_ = []; llr=1; llr_=[]; s_=[];
if (n_d>3);
d2_ = d_.^2;
mu_lo_ = cumsum(d_)./transpose(1:n_d);
mu_hi_ = cumsum(d_,'reverse')./flip(transpose(1:n_d));
assert(abs(mu_lo_(end)-mu_hi_(1))<1e-6);
sg_lo_ = sqrt(cumsum(d2_)./transpose(1:n_d) - mu_lo_.^2);
sg_hi_ = sqrt(cumsum(d2_,'reverse')./flip(transpose(1:n_d)) - mu_hi_.^2);
assert(abs(sg_lo_(end)-sg_hi_(1))<1e-6);
mu_1g = mu_lo_(end); sg_1g = sg_lo_(end);
ll_1g = log(1/(sqrt(2*pi)*sg_1g)) - sum((d_-mu_1g).^2/(2*sg_1g^2));
llr_ = zeros(n_d-3,1); s_ = (d_(2:end-2) + d_(3:end-1))/2;
for nd=2:n_d-2;
mu_lo = mu_lo_(nd); mu_hi = mu_hi_(nd+1);
sg_lo = sg_lo_(nd); sg_hi = sg_hi_(nd+1);
l_lo = nd/n_d; l_hi = (n_d-nd)/n_d;
g_lo_ = l_lo*(1/(sqrt(2*pi)*sg_lo)*exp(-(d_-mu_lo).^2/(2*sg_lo^2)));
g_hi_ = l_hi*(1/(sqrt(2*pi)*sg_hi)*exp(-(d_-mu_hi).^2/(2*sg_hi^2)));
llr_(-1+nd) = sum(log(g_lo_ + g_hi_)) - ll_1g;
end;%for nd=2:n_d-2;
[llr,nd] = max(llr_); 
s = s_(nd); nd = 1+nd;
d_lo_ = d_(1:nd); d_hi_ = d_(nd+1:end);
end;%if (n_d>3);
