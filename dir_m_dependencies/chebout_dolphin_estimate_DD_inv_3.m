function ...
[ ...
 parameter ...
,DD_vvt__ ...
,det_DD_t_ ...
,DD_inv_vvt__ ...
,det_DD_inv_t_ ...
] = ...
chebout_dolphin_estimate_DD_inv_3( ...
 parameter ...
,dt_ ...
,BB_inv__ ...
,CC_inv__ ...
);

verbose=0;

if isempty(parameter); parameter = struct('type','parameter'); end;
if (~isfield(parameter,'tolerance_master')); parameter.tolerance_master = 1e-2; end;
tolerance_master = parameter.tolerance_master;

n_dt = numel(dt_);
n_var = size(BB_inv__,1);
DD_vvt__ = zeros(n_var^2,n_dt);
det_DD_t_ = zeros(n_dt,1);
if nargout> 3;
DD_inv_vvt__ = zeros(n_var^2,n_dt);
det_DD_inv_t_ = zeros(n_dt,1);
end;%if nargout> 3;
[u_dt_,index_u_from_all_,index_all_from_u_] = unique(round(dt_/tolerance_master)*tolerance_master,'stable');
index_u_from_all_ = index_u_from_all_ - 1; index_all_from_u_ = index_all_from_u_ - 1;
n_u_dt = numel(u_dt_);
if (verbose); disp(sprintf(' %% n_u_dt %d',n_u_dt)); end;
DD_vvu__ = zeros(n_var^2,n_u_dt);
det_DD_u_ = zeros(n_u_dt,1);
if nargout> 3;
DD_inv_vvu__ = zeros(n_var^2,n_u_dt);
det_DD_inv_u_ = zeros(n_u_dt,1);
end;%if nargout> 3;
for nudt=0:n_u_dt-1;
dt = u_dt_(1+nudt);
if nargout> 3;
[ ...
 parameter ...
,DD__ ...
,det_DD ...
,DD_inv__ ...
,det_DD_inv ...
] = ...
dolphin_estimate_DD_inv_2( ...
 parameter ...
,dt ...
,BB_inv__ ...
,CC_inv__ ...
);
end;%if nargout> 3;
if nargout<=3;
[ ...
 parameter ...
,DD__ ...
,det_DD ...
] = ...
dolphin_estimate_DD_inv_2( ...
 parameter ...
,dt ...
,BB_inv__ ...
,CC_inv__ ...
);
end;%if nargout<=3;
DD_vvu__(:,1+nudt) = reshape(DD__,[1,n_var^2]);
det_DD_u_(1+nudt) = det_DD;
if nargout> 3;
DD_inv_vvu__(:,1+nudt) = reshape(DD_inv__,[1,n_var^2]);
det_DD_inv_u_(1+nudt) = det_DD_inv;
end;%if nargout> 3;
end;%for nudt=0:n_u_dt-1;
DD_vvt__ = DD_vvu__(:,1+index_all_from_u_);
det_DD_t_ = det_DD_u_(1+index_all_from_u_);
if nargout> 3;
DD_inv_vvt__ = DD_inv_vvu__(:,1+index_all_from_u_);
det_DD_inv_t_ = det_DD_inv_u_(1+index_all_from_u_);
end;%if nargout> 3;
