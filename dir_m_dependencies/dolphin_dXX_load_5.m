%%%%%%%%;
% adding segregation by gender (M/F). ;
%%%%%%%%;
fname_data = sprintf('%s/Dolphin_Data_201918755_s2.xlsx',dir_trunk);
T_ = readtable(fname_data);
aid_ori_ = T_{:,1};
sex_ori_ = T_{:,2};
isM_ori_ = cellfun(@(x)strcmp(x,'M'),sex_ori_);
isF_ori_ = cellfun(@(x)strcmp(x,'F'),sex_ori_);
age_ori_ = T_{:,4};
age_ori_M_ = age_ori_(1+efind(isM_ori_));
age_ori_F_ = age_ori_(1+efind(isF_ori_));
disp(sprintf(' %% A: %d prctile [ 5 15 20 30 65 70 85 95 ] %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f ',numel(age_ori_),prctile(age_ori_,[ 5 15 20 30 65 70 85 95 ])));
disp(sprintf(' %% M: %d prctile [ 5 15 20 30 65 70 85 95 ] %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f ',sum(isM_ori_),prctile(age_ori_M_,[ 5 15 20 30 65 70 85 95 ])));
disp(sprintf(' %% F: %d prctile [ 5 15 20 30 65 70 85 95 ] %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f %5.2f ',sum(isF_ori_),prctile(age_ori_F_,[ 5 15 20 30 65 70 85 95 ])));
h_age_ = 1:65;
h_age_M_ = hist(age_ori_M_,h_age_);
h_age_F_ = hist(age_ori_F_,h_age_);
%%%%%%%%;
fname_fig = sprintf('%s/dolphin_age_hist_MF',dir_jpg);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
figure(1); clf; figmed; figbeach;
subplot(1,1,1);
bar(h_age_,[h_age_F_ ; h_age_M_],'grouped','BarWidth',1.5);
xlabel('age');
ylabel('number');
legend({'F','M'});
title('Histogram of ages for Female (blue) and Male (red) dolphins');
disp(sprintf(' %% writing %s',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));
if ( exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s found, not creating',fname_fig));
end;%if ( exist(sprintf('%s.jpg',fname_fig),'file'));
%%%%%%%%;

nvar_base = 7;
dat_ori__ = T_{:,(1+nvar_base):end};
n_smp_ori = size(dat_ori__,1);
n_var_ori = size(dat_ori__,2);
string_dat_ori_name_ = cell(n_var_ori,1);
for nvar=0:n_var_ori-1;
string_dat_ori_name_{1+nvar} = T_.Properties.VariableNames{1+nvar_base+nvar};
end;%for nvar=0:n_var_ori-1;

%%%%%%%%;
% log-normalizing SED60 and GGT. ;
%%%%%%%%;
nvar = efind(strcmp(string_dat_ori_name_,'SED60'));
dat_ori__(:,1+nvar) = log(1+dat_ori__(:,1+nvar));
string_dat_ori_name_{1+nvar} = sprintf('log(1+%s)',string_dat_ori_name_{1+nvar});
nvar = efind(strcmp(string_dat_ori_name_,'GGT'));
dat_ori__(:,1+nvar) = log(1+dat_ori__(:,1+nvar));
string_dat_ori_name_{1+nvar} = sprintf('log(1+%s)',string_dat_ori_name_{1+nvar});
%%%%%%%%;
% missingness threshold for variables. ;
%%%%%%%%;
dat_ret__ = dat_ori__;
mss_var_threshold = 500;
index_var_rmv_ = efind(sum(~isfinite(dat_ret__),1)>mss_var_threshold);
index_var_ret_ = setdiff(0:n_var_ori-1,index_var_rmv_);
dat_ret__ = dat_ret__(:,1+index_var_ret_);
n_var_ret = size(dat_ret__,2);
string_dat_ret_name_ = cell(n_var_ret,1);
for nvar=0:n_var_ret-1;
string_dat_ret_name_{1+nvar} = string_dat_ori_name_{1+index_var_ret_(1+nvar)};
end;%for nvar=0:n_var_ret-1;
%%%%%%%%;
% removing RBCDist values above 40 and Albumin values below 2.5. ;
%%%%%%%%;
tmp_index_var_ = efind(strcmp(string_dat_ret_name_,'RBCDist'));
tmp_index_smp_ = efind(dat_ret__(:,1+tmp_index_var_)> 40);
dat_ret__(1+tmp_index_smp_,1+tmp_index_var_) = NaN;
tmp_index_var_ = efind(strcmp(string_dat_ret_name_,'Albumin'));
tmp_index_smp_ = efind(dat_ret__(:,1+tmp_index_var_)<=2.5);
dat_ret__(1+tmp_index_smp_,1+tmp_index_var_) = NaN;
%%%%%%%%;
% constrain samples. ;
%%%%%%%%;
index_smp_ret_ = 0:n_smp_ori-1;
%%%%%%%%;
% missingness threshold for samples. ;
%%%%%%%%;
mss_smp_threshold = 7;
index_smp_ret_ = setdiff(index_smp_ret_,efind(sum(~isfinite(dat_ret__),2)>mss_smp_threshold));
%%%%%%%%;
% sex constrain ;
%%%%%%%%;
if ~isempty(sex_constrain);
index_smp_ret_ = setdiff(index_smp_ret_,efind(~cellfun(@(x)strcmp(x,sex_constrain),sex_ori_)));
end;%if ~isempty(sex_constrain);
%%%%%%%%;
dat_ret__ = dat_ret__(1+index_smp_ret_,:);
n_smp_ret = size(dat_ret__,1);
%%%%%%%%;
% check sample constraints. ;
%%%%%%%%;
for nsmp_ret=0:n_smp_ret-1;
assert(sum(~isfinite(dat_ret__(1+nsmp_ret,:)))<=mss_smp_threshold);
if ~isempty(sex_constrain);
assert(strcmp(sex_ori_{1+index_smp_ret_(1+nsmp_ret)},sex_constrain));
end;%if ~isempty(sex_constrain);
end;%for nsmp_ret=0:n_smp_ret-1;

aid_ret_ = aid_ori_(1+index_smp_ret_);
sex_ret_ = sex_ori_(1+index_smp_ret_);
age_ret_ = age_ori_(1+index_smp_ret_);

aid_ = aid_ret_;
sex_ = sex_ret_;
age_ = age_ret_;
dat_nrm__ = dat_ret__;
[n_smp,n_var] = size(dat_nrm__);
string_dat_name_ = string_dat_ret_name_;
prctile_threshold = 0.01;
for nvar=0:n_var-1;
tmp_index_ = efind(isfinite(dat_nrm__(:,1+nvar)));
tmp_lo = prctile(dat_nrm__(1+tmp_index_,1+nvar),100*prctile_threshold);
tmp_hi = prctile(dat_nrm__(1+tmp_index_,1+nvar),100*(1-prctile_threshold));
dat_nrm__(1+tmp_index_,1+nvar) = max(tmp_lo,min(tmp_hi,dat_nrm__(1+tmp_index_,1+nvar)));
end;%for nvar=0:n_var-1;

n_step = 1; dt_all_ = dolphin_dt_all_0(aid_,age_,n_step);
%%%%%%%%;
% global correction for drift. ;
%%%%%%%%;
[a_drift_,b_drift_] = dolphin_estimate_ab_0(aid_,age_,dat_nrm__);
%%%%;
u_aid_ = unique(aid_);
n_aid = numel(u_aid_);
n_aid_ = zeros(n_aid,1);
index_aid__ = cell(n_aid,1);
for naid=0:n_aid-1;
tmp_index_aid_ = efind(aid_==u_aid_(1+naid));
index_aid__{1+naid} = tmp_index_aid_;
n_aid_(1+naid) = numel(index_aid__{1+naid});
tmp_dat_nrm__ = dat_nrm__(1+tmp_index_aid_,:);
tmp_age_ = age_(1+tmp_index_aid_);
tmp_aid_ = aid_(1+tmp_index_aid_);
%%%%%%%%;
% local correction for drift (i.e., for each dolphin). ;
%%%%%%%%;
if (flag_drift0==0); [tmp_a_drift_,tmp_b_drift_] = dolphin_estimate_ab_0(tmp_aid_,tmp_age_,tmp_dat_nrm__); end;
if (flag_drift0==2); tmp_dat_nrm__ = tmp_dat_nrm__ - (ones(numel(tmp_age_),1)*reshape(tmp_b_drift_,[1,n_var]) + tmp_age_*reshape(tmp_a_drift_,[1,n_var])); end;
if (flag_drift0==1); tmp_dat_nrm__ = tmp_dat_nrm__ - (ones(numel(tmp_age_),1)*reshape(b_drift_,[1,n_var]) + tmp_age_*reshape(a_drift_,[1,n_var])); end;
if (flag_drift0==0); tmp_dat_nrm__ = tmp_dat_nrm__; end;
if (flag_drift0==0 & flag_center==1); tmp_dat_nrm__ = normalize(tmp_dat_nrm__,'zscore'); end;
if (flag_drift0==0 & flag_center==0); tmp_dat_nrm__ = tmp_dat_nrm__; end;
dat_nrm__(1+tmp_index_aid_,:) = tmp_dat_nrm__;
end;%for naid=0:n_aid-1;
if (flag_drift0>=1 & flag_center==1); dat_nrm__ = normalize(dat_nrm__,'zscore'); end;
if (flag_drift0>=1 & flag_center==0); dat_nrm__ = dat_nrm__; end;
%%%%;
n_step = 1; relative_variation = dolphin_relative_variation_0(aid_,age_,dat_nrm__,n_step);

%%%%%%%%;
% select dolphin. ;
%%%%%%%%;
if dXX>0; 
naid = efind(u_aid_==dXX);
if (numel(naid)==0); disp(sprintf(' %% dXX %d not found',dXX)); return; end;
disp(sprintf(' %% dXX %d, naid %d',dXX,naid));
tmp_index_aid_ = efind(aid_==u_aid_(1+naid));
aid_ = aid_(1+tmp_index_aid_);
age_ = age_(1+tmp_index_aid_);
dat_nrm__ = dat_nrm__(1+tmp_index_aid_,:);
end;%if dXX>0; 

dat__ = dat_nrm__;

