function lisa_dosage_pca_ver6(n_scramble_use,flag_stage);
% This function loads dosage data (line-by-line) and calculates a running-dot-product between the dosage data and a pca-vector V calculated using the genotyped data from arm1. ;
% This is updated to consider either n_scramble==0 (i.e. r0) or n_scramble==1 (i.e., r1). ;
% In addition, the genotyped data from arm2 alone is extracted from the dosage data (i.e., geno) and compared against the pca-vector V calculated using only the genotyped data from intersect(arm1,arm2). ;

% Note the following asymmetry regarding sparse matrices: ;
% summing over columns is *much* faster than summing over rows. ;
% (i.e., about 25 times faster for the example below). ;
%{
tmp_N = 1024*8;
tmp_ = sparse(randperm(tmp_N),randperm(tmp_N),1,tmp_N,tmp_N);
disp('sum(*,2)'); tic;for nl=1:1024;sum(tmp_(:,max(1,min(tmp_N,floor(tmp_N*rand())))),2); end;toc;
disp('sum(*,1)'); tic;for nl=1:1024;sum(tmp_(max(1,min(tmp_N,floor(tmp_N*rand()))),:),1); end;toc;
 %}

%clear; n_scramble_use = 1; 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_stage==0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

setup; verbose=1; 
cl_num_arm1 = 4; cl_num_arm2 = 1;
flag_dex_vs_lak = 'dex'; if (strcmp(flag_dex_vs_lak,'lak')); gamma = 0.001; mc_string = ''; else; gamma = 0.004; mc_string = ''; end; 
flag_reverse_use = 0;
B_MLT=34;n_mds=20;
pca_rank = 2; pca_b_mlt = 44;
set(groot,'defaultFigureCreateFcn',@(fig,~)addToolbarExplorationButtons(fig));
set(groot,'defaultAxesCreateFcn',@(ax,~)set(ax.Toolbar,'Visible','off'));
dir_root = '/data/rangan/dir_bcc';
%dir_root = '/home/grouther';
addpath(sprintf('%s/dir_code_022316',dir_root));
addpath(sprintf('%s/dir_PGC_20180304/dir_m',dir_root));
dir_trunk = sprintf('%s/dir_PGC_20180304',dir_root);
%%%%%%%%;
verbose = 1; n_figure = 1;
B_MLT = 34; n_mds = 20; n_scramble = 1; n_shuffle = 0;
flag_dex_vs_lak = {'dex'};
if (strcmp(flag_dex_vs_lak{1},'dex')); gamma = 0.004; mc_string = ''; end; 
if (strcmp(flag_dex_vs_lak{1},'lak')); gamma = 0.001; mc_string = 'm20_p85'; end;
flag_reverse = flag_reverse_use;
cl_num = cl_num_arm1;
n_maf = 5; n_cov = 2;
%%%%%%%%;
lisa_setprefix_ver2 ;
lisa_setnames_ver2 ;
lisa_xdropextract_ver2 ;
lisa_loadmdsfambim_ver2 ;
lisa_mxcheck_ver2 ;
lisa_studyindex_ver2 ;
lisa_traceextract_ver2 ;
%%%%%%%%;
n_patient_F_arm1 = n_patient_F;
bim_arm1_ = bim_;
fam_arm1_ = fam_;
fam_name_arm1_ = fam_name_;
mds_sort_arm1_ = mds_sort_;
string_prefix_arm1 = string_prefix;
%string_name_arm1 = string_name;
string_name_r1_arm1 = string_name;
string_name_r0_arm1 = string_name_r0;
dir__in_arm1 = dir__in;
%dir_out_s0000_arm1 = dir_out_s0000;
dir_out_s0000_r1_arm1 = dir_out_s0000;
dir_out_s0000_r0_arm1 = dir_out_s0000_r0;
%dir_out_trace_arm1 = dir_out_trace;
dir_out_trace_r1_arm1 = dir_out_trace;
dir_out_trace_r0_arm1 = dir_out_trace_r0;
trace_r1_arm1_ = trace_;
%%%%%%%%;
clear bim_ fam_ mds_sort_ mds_;
%%%%%%%%;
verbose = 1;
B_MLT = 34; n_mds = 20; n_scramble = 1; n_shuffle = 0;
flag_dex_vs_lak = {'dex'};
if (strcmp(flag_dex_vs_lak{1},'dex')); gamma = 0.004; mc_string = ''; end; 
if (strcmp(flag_dex_vs_lak{1},'lak')); gamma = 0.001; mc_string = 'm20_p85'; end;
flag_reverse = flag_reverse_use;
cl_num = cl_num_arm2;
n_maf = 5; n_cov = 2;
%%%%%%%%;
lisa_setprefix_ver2 ;
lisa_setnames_ver2 ;
lisa_xdropextract_ver2 ;
lisa_loadmdsfambim_ver2 ;
lisa_mxcheck_ver2 ;
lisa_studyindex_ver2 ;
lisa_traceextract_ver2 ;
%%%%%%%%;
n_patient_F_arm2 = n_patient_F;
study_trunk_arm2_ = study_trunk_;
study_index_arm2_ = study_index_;
study_name_arm2_ = study_name_;
n_study_arm2 = n_study;
bim_arm2_ = bim_;
fam_arm2_ = fam_;
fam_name_arm2_ = fam_name_;
mds_sort_arm2_ = mds_sort_;
string_prefix_arm2 = string_prefix;
%string_name_arm2 = string_name;
string_name_r1_arm2 = string_name;
string_name_r0_arm2 = string_name_r0;
dir__in_arm2 = dir__in;
%dir_out_s0000_arm2 = dir_out_s0000;
dir_out_s0000_r1_arm2 = dir_out_s0000;
dir_out_s0000_r0_arm2 = dir_out_s0000_r0;
%dir_out_trace_arm2 = dir_out_trace;
dir_out_trace_r1_arm2 = dir_out_trace;
dir_out_trace_r0_arm2 = dir_out_trace_r0;
trace_r1_arm2_ = trace_;
%%%%%%%%;
clear bim_ fam_ mds_sort_ mds_;
%%%%%%%%;

%%%%%%%%%%%%%%%%;
% copy fam file. ;
%%%%%%%%%%%%%%%%;
ni=1;
fam_fam_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_iid_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_pat_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_mat_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_sex_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_phe_arm1_ = fam_arm1_{ni}; ni=ni+1;
fam_dir_arm1_ = fam_arm1_{ni}; ni=ni+1;
%%%%%%%%%%%%%%%%;
% extract mc;
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_D_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_X_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_D_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm1,string_prefix_arm1); fcheck(tmp_fname);
mr_X_arm1_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==1);
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
disp(sprintf('mr_D_arm1_ error: %0.16f',norm(cast(mr_D_arm1_,'double')-cast(fam_phe_arm1_==2,'double'))));
disp(sprintf('mr_X_arm1_ error: %0.16f',norm(cast(mr_X_arm1_,'double')-cast(fam_phe_arm1_==1,'double'))));
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
disp(sprintf('mr_D_arm1_ error: %0.16f',norm(cast(mr_D_arm1_,'double')-cast(fam_phe_arm1_==1,'double'))));
disp(sprintf('mr_X_arm1_ error: %0.16f',norm(cast(mr_X_arm1_,'double')-cast(fam_phe_arm1_==2,'double'))));
end;%if (flag_reverse_use==1);

%%%%%%%%%%%%%%%%;
% copy fam file. ;
%%%%%%%%%%%%%%%%;
ni=1;
fam_fam_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_iid_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_pat_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_mat_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_sex_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_phe_arm2_ = fam_arm2_{ni}; ni=ni+1;
fam_dir_arm2_ = fam_arm2_{ni}; ni=ni+1;
%%%%%%%%%%%%%%%%;
% extract mc;
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_D_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_X_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
tmp_fname = sprintf('%s/%s_mr_Z_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_D_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
tmp_fname = sprintf('%s/%s_mr_A_full.b16',dir__in_arm2,string_prefix_arm2); fcheck(tmp_fname);
mr_X_arm2_ = tutorial_binary_uncompress(tmp_fname)>0;
end;%if (flag_reverse_use==1);
%%%%%%%%%%%%%%%%;
if (flag_reverse_use==0);
disp(sprintf('mr_D_arm2_ error: %0.16f',norm(cast(mr_D_arm2_,'double')-cast(fam_phe_arm2_==2,'double'))));
disp(sprintf('mr_X_arm2_ error: %0.16f',norm(cast(mr_X_arm2_,'double')-cast(fam_phe_arm2_==1,'double'))));
end;%if (flag_reverse_use==0);
if (flag_reverse_use==1);
disp(sprintf('mr_D_arm2_ error: %0.16f',norm(cast(mr_D_arm2_,'double')-cast(fam_phe_arm2_==1,'double'))));
disp(sprintf('mr_X_arm2_ error: %0.16f',norm(cast(mr_X_arm2_,'double')-cast(fam_phe_arm2_==2,'double'))));
end;%if (flag_reverse_use==1);

%%%%%%%%;
dir_out_s0000_pca_r0_arm1 = sprintf('%s/dir_pca',dir_out_s0000_r0_arm1);
if (~exist(dir_out_s0000_pca_r0_arm1,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_r0_arm1)); mkdir(dir_out_s0000_pca_r0_arm1); end;
dir_out_s0000_pca_r1_arm1 = sprintf('%s/dir_pca',dir_out_s0000_r1_arm1);
if (~exist(dir_out_s0000_pca_r1_arm1,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_r1_arm1)); mkdir(dir_out_s0000_pca_r1_arm1); end;
dir_out_s0000_pca_r0_arm2 = sprintf('%s/dir_pca',dir_out_s0000_r0_arm2);
if (~exist(dir_out_s0000_pca_r0_arm2,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_r0_arm2)); mkdir(dir_out_s0000_pca_r0_arm2); end;
dir_out_s0000_pca_r1_arm2 = sprintf('%s/dir_pca',dir_out_s0000_r1_arm2);
if (~exist(dir_out_s0000_pca_r1_arm2,'dir')); disp(sprintf(' %% creating %s',dir_out_s0000_pca_r1_arm2)); mkdir(dir_out_s0000_pca_r1_arm2); end;
%%%%%%%%;

niteration = 275;
%%%%%%%%%%%%%%%%;
%extract rdrop ;
%%%%%%%%%%%%%%%%;
out_xdrop_a_r0_arm1_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r0_arm1));
tmp_ = out_xdrop_a_r0_arm1_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r0_arm1_ = tmp_; clear out_xdrop_a_r0_arm1_; clear tmp_;
out_xdrop_a_r1_arm1_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r1_arm1));
tmp_ = out_xdrop_a_r1_arm1_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r1_arm1_ = tmp_; clear out_xdrop_a_r1_arm1_; clear tmp_;
out_xdrop_a_r0_arm2_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r0_arm2));
tmp_ = out_xdrop_a_r0_arm2_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r0_arm2_ = tmp_; clear out_xdrop_a_r0_arm2_; clear tmp_;
out_xdrop_a_r1_arm2_ = textread(sprintf('%s/out_xdrop_a.txt',dir_out_s0000_r1_arm2));
tmp_ = out_xdrop_a_r1_arm2_(:,1); tmp_ = tmp_(find(tmp_>-1)); %tmp_ = tmp_(end:-1:1); 
tmp_ = tmp_+1; rdrop_a_r1_arm2_ = tmp_; clear out_xdrop_a_r1_arm2_; clear tmp_;
%%%%%%%%%%%%%%%%;
%extract trace ;
%%%%%%%%%%%%%%%%;
out_trace_r0_arm1_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r0_arm1));
out_trace_r1_arm1_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r1_arm1));
out_trace_r0_arm2_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r0_arm2));
out_trace_r1_arm2_ = textread(sprintf('%s/out_trace.txt',dir_out_s0000_r1_arm2));
%%%%%%%%%%%%%%%%;
disp(sprintf(' %% niteration %d',niteration));
%%%%%%%%;
if (n_scramble_use==0);
pca_infix_rx_base = sprintf('pca_ni%d_tst%d',niteration,cl_num_arm1);
dir_out_s0000_pca_rx_arm1 = dir_out_s0000_pca_r0_arm1;
dir_out_s0000_pca_rx_arm2 = dir_out_s0000_pca_r0_arm2;
rdrop_a_rx_arm1_ = rdrop_a_r0_arm1_;
out_trace_rx_arm1_ = out_trace_r0_arm1_;
out_trace_rx_arm2_ = out_trace_r0_arm2_;
end;%if (n_scramble_use==0);
if (n_scramble_use==1);
pca_infix_rx_base = sprintf('pca_ni%d_tst%d',niteration,cl_num_arm1);
dir_out_s0000_pca_rx_arm1 = dir_out_s0000_pca_r1_arm1;
dir_out_s0000_pca_rx_arm2 = dir_out_s0000_pca_r1_arm2;
rdrop_a_rx_arm1_ = rdrop_a_r1_arm1_;
out_trace_rx_arm1_ = out_trace_r1_arm1_;
out_trace_rx_arm2_ = out_trace_r1_arm2_;
end;%if (n_scramble_use==1);
%%%%%%%%;
%pca_infix_rx_base = sprintf('pca_ni%d_tst%d',niteration,cl_num_arm1);
V_rx_trnx_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_.mda',dir_out_s0000_pca_rx_arm1,pca_infix_rx_base,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with (all) the snps in arm1, ordered to apply to arm1. ;
pca_infix_rx_arm1 = sprintf('pca_ni%d_tst%d',niteration,cl_num_arm2);
V_rx_tstx_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_.mda',dir_out_s0000_pca_rx_arm1,pca_infix_rx_arm1,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with the snps in both arm1 and arm2, ordered to apply to arm1. ;
V_rx_tstx_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_V_arm2_.mda',dir_out_s0000_pca_rx_arm1,pca_infix_rx_arm1,pca_rank,pca_b_mlt)); %<-- This is the V-vector associated with the snps in both arm1 and arm2, ordered to apply to arm2. ;
% Note that V_rx_tstx_arm1_ and V_rx_tstx_arm2_ are simply permutations of one another. ;
% While V_rx_trnx_arm1_ is not a permutation of V_rx_tstx_arm1_, these two vectors are quite correlated. ; plot(V_rx_trnx_arm1_(:,1),V_rx_tstx_arm1_(:,1),'.') ;
%%%%%%%%;
pca_proj_infix_rx_arm1 = sprintf('pca_proj_arm1_ni%d_tst%d',niteration,cl_num_arm2); %<-- Note that here we use the projection of arm1, with snps limited by overlap with arm two ;
DnV_rx_tstx_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_AnV_.mda',dir_out_s0000_pca_rx_arm1,pca_proj_infix_rx_arm1,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_rx from arm one, since this is where the bicluster is. ;
XnV_rx_tstx_arm1_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_ZnV_.mda',dir_out_s0000_pca_rx_arm1,pca_proj_infix_rx_arm1,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_rx from arm one, since this is where the bicluster is. ;
%if (strcmp(flag_dex_vs_lak,'lak')); DnV_rx_tstx_arm1_ = abs(DnV_rx_tstx_arm1_); XnV_rx_tstx_arm1_ = abs(XnV_rx_tstx_arm1_); end;%if (strcmp(flag_dex_vs_lak,'lak'));
mr_D_rmv_rx_arm1_ = mr_D_arm1_*0; mr_D_rmv_rx_arm1_(rdrop_a_rx_arm1_(1:end-out_trace_rx_arm1_(niteration,2)))=1;
mr_D_ret_rx_arm1_ = mr_D_arm1_*0; mr_D_ret_rx_arm1_(rdrop_a_rx_arm1_(end-out_trace_rx_arm1_(niteration,2)+1:end))=1;
%%%%%%%%;
pca_proj_infix_rx_arm2 = sprintf('pca_proj_arm2_ni%d_tst%d',niteration,cl_num_arm2); %<-- Note that here we use the projection of arm2, with snps limited by overlap with arm two ;
DnV_rx_tstx_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_AnV_.mda',dir_out_s0000_pca_rx_arm1,pca_proj_infix_rx_arm2,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_rx from arm one, since this is where the bicluster is. ;
XnV_rx_tstx_arm2_ = mda_read_r8(sprintf('%s/%s_k%d_B%d_ZnV_.mda',dir_out_s0000_pca_rx_arm1,pca_proj_infix_rx_arm2,pca_rank,pca_b_mlt)); %<-- Note that we use dir_out_s0000_pca_rx from arm one, since this is where the bicluster is. ;
%if (strcmp(flag_dex_vs_lak,'lak')); DnV_rx_tstx_arm2_ = abs(DnV_rx_tstx_arm2_); XnV_rx_tstx_arm2_ = abs(XnV_rx_tstx_arm2_); end;%if (strcmp(flag_dex_vs_lak,'lak'));

%%%%%%%%;
% establish snp-indices for each allelic combination. ;
%%%%%%%%;
%%%%%%%%;
% First arm1: ;
%%%%%%%%;
bo1_ = bim_arm1_{2}; allele1_arm1_ = bim_arm1_{5}; allele2_arm1_ = bim_arm1_{6}; alleletype_arm1_ = bim_arm1_{7}; atfr_arm1_ = bim_arm1_{9};
[bu1_,bo1_to_bu1_,bu1_to_bo1_] = unique(bo1_);
bo1_by_bu1_xref_ = sparse(1:length(bo1_),bu1_to_bo1_,1,length(bo1_),length(bu1_));
%%%%%%%%;
flag_check=0;
if flag_check;
disp(sprintf(' %% checking bo1_by_bu1_xref_'));
nbu1=max(1,min(length(bu1_),floor(length(bu1_)*rand())));
disp(sprintf(' %% nbu1 %.9d: bu1_{nbu1} %s',nbu1,bu1_{nbu1}));
tmp_bo1_ = find(sum(bo1_by_bu1_xref_(:,nbu1),2));
for nl01=1:length(tmp_bo1_);
nbo1 = tmp_bo1_(nl01);
disp(sprintf(' %% nbo1 %.9d: bo1_{nbo1} %s (%s)',nbo1,bo1_{nbo1},alleletype_arm1_{nbo1}));
assert(strcmp(bo1_{nbo1},bu1_{nbu1}));
end;%for nl01=1:length(tmp_bo1_);
end;%if flag_check;
%%%%%%%%;
flag_check = 0; [V_rx_trnx_arm1_and_,V_rx_tstx_arm1_and_,atfr_arm1_and_] = lisa_dosage_pca_helper_2('and',alleletype_arm1_,bo1_,bu1_,V_rx_trnx_arm1_,V_rx_tstx_arm1_,atfr_arm1_,flag_check,bo1_by_bu1_xref_);

co1_ = find(strcmp(alleletype_arm1_,'and'));
[cu1_,co1_to_cu1_,cu1_to_co1_] = unique(bo1_(co1_));
co1_by_cu1_xref_ = sparse(1:length(co1_),cu1_to_co1_,1,length(co1_),length(cu1_));
[du1_,du1_to_bu1_,du1_to_cu1_] = intersect(bu1_,cu1_,'stable');
bu1_by_du1_xref_ = sparse(du1_to_bu1_,1:length(du1_),1,length(bu1_),length(du1_));
cu1_by_du1_xref_ = sparse(du1_to_cu1_,1:length(du1_),1,length(cu1_),length(du1_));
V_rx_trnx_arm1_and_ = zeros(length(bu1_),2);
atfr_arm1_and_ = zeros(length(bu1_),1);
for ndu1=1:length(du1_);
nbu1 = find(sum(bu1_by_du1_xref_(:,ndu1),2));
ncu1 = find(sum(cu1_by_du1_xref_(:,ndu1),2));
nco1 = find(sum(co1_by_cu1_xref_(:,ncu1),2));
nbo1 = co1_(nco1);
V_rx_trnx_arm1_and_(nbu1,:) = V_rx_trnx_arm1_(nbo1,:);
atfr_arm1_and_(nbu1) = atfr_arm1_(nbo1);
end;%for ndu1=1:length(du1_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_rx_trnx_arm1_and_'));
nbu1=max(1,min(length(bu1_),floor(length(bu1_)*rand())));
tmp_snp = bu1_{nbu1};
nbo1_and = find(strcmp(bo1_,tmp_snp) & strcmp(alleletype_arm1_,'and'));
if ~isempty(nbo1_and);
assert(length(intersect(nbo1_and,find(sum(bo1_by_bu1_xref_(:,nbu1),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,bo1_{nbo1_and},alleletype_arm1_{nbo1_and}));
disp(sprintf(' %% V_rx_trnx_arm1_ (%0.6f,%0.6f) , V_rx_trnx_arm1_and_ (%0.6f,%0.6f)',V_rx_trnx_arm1_(nbo1_and,:),V_rx_trnx_arm1_and_(nbu1,:)));
end;%if ~isempty(nbo1_and);
end;%if flag_check;
clear co1_ cu1_ co1_to_cu1_ cu1_to_co1_ du1_ du1_to_bu1_ du1_to_cu1_ bu1_by_du1_xref_ cu1_by_du1_xref_ ;
%%%%%%%%;
co1_ = find(strcmp(alleletype_arm1_,'xor'));
[cu1_,co1_to_cu1_,cu1_to_co1_] = unique(bo1_(co1_));
co1_by_cu1_xref_ = sparse(1:length(co1_),cu1_to_co1_,1,length(co1_),length(cu1_));
[du1_,du1_to_bu1_,du1_to_cu1_] = intersect(bu1_,cu1_,'stable');
bu1_by_du1_xref_ = sparse(du1_to_bu1_,1:length(du1_),1,length(bu1_),length(du1_));
cu1_by_du1_xref_ = sparse(du1_to_cu1_,1:length(du1_),1,length(cu1_),length(du1_));
V_rx_trnx_arm1_xor_ = zeros(length(bu1_),2);
atfr_arm1_xor_ = zeros(length(bu1_),1);
for ndu1=1:length(du1_);
nbu1 = find(sum(bu1_by_du1_xref_(:,ndu1),2));
ncu1 = find(sum(cu1_by_du1_xref_(:,ndu1),2));
nco1 = find(sum(co1_by_cu1_xref_(:,ncu1),2));
nbo1 = co1_(nco1);
V_rx_trnx_arm1_xor_(nbu1,:) = V_rx_trnx_arm1_(nbo1,:);
atfr_arm1_xor_(nbu1) = atfr_arm1_(nbo1);
end;%for ndu1=1:length(du1_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_rx_trnx_arm1_xor_'));
nbu1=max(1,min(length(bu1_),floor(length(bu1_)*rand())));
tmp_snp = bu1_{nbu1};
nbo1_xor = find(strcmp(bo1_,tmp_snp) & strcmp(alleletype_arm1_,'xor'));
if ~isempty(nbo1_xor);
assert(length(intersect(nbo1_xor,find(sum(bo1_by_bu1_xref_(:,nbu1),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,bo1_{nbo1_xor},alleletype_arm1_{nbo1_xor}));
disp(sprintf(' %% V_rx_trnx_arm1_ (%0.6f,%0.6f) , V_rx_trnx_arm1_xor_ (%0.6f,%0.6f)',V_rx_trnx_arm1_(nbo1_xor,:),V_rx_trnx_arm1_xor_(nbu1,:)));
end;%if ~isempty(nbo1_xor);
end;%if flag_check;
clear co1_ cu1_ co1_to_cu1_ cu1_to_co1_ du1_ du1_to_bu1_ du1_to_cu1_ bu1_by_du1_xref_ cu1_by_du1_xref_ ;
%%%%%%%%;
co1_ = find(strcmp(alleletype_arm1_,'nor'));
[cu1_,co1_to_cu1_,cu1_to_co1_] = unique(bo1_(co1_));
co1_by_cu1_xref_ = sparse(1:length(co1_),cu1_to_co1_,1,length(co1_),length(cu1_));
[du1_,du1_to_bu1_,du1_to_cu1_] = intersect(bu1_,cu1_,'stable');
bu1_by_du1_xref_ = sparse(du1_to_bu1_,1:length(du1_),1,length(bu1_),length(du1_));
cu1_by_du1_xref_ = sparse(du1_to_cu1_,1:length(du1_),1,length(cu1_),length(du1_));
V_rx_trnx_arm1_nor_ = zeros(length(bu1_),2);
atfr_arm1_nor_ = zeros(length(bu1_),1);
for ndu1=1:length(du1_);
nbu1 = find(sum(bu1_by_du1_xref_(:,ndu1),2));
ncu1 = find(sum(cu1_by_du1_xref_(:,ndu1),2));
nco1 = find(sum(co1_by_cu1_xref_(:,ncu1),2));
nbo1 = co1_(nco1);
V_rx_trnx_arm1_nor_(nbu1,:) = V_rx_trnx_arm1_(nbo1,:);
atfr_arm1_nor_(nbu1) = atfr_arm1_(nbo1);
end;%for ndu1=1:length(du1_);
flag_check=0;
if flag_check;
disp(sprintf(' %% checking V_rx_trnx_arm1_nor_'));
nbu1=max(1,min(length(bu1_),floor(length(bu1_)*rand())));
tmp_snp = bu1_{nbu1};
nbo1_nor = find(strcmp(bo1_,tmp_snp) & strcmp(alleletype_arm1_,'nor'));
if ~isempty(nbo1_nor);
assert(length(intersect(nbo1_nor,find(sum(bo1_by_bu1_xref_(:,nbu1),2))))>0);
disp(sprintf(' %% tmp_snp %s <-- %s (%s)',tmp_snp,bo1_{nbo1_nor},alleletype_arm1_{nbo1_nor}));
disp(sprintf(' %% V_rx_trnx_arm1_ (%0.6f,%0.6f) , V_rx_trnx_arm1_nor_ (%0.6f,%0.6f)',V_rx_trnx_arm1_(nbo1_nor,:),V_rx_trnx_arm1_nor_(nbu1,:)));
end;%if ~isempty(nbo1_nor);
end;%if flag_check;
clear co1_ cu1_ co1_to_cu1_ cu1_to_co1_ du1_ du1_to_bu1_ du1_to_cu1_ bu1_by_du1_xref_ cu1_by_du1_xref_ ;
%%%%%%%%;
% Plotting allelic-types against one another. ;
%%%%%%%%;
flag_plot=0;
if flag_plot;
tmp_ij_ = find( ~ ( (V_rx_trnx_arm1_and_(:,1)==0) & (V_rx_trnx_arm1_xor_(:,1)==0) & (V_rx_trnx_arm1_nor_(:,1)==0) ) );
plot3(V_rx_trnx_arm1_and_(tmp_ij_,1),V_rx_trnx_arm1_xor_(tmp_ij_,1),V_rx_trnx_arm1_nor_(tmp_ij_,1),'.');
xlabel('and'); ylabel('xor'); zlabel('nor'); axis vis3d;
end;% if flag_plot;
flag_plot=0;
if flag_plot;
tmp_ij_ = find( ~ ( (V_rx_trnx_arm1_and_(:,1)==0) & (V_rx_trnx_arm1_xor_(:,1)==0) & (V_rx_trnx_arm1_nor_(:,1)==0) ) );
subplot(3,3,1); plot(V_rx_trnx_arm1_and_(tmp_ij_,1),V_rx_trnx_arm1_xor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('xor'); title('and-vs-xor 1');
subplot(3,3,2); plot(V_rx_trnx_arm1_and_(tmp_ij_,1),V_rx_trnx_arm1_nor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('nor'); title('and-vs-nor 1');
subplot(3,3,3); plot(V_rx_trnx_arm1_xor_(tmp_ij_,1),V_rx_trnx_arm1_nor_(tmp_ij_,1),'b.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor 1');
subplot(3,3,4); plot(V_rx_trnx_arm1_and_(tmp_ij_,2),V_rx_trnx_arm1_xor_(tmp_ij_,2),'r.'); xlabel('and'); ylabel('xor'); title('and-vs-xor 2');
subplot(3,3,5); plot(V_rx_trnx_arm1_and_(tmp_ij_,2),V_rx_trnx_arm1_nor_(tmp_ij_,2),'r.'); xlabel('and'); ylabel('nor'); title('and-vs-nor 2');
subplot(3,3,6); plot(V_rx_trnx_arm1_xor_(tmp_ij_,2),V_rx_trnx_arm1_nor_(tmp_ij_,2),'r.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor 2');
subplot(3,3,7); plot(V_rx_trnx_arm1_and_(tmp_ij_,1),V_rx_trnx_arm1_and_(tmp_ij_,2),'g.'); xlabel('and 1'); ylabel('and 2'); title('and 1-vs-2');
subplot(3,3,8); plot(V_rx_trnx_arm1_xor_(tmp_ij_,1),V_rx_trnx_arm1_xor_(tmp_ij_,2),'g.'); xlabel('xor 1'); ylabel('xor 2'); title('xor 1-vs-2');
subplot(3,3,9); plot(V_rx_trnx_arm1_nor_(tmp_ij_,1),V_rx_trnx_arm1_nor_(tmp_ij_,2),'g.'); xlabel('nor 1'); ylabel('nor 2'); title('nor 1-vs-2');
end;% if flag_plot;
flag_plot=0;
if flag_plot;
tmp_ij_ = find( ~ ( (V_rx_trnx_arm1_and_(:,1)==0) & (V_rx_trnx_arm1_xor_(:,1)==0) & (V_rx_trnx_arm1_nor_(:,1)==0) ) );
subplot(3,1,1); plot(atfr_arm1_and_(tmp_ij_,1),atfr_arm1_xor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('xor'); title('and-vs-xor');
subplot(3,1,2); plot(atfr_arm1_and_(tmp_ij_,1),atfr_arm1_nor_(tmp_ij_,1),'b.'); xlabel('and'); ylabel('nor'); title('and-vs-nor');
subplot(3,1,3); plot(atfr_arm1_xor_(tmp_ij_,1),atfr_arm1_nor_(tmp_ij_,1),'b.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor');
end;% if flag_plot;
%%%%%%%%;
% Now arm2: ;
%%%%%%%%;
bo2_ = bim_arm2_{2}; allele1_arm2_ = bim_arm2_{5}; allele2_arm2_ = bim_arm2_{6}; alleletype_arm2_ = bim_arm2_{7}; atfr_arm2_ = bim_arm2_{9};
[bu2_,bo2_to_bu2_,bu2_to_bo2_] = unique(bo2_);
bo2_by_bu2_xref_ = sparse(1:length(bo2_),bu2_to_bo2_,1,length(bo2_),length(bu2_));
%%%%%%%%;
flag_check=0;
if flag_check;
disp(sprintf(' %% checking bo2_by_bu2_xref_'));
nbu2=max(1,min(length(bu2_),floor(length(bu2_)*rand())));
disp(sprintf(' %% nbu2 %.9d: bu2_{nbu2} %s',nbu2,bu2_{nbu2}));
tmp_bo2_ = find(sum(bo2_by_bu2_xref_(:,nbu2),2));
for nl02=1:length(tmp_bo2_);
nbo2 = tmp_bo2_(nl02);
disp(sprintf(' %% nbo2 %.9d: bo2_{nbo2} %s (%s)',nbo2,bo2_{nbo2},alleletype_arm2_{nbo2}));
assert(strcmp(bo2_{nbo2},bu2_{nbu2}));
end;%for nl02=1:length(tmp_bo2_);
end;%if flag_check;
%%%%%%%%;
co2_ = find(strcmp(alleletype_arm2_,'and'));
[cu2_,co2_to_cu2_,cu2_to_co2_] = unique(bo2_(co2_));
co2_by_cu2_xref_ = sparse(1:length(co2_),cu2_to_co2_,1,length(co2_),length(cu2_));
[du2_,du2_to_bu2_,du2_to_cu2_] = intersect(bu2_,cu2_,'stable');
bu2_by_du2_xref_ = sparse(du2_to_bu2_,1:length(du2_),1,length(bu2_),length(du2_));
cu2_by_du2_xref_ = sparse(du2_to_cu2_,1:length(du2_),1,length(cu2_),length(du2_));
atfr_arm2_and_ = zeros(length(bu2_),1);
for ndu2=1:length(du2_);
nbu2 = find(sum(bu2_by_du2_xref_(:,ndu2),2));
ncu2 = find(sum(cu2_by_du2_xref_(:,ndu2),2));
nco2 = find(sum(co2_by_cu2_xref_(:,ncu2),2));
nbo2 = co2_(nco2);
atfr_arm2_and_(nbu2) = atfr_arm2_(nbo2);
end;%for ndu2=1:length(du2_);
clear co2_ cu2_ co2_to_cu2_ cu2_to_co2_ du2_ du2_to_bu2_ du2_to_cu2_ bu2_by_du2_xref_ cu2_by_du2_xref_ ;
%%%%%%%%;
co2_ = find(strcmp(alleletype_arm2_,'xor'));
[cu2_,co2_to_cu2_,cu2_to_co2_] = unique(bo2_(co2_));
co2_by_cu2_xref_ = sparse(1:length(co2_),cu2_to_co2_,1,length(co2_),length(cu2_));
[du2_,du2_to_bu2_,du2_to_cu2_] = intersect(bu2_,cu2_,'stable');
bu2_by_du2_xref_ = sparse(du2_to_bu2_,1:length(du2_),1,length(bu2_),length(du2_));
cu2_by_du2_xref_ = sparse(du2_to_cu2_,1:length(du2_),1,length(cu2_),length(du2_));
atfr_arm2_xor_ = zeros(length(bu2_),1);
for ndu2=1:length(du2_);
nbu2 = find(sum(bu2_by_du2_xref_(:,ndu2),2));
ncu2 = find(sum(cu2_by_du2_xref_(:,ndu2),2));
nco2 = find(sum(co2_by_cu2_xref_(:,ncu2),2));
nbo2 = co2_(nco2);
atfr_arm2_xor_(nbu2) = atfr_arm2_(nbo2);
end;%for ndu2=1:length(du2_);
clear co2_ cu2_ co2_to_cu2_ cu2_to_co2_ du2_ du2_to_bu2_ du2_to_cu2_ bu2_by_du2_xref_ cu2_by_du2_xref_ ;
%%%%%%%%;
co2_ = find(strcmp(alleletype_arm2_,'nor'));
[cu2_,co2_to_cu2_,cu2_to_co2_] = unique(bo2_(co2_));
co2_by_cu2_xref_ = sparse(1:length(co2_),cu2_to_co2_,1,length(co2_),length(cu2_));
[du2_,du2_to_bu2_,du2_to_cu2_] = intersect(bu2_,cu2_,'stable');
bu2_by_du2_xref_ = sparse(du2_to_bu2_,1:length(du2_),1,length(bu2_),length(du2_));
cu2_by_du2_xref_ = sparse(du2_to_cu2_,1:length(du2_),1,length(cu2_),length(du2_));
atfr_arm2_nor_ = zeros(length(bu2_),1);
for ndu2=1:length(du2_);
nbu2 = find(sum(bu2_by_du2_xref_(:,ndu2),2));
ncu2 = find(sum(cu2_by_du2_xref_(:,ndu2),2));
nco2 = find(sum(co2_by_cu2_xref_(:,ncu2),2));
nbo2 = co2_(nco2);
atfr_arm2_nor_(nbu2) = atfr_arm2_(nbo2);
end;%for ndu2=1:length(du2_);
clear co2_ cu2_ co2_to_cu2_ cu2_to_co2_ du2_ du2_to_bu2_ du2_to_cu2_ bu2_by_du2_xref_ cu2_by_du2_xref_ ;
%%%%%%%%;
% Plotting allelic-types against one another. ;
%%%%%%%%;
flag_plot=0;
if flag_plot;
subplot(3,1,1); plot(atfr_arm2_and_(:,1),atfr_arm2_xor_(:,1),'b.'); xlabel('and'); ylabel('xor'); title('and-vs-xor');
subplot(3,1,2); plot(atfr_arm2_and_(:,1),atfr_arm2_nor_(:,1),'b.'); xlabel('and'); ylabel('nor'); title('and-vs-nor');
subplot(3,1,3); plot(atfr_arm2_xor_(:,1),atfr_arm2_nor_(:,1),'b.'); xlabel('xor'); ylabel('nor'); title('xor-vs-nor');
end;% if flag_plot;

fname_stage_0 = sprintf('%s/dir_misc/lisa_dosage_pca_r%d_stage_0.mat',dir_trunk,n_scramble_use); 
save(fname_stage_0,...
     'n_scramble_use','dir__in_arm2','string_prefix_arm2','n_patient_F_arm2','study_name_arm2_','string_name_rx_arm1','string_name_r1_arm1','string_name_rx_arm1','niteration','bim_arm1_','bu1_','bo1_','bo2_','bu2_','bo1_by_bu1_xref_','bo2_by_bu2_xref_','V_rx_trnx_arm1_and_','V_rx_trnx_arm1_xor_','V_rx_trnx_arm1_nor_','atfr_arm1_','atfr_arm2_','atfr_arm1_and_','atfr_arm1_xor_','atfr_arm1_nor_','atfr_arm2_and_','atfr_arm2_xor_','atfr_arm2_nor_','fam_name_arm1_','fam_name_arm2_','allele1_arm1_','allele2_arm1_','alleletype_arm1_','allele1_arm2_','allele2_arm2_','alleletype_arm2_', 'B_MLT', 'cl_num_arm1', 'cl_num_arm2', 'DnV_rx_arm1_', 'DnV_rx_arm2_', 'flag_dex_vs_lak', 'flag_reverse', 'flag_reverse_use', 'gamma', 'Icat', 'Icat_full', 'Ireq', 'Ireq_half', 'maf_hi_threshold', 'maf_lo_threshold', 'mc_string', 'mds_repl', 'mr_D_arm2_', 'mr_X_arm2_', 'n_cov', 'n_maf', 'n_mds', 'n_scramble', 'n_shuffle', 'pca_b_mlt', 'pca_rank', 'XnV_rx_arm1_', 'XnV_rx_arm2_' );

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_stage==0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_stage==1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

setup_grouther; verbose=1; 
%cl_num_arm1 = 4; cl_num_arm2 = 1;
%flag_dex_vs_lak = 'dex'; if (strcmp(flag_dex_vs_lak,'lak')); gamma = 0.001; mc_string = ''; else; gamma = 0.004; mc_string = ''; end; 
%flag_reverse_use = 0;
%B_MLT=34;n_mds=20;
%pca_rank = 2; pca_b_mlt = 44;
%set(groot,'defaultFigureCreateFcn',@(fig,~)addToolbarExplorationButtons(fig));
%set(groot,'defaultAxesCreateFcn',@(ax,~)set(ax.Toolbar,'Visible','off'));
%dir_root = '/data/rangan/dir_bcc';
dir_root = '/home/grouther';
%addpath(sprintf('%s/dir_code_022316',dir_root));
addpath(sprintf('%s/dir_PGC_20180304/dir_m',dir_root));
dir_trunk = sprintf('%s/dir_PGC_20180304',dir_root);
fname_stage_0 = sprintf('%s/dir_misc/lisa_dosage_pca_stage_0.mat',dir_trunk); 
load(fname_stage_0);
dir_dosage = '/home/grouther/dir_icuk_bicluster_dosage';

dosage_DnV_arm2_ = zeros(n_patient_F_arm2,2);
dosage_XnV_arm2_ = zeros(n_patient_F_arm2,2);
dosage_DnV_arm2__ = cell(length(study_name_arm2_),1);
dosage_XnV_arm2__ = cell(length(study_name_arm2_),1);
mismatch_d1__ = cell(length(study_name_arm2_),1);

for nstudy_arm2=1:length(study_name_arm2_);
%nstudy_arm2 = 2;
%%%%%%%%%%%%%%%%;

study_name_arm2 = study_name_arm2_{nstudy_arm2};
tmp_ij = strfind(study_name_arm2,'bip_');
study_name_arm2_prefix = study_name_arm2(tmp_ij+(4:7));
fname_dosage_gz = sprintf('%s/%s_eur_sr-qc.hg19.ch.fl.out.dosage_%s_out_cdrop_ni%d.out.dosage.gz',dir_dosage,study_name_arm2_prefix,string_name_rx_arm1,niteration);
dir_dosage_unzip = sprintf('%s/dir_dosage_unzip',dir_dosage); if (~exist(dir_dosage_unzip,'dir')); mkdir(dir_dosage_unzip); end;
tmp_command = sprintf('scp -p %s %s/',fname_dosage_gz,dir_dosage_unzip); disp(tmp_command); system(tmp_command);
fname_dosage = sprintf('%s/%s_eur_sr-qc.hg19.ch.fl.out.dosage_%s_out_cdrop_ni%d.out.dosage',dir_dosage_unzip,study_name_arm2_prefix,string_name_rx_arm1,niteration);
tmp_command = sprintf('gunzip -f %s.gz',fname_dosage); disp(tmp_command); system(tmp_command);
%fname_dosage = sprintf('%s/dir_misc/%s_eur_sr-qc.hg19.ch.fl.out.dosage_%s_out_cdrop_ni%d.out.dosage.cropped',dir_trunk,study_name_arm2_prefix,string_name_rx_arm1,niteration);
fcheck(fname_dosage);
%tic;[tmp_data_,tmp_varnames_,tmp_casenames_] = tblread(fname_dosage);toc;
n_dosage_snp = wc_0(fname_dosage)-1;

fid = fopen(fname_dosage);
tmp_line_ = fgetl(fid);
tmp_dosage_patient_ = strsplit(tmp_line_);
assert(strcmp(tmp_dosage_patient_{1},'SNP'));
assert(strcmp(tmp_dosage_patient_{2},'A1'));
assert(strcmp(tmp_dosage_patient_{3},'A2'));
n_dosage_patient = floor((length(tmp_dosage_patient_)-3)/2);
dosage_fam_name_ = cell(n_dosage_patient,1);
for ndosage_patient=1:n_dosage_patient;
dosage_fam_name_{ndosage_patient} = sprintf('%s&%s',strtrim(tmp_dosage_patient_{2 + 2*ndosage_patient}),strtrim(tmp_dosage_patient_{3 + 2*ndosage_patient}));
end;%for ndosage_patient=1:n_dosage_patient;
dosage_bim_snp_ = cell(n_dosage_snp,1);
allele1_dosage_ = zeros(n_dosage_snp,1);
allele2_dosage_ = zeros(n_dosage_snp,1);
for ndosage_snp=1:n_dosage_snp;
if (mod(ndosage_snp,1000)==0); disp(sprintf(' %% ndosage_snp %d/%d',ndosage_snp,n_dosage_snp)); end;
tmp_line_ = fgetl(fid);
tmp_dosage_snp_ = textscan(tmp_line_,'%s',3);%tmp_dosage_snp_ = strsplit(tmp_line_);
tmp_dosage_snp_ = tmp_dosage_snp_{1};
flag_check=0;
if flag_check;
tmp_ij_ = find(strcmp(bim_arm1_{2},tmp_dosage_snp_{1}));
for nl=1:length(tmp_ij_);
disp(sprintf(' %% found snp %s (%s,%s) <-- bim %s (%c,%c): %s',tmp_dosage_snp_{1},tmp_dosage_snp_{2},tmp_dosage_snp_{3},bim_arm1_{2}{tmp_ij_(nl)},bim_arm1_{5}(tmp_ij_(nl)),bim_arm1_{6}(tmp_ij_(nl)),alleletype_arm1_{tmp_ij_(nl)}));
end;%for nl=1:length(tmp_ij_);
end;%if flag_check;
dosage_bim_snp_{ndosage_snp} = tmp_dosage_snp_{1};
allele1_dosage_(ndosage_snp) = tmp_dosage_snp_{2};
allele2_dosage_(ndosage_snp) = tmp_dosage_snp_{3};
end;%for ndosage_snp=1:n_dosage_snp;
fclose(fid);

%%%%%%%%;
d1d_ = dosage_bim_snp_ ; %<-- we assume this is already unique. ;
%%%%%%%%;
[eu1_,eu1_to_d1d_,eu1_to_bu1_] = intersect(d1d_,bu1_,'stable');
d1d_by_eu1_xref_ = sparse(eu1_to_d1d_,1:length(eu1_),1,length(d1d_),length(eu1_));
eu1_by_d1d_xref_ = sparse(1:length(eu1_),eu1_to_d1d_,1,length(eu1_),length(d1d_));
bu1_by_eu1_xref_ = sparse(eu1_to_bu1_,1:length(eu1_),1,length(bu1_),length(eu1_));
%%%%%%%%;
flag_check=0;
if flag_check;
neu1=max(1,min(length(eu1_),floor(length(eu1_)*rand())));
disp(sprintf(' %% neu1 %.9d: eu1_{neu1} %s',neu1,eu1_{neu1}));
tmp_d1d_ = find(sum(d1d_by_eu1_xref_(:,neu1),2));
for nl1d=1:length(tmp_d1d_);
nd1d = tmp_d1d_(nl1d);
disp(sprintf(' %% nd1d %.9d: d1d_{nd1d} %s',nd1d,d1d_{nd1d}));
assert(strcmp(d1d_{nd1d},eu1_{neu1}));
end;%for nl1d=1:length(tmp_d1d_);
tmp_bu1_ = find(sum(bu1_by_eu1_xref_(:,neu1),2));
for nlu1=1:length(tmp_bu1_);
nbu1 = tmp_bu1_(nlu1);
disp(sprintf(' %% nbu1 %.9d: bu1_{nbu1} %s and (%0.6f %0.6f) , xor (%0.6f %0.6f) , nor (%0.6f %0.6f)',nbu1,bu1_{nbu1},V_rx_trnx_arm1_and_(nbu1,:),V_rx_trnx_arm1_xor_(nbu1,:),V_rx_trnx_arm1_nor_(nbu1,:)));
assert(strcmp(bu1_{nbu1},eu1_{neu1}));
end;%for nlu1=1:length(tmp_bu1_);
tmp_bo1_ = find(sum(bo1_by_bu1_xref_(:,nbu1),2));
for nl01=1:length(tmp_bo1_);
nbo1 = tmp_bo1_(nl01);
disp(sprintf(' %% nbo1 %.9d: bo1_{nbo1} %s (%s) (%0.6f %0.6f)',nbo1,bo1_{nbo1},alleletype_arm1_{nbo1},V_rx_trnx_arm1_(nbo1,:)));
assert(strcmp(bo1_{nbo1},eu1_{neu1}));
end;%for nl01=1:length(tmp_bo1_);
end;%if flag_check;
%%%%%%%%;
[eu2_,eu2_to_d1d_,eu2_to_bu2_] = intersect(d1d_,bu2_,'stable');
d1d_by_eu2_xref_ = sparse(eu2_to_d1d_,1:length(eu2_),1,length(d1d_),length(eu2_));
eu2_by_d1d_xref_ = sparse(1:length(eu2_),eu2_to_d1d_,1,length(eu2_),length(d1d_));
bu2_by_eu2_xref_ = sparse(eu2_to_bu2_,1:length(eu2_),1,length(bu2_),length(eu2_));
%%%%%%%%;
flag_check=0;
if flag_check;
neu2=max(1,min(length(eu2_),floor(length(eu2_)*rand())));
disp(sprintf(' %% neu2 %.9d: eu2_{neu2} %s',neu2,eu2_{neu2}));
tmp_d1d_ = find(sum(d1d_by_eu2_xref_(:,neu2),2));
for nl1d=1:length(tmp_d1d_);
nd1d = tmp_d1d_(nl1d);
disp(sprintf(' %% nd1d %.9d: d1d_{nd1d} %s',nd1d,d1d_{nd1d}));
assert(strcmp(d1d_{nd1d},eu2_{neu2}));
end;%for nl1d=1:length(tmp_d1d_);
tmp_bu2_ = find(sum(bu2_by_eu2_xref_(:,neu2),2));
for nl12=1:length(tmp_bu2_);
nbu2 = tmp_bu2_(nl12);
disp(sprintf(' %% nbu2 %.9d: bu2_{nbu2} %s',nbu2,bu2_{nbu2}));
assert(strcmp(bu2_{nbu2},eu2_{neu2}));
end;%for nl12=1:length(tmp_bu2_);
tmp_bo2_ = find(sum(bo2_by_bu2_xref_(:,nbu2),2));
for nl02=1:length(tmp_bo2_);
nbo2 = tmp_bo2_(nl02);
disp(sprintf(' %% nbo2 %.9d: bo2_{nbo2} %s (%s)',nbo2,bo2_{nbo2},alleletype_arm2_{nbo2}));
assert(strcmp(bo2_{nbo2},eu2_{neu2}));
end;%for nl02=1:length(tmp_bo2_);
end;%if flag_check;

% Ordering V_rx_trnx_arm1_xxx_ to align with dosage file. ;
clear V_rx_perm_and_ V_rx_perm_xor_ V_rx_perm_nor_;
clear atfr_arm1_perm_and_ atfr_arm1_perm_xor_ atfr_arm1_perm_nor_;
clear atfr_arm2_perm_and_ atfr_arm2_perm_xor_ atfr_arm2_perm_nor_;
%%%%%%%%;
V_rx_perm_and_ = zeros(length(d1d_),2);
V_rx_perm_xor_ = zeros(length(d1d_),2);
V_rx_perm_nor_ = zeros(length(d1d_),2);
atfr_arm1_perm_and_ = zeros(length(d1d_),1);
atfr_arm1_perm_xor_ = zeros(length(d1d_),1);
atfr_arm1_perm_nor_ = zeros(length(d1d_),1);
for neu1=1:length(eu1_);
if (mod(neu1,1000)==0); disp(sprintf(' %% neu1 %d/%d',neu1,length(eu1_))); end;
tmp_d1d_ = find(sum(d1d_by_eu1_xref_(:,neu1),2));
if (length(tmp_d1d_)>1); disp(sprintf(' %% Warning! tmp_d1d_ length %d in lisa_dosage_pca_ver6',length(tmp_d1d_))); end;
nd1d = tmp_d1d_(1);
tmp_bu1_ = find(sum(bu1_by_eu1_xref_(:,neu1),2));
if (length(tmp_bu1_)>1); disp(sprintf(' %% Warning! tmp_bu1_ length %d in lisa_dosage_pca_ver6',length(tmp_bu1_))); end;
nbu1 = tmp_bu1_(1);
V_rx_perm_and_(nd1d,:) = V_rx_trnx_arm1_and_(nbu1,:);
V_rx_perm_xor_(nd1d,:) = V_rx_trnx_arm1_xor_(nbu1,:);
V_rx_perm_nor_(nd1d,:) = V_rx_trnx_arm1_nor_(nbu1,:);
atfr_arm1_perm_and_(nd1d) = atfr_arm1_and_(nbu1);
atfr_arm1_perm_xor_(nd1d) = atfr_arm1_xor_(nbu1);
atfr_arm1_perm_nor_(nd1d) = atfr_arm1_nor_(nbu1);
end;%for neu1=1:length(eu1_);
atfr_arm1_perm_and_alpha_ = atfr_arm1_perm_and_ - (1 - atfr_arm1_perm_and_); atfr_arm1_perm_and_delta_ = 1./( 4 .* atfr_arm1_perm_and_ .* (1 - atfr_arm1_perm_and_) );
atfr_arm1_perm_xor_alpha_ = atfr_arm1_perm_xor_ - (1 - atfr_arm1_perm_xor_); atfr_arm1_perm_xor_delta_ = 1./( 4 .* atfr_arm1_perm_xor_ .* (1 - atfr_arm1_perm_xor_) );
atfr_arm1_perm_nor_alpha_ = atfr_arm1_perm_nor_ - (1 - atfr_arm1_perm_nor_); atfr_arm1_perm_nor_delta_ = 1./( 4 .* atfr_arm1_perm_nor_ .* (1 - atfr_arm1_perm_nor_) );
%%%%%%%%;
atfr_arm2_perm_and_ = zeros(length(d1d_),1);
atfr_arm2_perm_xor_ = zeros(length(d1d_),1);
atfr_arm2_perm_nor_ = zeros(length(d1d_),1);
for neu2=1:length(eu2_);
if (mod(neu2,1000)==0); disp(sprintf(' %% neu2 %d/%d',neu2,length(eu2_))); end;
tmp_d1d_ = find(sum(d1d_by_eu2_xref_(:,neu2),2));
if (length(tmp_d1d_)>1); disp(sprintf(' %% Warning! tmp_d1d_ length %d in lisa_dosage_pca_ver6',length(tmp_d1d_))); end;
nd1d = tmp_d1d_(1);
tmp_bu2_ = find(sum(bu2_by_eu2_xref_(:,neu2),2));
if (length(tmp_bu2_)>1); disp(sprintf(' %% Warning! tmp_bu2_ length %d in lisa_dosage_pca_ver6',length(tmp_bu2_))); end;
nbu2 = tmp_bu2_(1);
atfr_arm2_perm_and_(nd1d) = atfr_arm2_and_(nbu2);
atfr_arm2_perm_xor_(nd1d) = atfr_arm2_xor_(nbu2);
atfr_arm2_perm_nor_(nd1d) = atfr_arm2_nor_(nbu2);
end;%for neu2=1:length(eu2_);

fu1_ = fam_name_arm1_; %<-- We assume this is unique. ;
fu2_ = fam_name_arm2_; %<-- We assume this is unique. ;
g1d_ = dosage_fam_name_; %<-- We assume this is unique. ;
%%%%%%%%;
[hu1_,hu1_to_g1d_,hu1_to_fu1_] = intersect(g1d_,fu1_,'stable');
g1d_by_hu1_xref_ = sparse(hu1_to_g1d_,1:length(hu1_),1,length(g1d_),length(hu1_));
fu1_by_hu1_xref_ = sparse(hu1_to_fu1_,1:length(hu1_),1,length(fu1_),length(hu1_));
g1d_to_fu1_ = zeros(length(g1d_),1);
for nhu1=1:length(hu1_);
tmp_fu1_ = find(sum(fu1_by_hu1_xref_(:,nhu1),2));
if (length(tmp_fu1_)>1); disp(sprintf(' %% Warning! tmp_fu1_ length %d in lisa_dosage_pca_ver6',length(tmp_fu1_))); end;
nfu1 = tmp_fu1_(1);
tmp_g1d_ = find(sum(g1d_by_hu1_xref_(:,nhu1),2));
if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver6',length(tmp_g1d_))); end;
ng1d = tmp_g1d_(1);
assert(strcmp(fu1_{nfu1},g1d_{ng1d}));
g1d_to_fu1_(ng1d) = nfu1;
end;%for nhu1=1:length(hu1_);
%%%%%%%%;
[hu2_,hu2_to_g1d_,hu2_to_fu2_] = intersect(g1d_,fu2_,'stable');
g1d_by_hu2_xref_ = sparse(hu2_to_g1d_,1:length(hu2_),1,length(g1d_),length(hu2_));
fu2_by_hu2_xref_ = sparse(hu2_to_fu2_,1:length(hu2_),1,length(fu2_),length(hu2_));
g1d_to_fu2_ = zeros(length(g1d_),1);
for nhu2=1:length(hu2_);
tmp_fu2_ = find(sum(fu2_by_hu2_xref_(:,nhu2),2));
if (length(tmp_fu2_)>1); disp(sprintf(' %% Warning! tmp_fu2_ length %d in lisa_dosage_pca_ver6',length(tmp_fu2_))); end;
nfu2 = tmp_fu2_(1);
tmp_g1d_ = find(sum(g1d_by_hu2_xref_(:,nhu2),2));
if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver6',length(tmp_g1d_))); end;
ng1d = tmp_g1d_(1);
assert(strcmp(fu2_{nfu2},g1d_{ng1d}));
g1d_to_fu2_(ng1d) = nfu2;
end;%for nhu2=1:length(hu2_);

%%%%%%%%;
char2num_ = zeros(84,1); 
char2num_(65) = 1; %<-- A ;
char2num_(67) = 2; %<-- C ;
char2num_(71) = 3; %<-- G ;
char2num_(84) = 4; %<-- T ;
%%%%%%%%;
allele_dosage__ = zeros(4,4);
for nl=1:n_dosage_snp;
allele_dosage__(char2num_(allele1_dosage_(nl)),char2num_(allele2_dosage_(nl))) = allele_dosage__(char2num_(allele1_dosage_(nl)),char2num_(allele2_dosage_(nl))) + 1;
end;%for nl=1:n_dosage_snp;
%%%%%%%%;
allele_arm1__ = zeros(4,4);
for nl=1:length(allele1_arm1_);
allele_arm1__(char2num_(allele1_arm1_(nl)),char2num_(allele2_arm1_(nl))) = allele_arm1__(char2num_(allele1_arm1_(nl)),char2num_(allele2_arm1_(nl))) +1;
end;%for nl=1:length(allele1_arm1_);
%%%%%%%%;
allele_arm2__ = zeros(4,4);
for nl=1:length(allele1_arm2_);
allele_arm2__(char2num_(allele1_arm2_(nl)),char2num_(allele2_arm2_(nl))) = allele_arm2__(char2num_(allele1_arm2_(nl)),char2num_(allele2_arm2_(nl))) +1;
end;%for nl=1:length(allele1_arm2_);
%%%%%%%%;
disp('allele_dosage__'); disp(allele_dosage__);
disp('allele_arm1__'); disp(allele_arm1__);
disp('allele_arm2__'); disp(allele_arm2__);

%%%%%%%%%%%%%%%%;
% We define different kinds of allelic mismatch errors: ;
%%%%%%%%%%%%%%%%;
error_code_null = 0;      % <-- No error; alleles match and minor-allele-frequency is commensurate. ;
error_code_synonym = 1;   % <-- Synonym; allele names must be interchanged with synonyms (i.e,. A<-->T and C<-->G). ;
error_code_dominance = 2; % <-- Dominance; the alleles must be switched (i.e., XY --> YX) so that the first allele listed corresponds to the minor (i.e., less frequent) allele. ;
error_code_both = 3;      % <-- Both; the allele names must be interchanged *and* the order must be switched. ;
error_code_ambiguous = 8; % <-- Ambiguity; I cannot determine the correct alignment. ;
error_code_missing = 9;   % <-- Missing; this snp is not in the overlap between the two sets. ;
%%%%%%%%%%%%%%%%;
flag_check=0;
if flag_check;
%%%%%%%%;
mismatch_d1_ = 9*ones(n_dosage_snp,1);
for ndosage_snp=1:n_dosage_snp;
if (mod(ndosage_snp,1000)==0); disp(sprintf(' %% ndosage_snp %d/%d',ndosage_snp,n_dosage_snp)); end;
nd1d = ndosage_snp;
neu1 = find(sum(eu1_by_d1d_xref_(:,nd1d),2)); assert(length(neu1)<=1);
if (length(neu1)==1);
nbu1 = find(sum(bu1_by_eu1_xref_(:,neu1),2)); assert(length(nbu1)==1);
tmp_bo1_ = find(sum(bo1_by_bu1_xref_(:,nbu1),2)); assert(length(tmp_bo1_)>=1);
for nl01=1:length(tmp_bo1_);
nbo1 = tmp_bo1_(nl01);
assert(strcmp(bo1_{nbo1},d1d_{nd1d}));
assert(strcmp(bo1_{nbo1},eu1_{neu1}));
assert(strcmp(bo1_{nbo1},bu1_{nbu1}));
end;%for nl01=1:length(tmp_bo1_);
nbo1 = tmp_bo1_(1);
mismatch_d1_(nd1d) = lisa_allele_mismatch_ver0(allele1_dosage_(nd1d),allele2_dosage_(nd1d),allele1_arm1_(nbo1),allele2_arm1_(nbo1));
end;%if (length(neu1)==1);
end;%for ndosage_snp=1:n_dosage_snp;
%%%%%%%%;
mismatch_d2_ = 9*ones(n_dosage_snp,1);
for ndosage_snp=1:n_dosage_snp;
if (mod(ndosage_snp,1000)==0); disp(sprintf(' %% ndosage_snp %d/%d',ndosage_snp,n_dosage_snp)); end;
nd1d = ndosage_snp;
neu2 = find(sum(eu2_by_d1d_xref_(:,nd1d),2)); assert(length(neu2)<=1);
if (length(neu2)==1);
nbu2 = find(sum(bu2_by_eu2_xref_(:,neu2),2)); assert(length(nbu2)==1);
tmp_bo2_ = find(sum(bo2_by_bu2_xref_(:,nbu2),2)); assert(length(tmp_bo2_)>=1);
for nl02=1:length(tmp_bo2_);
nbo2 = tmp_bo2_(nl02);
assert(strcmp(bo2_{nbo2},d1d_{nd1d}));
assert(strcmp(bo2_{nbo2},eu2_{neu2}));
assert(strcmp(bo2_{nbo2},bu2_{nbu2}));
end;%for nl02=1:length(tmp_bo2_);
nbo2 = tmp_bo2_(1);
mismatch_d2_(nd1d) = lisa_allele_mismatch_ver0(allele1_dosage_(nd1d),allele2_dosage_(nd1d),allele1_arm2_(nbo2),allele2_arm2_(nbo2));
end;%if (length(neu2)==1);
end;%for ndosage_snp=1:n_dosage_snp;
%%%%%%%%;
end%if flag_check;

%%%%%%%%%%%%%%%%;
% Now step through the dosage file line by line. ;
% updating the inner-products as we go. ;
%%%%%%%%%%%%%%%%;
ent_cutoff = 0.03;
tmp_AnV_dosage_ = zeros(n_dosage_patient,2);
mismatch_d1__{nstudy_arm2} = 9*ones(n_dosage_snp,1);
fid = fopen(fname_dosage);
tmp_line_ = fgetl(fid); %<-- skip header line. ;
for ndosage_snp=1:n_dosage_snp;
if (mod(ndosage_snp,1000)==0); disp(sprintf(' %% ndosage_snp %d/%d',ndosage_snp,n_dosage_snp)); end;
tmp_line_ = fgetl(fid);
tmp_dosage_snp_ = textscan(tmp_line_,'%s',3);
tmp_dosage_al1_ = tmp_dosage_snp_{1}{2};
tmp_dosage_al2_ = tmp_dosage_snp_{1}{3};
nd1d = ndosage_snp;
assert(strcmp(tmp_dosage_snp_{1}{1},d1d_{nd1d}));
assert(tmp_dosage_al1_==allele1_dosage_(nd1d));
assert(tmp_dosage_al2_==allele2_dosage_(nd1d));
neu1 = find(sum(eu1_by_d1d_xref_(:,nd1d),2)); assert(length(neu1)<=1);
if (length(neu1)==1);
nbu1 = find(sum(bu1_by_eu1_xref_(:,neu1),2)); assert(length(nbu1)==1);
tmp_bo1_ = find(sum(bo1_by_bu1_xref_(:,nbu1),2)); assert(length(tmp_bo1_)>=1);
nbo1 = tmp_bo1_(1);
assert(strcmp(bo1_{nbo1},d1d_{nd1d}));
assert(strcmp(bo1_{nbo1},eu1_{neu1}));
assert(strcmp(bo1_{nbo1},bu1_{nbu1}));
tmp_length = sum(cellfun('length',tmp_dosage_snp_{1})) + length(tmp_dosage_snp_{1});
tmp_val_ = sscanf(tmp_line_(tmp_length:end),'%f');
assert(length(tmp_val_)/2==n_dosage_patient);
tmp_val_nor_ = tmp_val_(1:2:end-1);
tmp_val_xor_ = tmp_val_(2:2:end-0);
tmp_val_and_ = ones(n_dosage_patient,1) - tmp_val_nor_ - tmp_val_xor_;
%%%%%%%%;
% check for mismatch. ;
%%%%%%%%;
tmp_error_code = lisa_allele_mismatch_ver0(...
  allele1_dosage_(nd1d),allele2_dosage_(nd1d),allele1_arm1_(nbo1),allele2_arm1_(nbo1)...
  ,sum(abs(tmp_val_and_)),sum(abs(tmp_val_xor_)),sum(abs(tmp_val_nor_))...
  ,atfr_arm1_perm_and_(nd1d),atfr_arm1_perm_xor_(nd1d),atfr_arm1_perm_nor_(nd1d)...
  ,ent_cutoff...
  );
mismatch_d1__{nstudy_arm2}(nd1d) = tmp_error_code;
if ( (tmp_error_code==error_code_dominance) | (tmp_error_code==error_code_both) );
tmp_ = tmp_val_nor_ ; tmp_val_nor_ = tmp_val_and_; tmp_val_and_ = tmp_ ; %<-- switching dominant allele ;
end;%if ( (tmp_error_code==error_code_dominance) | (tmp_error_code==error_code_both) );
tmp_val_and_normalized_ = (2*tmp_val_and_ - 1 - atfr_arm1_perm_and_alpha_(nd1d)) / sqrt(atfr_arm1_perm_and_delta_(nd1d));
tmp_val_xor_normalized_ = (2*tmp_val_xor_ - 1 - atfr_arm1_perm_xor_alpha_(nd1d)) / sqrt(atfr_arm1_perm_xor_delta_(nd1d));
tmp_val_nor_normalized_ = (2*tmp_val_nor_ - 1 - atfr_arm1_perm_nor_alpha_(nd1d)) / sqrt(atfr_arm1_perm_nor_delta_(nd1d));
if ( (tmp_error_code==error_code_ambiguous) | (tmp_error_code==error_code_missing) );
tmp_val_and_normalized_ = 0*tmp_val_and_normalized_;
tmp_val_xor_normalized_ = 0*tmp_val_xor_normalized_;
tmp_val_nor_normalized_ = 0*tmp_val_nor_normalized_;
end;%if ( (tmp_error_code==error_code_ambiguous) | (tmp_error_code==error_code_missing) );
%%%%%%%%%%%%%%%%;
% check against b16 file. ;
%%%%%%%%%%%%%%%%;
flag_check=0;
if flag_check;
%%%%%%%%;
tmp_bo2_ = find(strcmp(bo2_,d1d_{nd1d}));
if (length(tmp_bo2_)>0);
lisa_dosage_pca_helper_0;
fname_A_n_arm2 = sprintf('%s/%s_A_full_n.b16',dir__in_arm2,string_prefix_arm2); fcheck(fname_A_n_arm2);
[tmp_nbins,tmp_nrows,tmp_ncols] = tutorial_binary_getsize(fname_A_n_arm2);
%%%%%%%%;
tmp_bo2_and = find(strcmp(bo2_,d1d_{nd1d}) & strcmp(alleletype_arm2_,'and')); if (length(tmp_bo2_and)>1); disp(sprintf(' %% Warning! tmp_bo2_and length %d in lisa_dosage_pca_ver6.m',length(tmp_bo2_and))); end;
if (length(tmp_bo2_and)>0);
tmp_arm2_and_ = tutorial_binary_uncompress(fname_A_n_arm2,1:tmp_nrows,min(tmp_ncols,tmp_bo2_and));
tmp_arm2_perm_and_ = zeros(length(g1d_),1);
for nhu2=1:length(hu2_);
tmp_fu2_ = find(sum(fu2_by_hu2_xref_(:,nhu2),2)); if (length(tmp_fu2_)>1); disp(sprintf(' %% Warning! tmp_fu2_ length %d in lisa_dosage_pca_ver6',length(tmp_fu2_))); end; nfu2 = tmp_fu2_(1);
tmp_g1d_ = find(sum(g1d_by_hu2_xref_(:,nhu2),2)); if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver6',length(tmp_g1d_))); end; ng1d = tmp_g1d_(1);
assert(strcmp(fu2_{nfu2},g1d_{ng1d}));
tmp_arm2_perm_and_(ng1d) = tmp_arm2_and_(nfu2);
end;%for nhu2=1:length(hu2_);
tmp_str_and_and = sprintf('arm2_and vs val_and %.10d',sum(abs((tmp_arm2_perm_and_>0) - tmp_val_and_)));
tmp_str_and_xor = sprintf('arm2_and vs val_xor %.10d',sum(abs((tmp_arm2_perm_and_>0) - tmp_val_xor_)));
tmp_str_and_nor = sprintf('arm2_and vs val_nor %.10d',sum(abs((tmp_arm2_perm_and_>0) - tmp_val_nor_)));
disp(sprintf(' %% %% nd1d %.10d tmp_bo2_and %.10d %s (%s) , %s , %s , %s',nd1d,tmp_bo2_and,d1d_{nd1d},alleletype_arm2_{tmp_bo2_and},tmp_str_and_and,tmp_str_and_xor,tmp_str_and_nor));
end;%if (length(tmp_bo2_and)>0);
%%%%%%%%;
tmp_bo2_xor = find(strcmp(bo2_,d1d_{nd1d}) & strcmp(alleletype_arm2_,'xor')); if (length(tmp_bo2_xor)>1); disp(sprintf(' %% Warning! tmp_bo2_xor length %d in lisa_dosage_pca_ver6.m',length(tmp_bo2_xor))); end;
if (length(tmp_bo2_xor)>0);
tmp_arm2_xor_ = tutorial_binary_uncompress(fname_A_n_arm2,1:tmp_nrows,min(tmp_ncols,tmp_bo2_xor));
tmp_arm2_perm_xor_ = zeros(length(g1d_),1);
for nhu2=1:length(hu2_);
tmp_fu2_ = find(sum(fu2_by_hu2_xref_(:,nhu2),2)); if (length(tmp_fu2_)>1); disp(sprintf(' %% Warning! tmp_fu2_ length %d in lisa_dosage_pca_ver6',length(tmp_fu2_))); end; nfu2 = tmp_fu2_(1);
tmp_g1d_ = find(sum(g1d_by_hu2_xref_(:,nhu2),2)); if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver6',length(tmp_g1d_))); end; ng1d = tmp_g1d_(1);
assert(strcmp(fu2_{nfu2},g1d_{ng1d}));
tmp_arm2_perm_xor_(ng1d) = tmp_arm2_xor_(nfu2);
end;%for nhu2=1:length(hu2_);
tmp_str_xor_and = sprintf('arm2_xor vs val_and %.10d',sum(abs((tmp_arm2_perm_xor_>0) - tmp_val_and_)));
tmp_str_xor_xor = sprintf('arm2_xor vs val_xor %.10d',sum(abs((tmp_arm2_perm_xor_>0) - tmp_val_xor_)));
tmp_str_xor_nor = sprintf('arm2_xor vs val_nor %.10d',sum(abs((tmp_arm2_perm_xor_>0) - tmp_val_nor_)));
disp(sprintf(' %% %% nd1d %.10d tmp_bo2_xor %.10d %s (%s) , %s , %s , %s',nd1d,tmp_bo2_xor,d1d_{nd1d},alleletype_arm2_{tmp_bo2_xor},tmp_str_xor_and,tmp_str_xor_xor,tmp_str_xor_nor));
end;%if (length(tmp_bo2_xor)>0);
%%%%%%%%;
tmp_bo2_nor = find(strcmp(bo2_,d1d_{nd1d}) & strcmp(alleletype_arm2_,'nor')); if (length(tmp_bo2_nor)>1); disp(sprintf(' %% Warning! tmp_bo2_nor length %d in lisa_dosage_pca_ver6.m',length(tmp_bo2_nor))); end;
if (length(tmp_bo2_nor)>0);
tmp_arm2_nor_ = tutorial_binary_uncompress(fname_A_n_arm2,1:tmp_nrows,min(tmp_ncols,tmp_bo2_nor));
tmp_arm2_perm_nor_ = zeros(length(g1d_),1);
for nhu2=1:length(hu2_);
tmp_fu2_ = find(sum(fu2_by_hu2_xref_(:,nhu2),2)); if (length(tmp_fu2_)>1); disp(sprintf(' %% Warning! tmp_fu2_ length %d in lisa_dosage_pca_ver6',length(tmp_fu2_))); end; nfu2 = tmp_fu2_(1);
tmp_g1d_ = find(sum(g1d_by_hu2_xref_(:,nhu2),2)); if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver6',length(tmp_g1d_))); end; ng1d = tmp_g1d_(1);
assert(strcmp(fu2_{nfu2},g1d_{ng1d}));
tmp_arm2_perm_nor_(ng1d) = tmp_arm2_nor_(nfu2);
end;%for nhu2=1:length(hu2_);
tmp_str_nor_and = sprintf('arm2_nor vs val_and %.10d',sum(abs((tmp_arm2_perm_nor_>0) - tmp_val_and_)));
tmp_str_nor_xor = sprintf('arm2_nor vs val_xor %.10d',sum(abs((tmp_arm2_perm_nor_>0) - tmp_val_xor_)));
tmp_str_nor_nor = sprintf('arm2_nor vs val_nor %.10d',sum(abs((tmp_arm2_perm_nor_>0) - tmp_val_nor_)));
disp(sprintf(' %% %% nd1d %.10d tmp_bo2_nor %.10d %s (%s) , %s , %s , %s',nd1d,tmp_bo2_nor,d1d_{nd1d},alleletype_arm2_{tmp_bo2_nor},tmp_str_nor_and,tmp_str_nor_xor,tmp_str_nor_nor));
end;%if (length(tmp_bo2_nor)>0);
%%%%%%%%;
end;%if (length(tmp_bo2_)>0);
end;%if flag_check;
%%%%%%%%;
tmp_AnV_dosage_ = tmp_AnV_dosage_ ...
   + tmp_val_and_normalized_*V_rx_perm_and_(nd1d,:) ...
   + tmp_val_xor_normalized_*V_rx_perm_xor_(nd1d,:) ...
   + tmp_val_nor_normalized_*V_rx_perm_nor_(nd1d,:) ...
  ;
end;%if (length(neu1)==1);
end;%for ndosage_snp=1:n_dosage_snp;
fclose(fid);
%%%%%%%%;

tmp_AnV_arm2_ = zeros(length(fu2_),2);
for nhu2=1:length(hu2_);
tmp_fu2_ = find(sum(fu2_by_hu2_xref_(:,nhu2),2));
if (length(tmp_fu2_)>1); disp(sprintf(' %% Warning! tmp_fu2_ length %d in lisa_dosage_pca_ver6',length(tmp_fu2_))); end;
nfu2 = tmp_fu2_(1);
tmp_g1d_ = find(sum(g1d_by_hu2_xref_(:,nhu2),2));
if (length(tmp_g1d_)>1); disp(sprintf(' %% Warning! tmp_g1d_ length %d in lisa_dosage_pca_ver6',length(tmp_g1d_))); end;
ng1d = tmp_g1d_(1);
assert(strcmp(fu2_{nfu2},g1d_{ng1d}));
tmp_AnV_arm2_(nfu2,:) = tmp_AnV_dosage_(ng1d,:);
end;%for nhu2=1:length(hu2_);

tmp_DnV_arm2_ = zeros(length(fu2_),2); tmp_Dij_ = find(mr_D_arm2_); tmp_DnV_arm2_(tmp_Dij_,:) = tmp_AnV_arm2_(tmp_Dij_,:);
tmp_XnV_arm2_ = zeros(length(fu2_),2); tmp_Xij_ = find(mr_X_arm2_); tmp_XnV_arm2_(tmp_Xij_,:) = tmp_AnV_arm2_(tmp_Xij_,:);

flag_plot=0;
if flag_plot;
subplot(2,2,1);
tmp_Dij_ = intersect(g1d_to_fu2_,find(mr_D_arm2_));
plot(DnV_rx_tstx_arm2_(tmp_Dij_,1),tmp_DnV_arm2_(tmp_Dij_,1),'.');
title('D 1');
subplot(2,2,2);
tmp_Xij_ = intersect(g1d_to_fu2_,find(mr_X_arm2_));
plot(XnV_rx_tstx_arm2_(tmp_Xij_,1),tmp_XnV_arm2_(tmp_Xij_,1),'.');
title('X 1');
subplot(2,2,3);
tmp_Dij_ = intersect(g1d_to_fu2_,find(mr_D_arm2_));
plot(DnV_rx_tstx_arm2_(tmp_Dij_,2),tmp_DnV_arm2_(tmp_Dij_,2),'.');
title('D 2');
subplot(2,2,4);
tmp_Xij_ = intersect(g1d_to_fu2_,find(mr_X_arm2_));
plot(XnV_rx_tstx_arm2_(tmp_Xij_,2),tmp_XnV_arm2_(tmp_Xij_,2),'.');
title('X 2');
end;%if flag_plot;

dosage_DnV_arm2__{nstudy_arm2} = tmp_DnV_arm2_ ;
dosage_XnV_arm2__{nstudy_arm2} = tmp_XnV_arm2_ ;
dosage_DnV_arm2_ = dosage_DnV_arm2_ + tmp_DnV_arm2_ ;
dosage_XnV_arm2_ = dosage_XnV_arm2_ + tmp_XnV_arm2_ ;

tmp_command = sprintf('rm -rf %s',fname_dosage); disp(tmp_command); system(tmp_command);

%%%%%%%%%%%%%%%%;
end;%for nstudy_arm2=1:length(study_name_arm2_);

fname_stage_1 = sprintf('%s/dir_misc/lisa_dosage_pca_r%d_stage_1.mat',dir_trunk,n_scramble_use); 
save(fname_stage_1,...
     'dosage_DnV_arm2__','dosage_XnV_arm2__','dosage_DnV_arm2_','dosage_XnV_arm2_','mismatch_d1__');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_stage==1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
