function label_plot_recursive_0(output_label_,lpFmax_label_,item_label_);
% use on labels generated by test_loader_dexcluster_nonbinary_trace_ZRimax_recursive_3. ;
verbose=1;
n_item = numel(output_label_);
assert(numel(lpFmax_label_)==n_item);
if (~isempty(item_label_)); assert(numel(item_label_)==n_item); end;
[u_output_label_,index_u_from_o_] = unique(output_label_); index_u_from_o_ = index_u_from_o_-1;
u_lpFmax_label_ = lpFmax_label_(1+index_u_from_o_);
n_cluster = numel(u_output_label_);
if (verbose); disp(sprintf(' %% n_item %d --> n_cluster %d',n_item,n_cluster)); end;
cluster_index__ = cell(n_cluster,1);
for ncluster=0:n_cluster-1;
u_output_label = u_output_label_{1+ncluster};
cluster_index__{1+ncluster} = efind(strcmp(output_label_,u_output_label));
end;%for ncluster=0:n_cluster-1;
%%%%%%%%;
if (verbose);
for ncluster=0:n_cluster-1;
u_output_label = u_output_label_{1+ncluster};
u_lpFmax_label = u_lpFmax_label_{1+ncluster};
cluster_index_ = cluster_index__{1+ncluster};
n_item_sub = numel(cluster_index_);
disp(sprintf(' %% ncluster %.2d/%.2d : length %.3d --> %s %s',ncluster,n_cluster,n_item_sub,u_output_label,u_lpFmax_label));
for nitem_sub=0:n_item_sub-1;
nitem = cluster_index_(1+nitem_sub);
if (~isempty(item_label_)); disp(sprintf(' %% %% %s',item_label_{1+nitem})); end;
end;%for nitem_sub=0:n_item_sub-1;
disp(sprintf(' %% '));
end;%for ncluster=0:n_cluster-1;
end;%if (verbose);
%%%%%%%%;
xgap = 2; n_x = n_item + (n_cluster-1)*xgap;
xpos_from_item_ = zeros(n_item,1);
ypos_from_item_ = zeros(n_item,1);
item_from_xpos_ = zeros(n_x,1);
xtick_from_xpos_ = zeros(n_x,1);
xpos=1; %<-- one based so that we can efind later. ;
for ncluster=0:n_cluster-1;
u_output_label = u_output_label_{1+ncluster};
ypos = length(u_output_label);
cluster_index_ = cluster_index__{1+ncluster};
n_item_sub = numel(cluster_index_);
for nitem_sub=0:n_item_sub-1;
nitem = cluster_index_(1+nitem_sub);
xpos_from_item_(1+nitem) = xpos;
ypos_from_item_(1+nitem) = ypos;
item_from_xpos_(1+xpos) = nitem;
xtick_from_xpos_(1+xpos) = xpos;
xpos=xpos+1;
end;%for nitem_sub=0:n_item_sub-1;
xpos=xpos+xgap;
end;%for ncluster=0:n_cluster-1;
%%%%%%%%;
node_label_ = cell(0,0);
node_lpFmax_ = zeros(0,0);
node_ij_ = zeros(0,0);
n_node=0;
for ncluster=0:n_cluster-1;
u_output_label = u_output_label_{1+ncluster};
u_lpFmax_label = u_lpFmax_label_{1+ncluster};
u_lpFmax_ = str2num(u_lpFmax_label);
n_y = length(u_output_label)-1;
n_0 = strfind(u_output_label,'0');
assert(n_0==n_y+1); %<-- 0 termination. ;
assert(numel(u_lpFmax_)==n_y);
for ny=-1:n_y-1;
node_label = sprintf('%s0',u_output_label(1+(0:ny)));
node_lpFmax = 0; if (ny<n_y-1); node_lpFmax = u_lpFmax_(1+1+ny); end;
node_ij = 0; if (ny==n_y-1); node_ij = 1+ncluster; end;
if (isempty(intersect(node_label_,{node_label})));
node_label_{1+n_node} = node_label;
node_lpFmax_(1+n_node) = node_lpFmax;
node_ij_(1+n_node) = node_ij;
n_node=n_node+1;
end;%if (isempty(intersect(node_label_,{node_label})));
end;%for ny=-1:n_y-1;
end;%for ncluster=0:n_cluster-1;
assert(n_node==numel(node_label_));
assert(n_node==numel(node_lpFmax_));
assert(n_node==numel(node_ij_));
%%%%%%%%;
node_n_a_ = zeros(n_node,1);
node_xpos_avg_ = zeros(n_node,1);
node_xpos_max_ = zeros(n_node,1);
node_xpos_min_ = zeros(n_node,1);
node_ypos_ = zeros(n_node,1);
for nnode=0:n_node-1;
node_label = node_label_{1+nnode};
n_y = numel(node_label);
if (n_y==1);
n_a = n_item;
tmp_index_ = 0:n_item-1;
else;%if (n_y==1);
n_a=0;
for nitem=0:n_item-1; 
output_label = output_label_{1+nitem};
if (min(strfind(output_label,node_label(1:end-1)))==1);
n_a = n_a+1;
end;%if (min(strfind(output_label,node_label(1:end-1)))==1);
end;%for nitem=0:n_item-1; 
tmp_index_ = zeros(n_a,1);
na=0;
for nitem=0:n_item-1; 
output_label = output_label_{1+nitem};
if (min(strfind(output_label,node_label(1:end-1)))==1);
tmp_index_(1+na) = nitem;
na=na+1;
end;%if (min(strfind(output_label,node_label(1:end-1)))==1);
end;%for nitem=0:n_item-1; 
end;%if (n_y==1);
node_n_a_(1+nnode) = n_a;
node_xpos_avg_(1+nnode) = mean(xpos_from_item_(1+tmp_index_));
node_xpos_max_(1+nnode) = max(xpos_from_item_(1+tmp_index_));
node_xpos_min_(1+nnode) = min(xpos_from_item_(1+tmp_index_));
node_ypos_(1+nnode) = n_y;
end;%for nnode=0:n_node-1;
%%%%%%%%;
if (verbose);
for nnode=0:n_node-1;
node_label = node_label_{1+nnode};
node_lpFmax = node_lpFmax_(1+nnode);
ypos = node_ypos_(1+nnode);
xpos_avg = node_xpos_avg_(1+nnode);
xpos_min = node_xpos_min_(1+nnode);
xpos_max = node_xpos_max_(1+nnode);
n_a = node_n_a_(1+nnode);
disp(sprintf(' %% node %.3d/%.3d --> %s [lpFmax %+0.2f] a %.3d --> [x,y] = [(%+0.2f,%+0.2f,%+0.2f),%+0.2f]',nnode,n_node,node_label,node_lpFmax,n_a,xpos_min,xpos_avg,xpos_max,ypos));
end;%for nnode=0:n_node-1;
end;%if (verbose);
%%%%%%%%;

n_item_threshold = 1024;
n_node_threshold = 128;

cla;
hold on;
ypos_upb = max(ypos_from_item_);
xpos_upb = max(xpos_from_item_);
xpos_lob = min(xpos_from_item_);
c_ = colormap_beach(xpos_upb); n_c = size(c_,1);
for nitem=0:n_item-1;
xpos = xpos_from_item_(1+nitem);
ypos = ypos_from_item_(1+nitem);
nc = max(0,min(n_c-1,floor(n_c*xpos/xpos_upb)));
%patch(1+xpos+[0;1;1;0],ypos_upb+[-ypos;-ypos;1-ypos;1-ypos],c_(1+nc,:),'MarkerEdgeColor','k','LineWidth',0.5); %<-- short. ;
if (n_item< n_item_threshold);
patch(-0.5+1+xpos+[0;1;1;0],ypos_upb+[-ypos_upb;-ypos_upb;1-ypos;1-ypos],c_(1+nc,:),'MarkerEdgeColor','k','LineWidth',0.5); %<-- long. ;
end;%if (n_item< n_item_threshold);
if (n_item>=n_item_threshold);
patch(-0.5+1+xpos+[0;1;1;0],ypos_upb+[-ypos_upb;-ypos_upb;1-ypos;1-ypos],c_(1+nc,:),'LineStyle','none'); %<-- long. ;
end;%if (n_item>=n_item_threshold);
end;%for nitem=0:n_item-1;
for nnode=0:n_node-1;
node_lpFmax = node_lpFmax_(1+nnode);
node_ij = node_ij_(1+nnode);
if (node_lpFmax>=10); str_lpFmax = sprintf('%.2d',min(99,floor(node_lpFmax))); end;
if (node_lpFmax< 10); str_lpFmax = sprintf('%.1f',floor(10*node_lpFmax)/10); end;
if (node_lpFmax== 0); str_lpFmax = sprintf('[%d]',node_ij); end;
xpos_avg = node_xpos_avg_(1+nnode);
xpos_min = node_xpos_min_(1+nnode);
xpos_max = node_xpos_max_(1+nnode);
ypos = node_ypos_(1+nnode);
nc = max(0,min(n_c-1,floor(n_c*xpos_avg/xpos_upb)));
if (n_node< n_node_threshold);
patch(-0.5+1+[xpos_min;1+xpos_max;1+xpos_max;xpos_min],ypos_upb-ypos+1+[0;0;1;1],c_(1+nc,:),'MarkerEdgeColor','k','LineWidth',0.5);
if (node_lpFmax~=0); text(-0.5 + -0.5+1+xpos_avg,+0.5+ypos_upb-ypos+1,+1e-3,sprintf('%s',str_lpFmax)); end;
end;%if (n_node< n_node_threshold);
if (n_node>=n_node_threshold);
patch(-0.5+1+[xpos_min;1+xpos_max;1+xpos_max;xpos_min],ypos_upb-ypos+1+[0;0;1;1],c_(1+nc,:),'LineStyle','none');
if (node_lpFmax~=0); text(-0.5 + -0.5+1+xpos_avg,+0.5+ypos_upb-ypos+1,+1e-3,sprintf('%s',str_lpFmax)); end;
end;%if (n_node>=n_node_threshold);
end;%for nnode=0:n_node-1;
hold off;
if (~isempty(item_label_));
set(gca,'XTick',1+efind(xtick_from_xpos_),'XTickLabel',item_label_(1+item_from_xpos_(1+efind(xtick_from_xpos_)))); xtickangle(90);
end;%if (~isempty(item_label_)); 
set(gca,'FontSize',6);
xlim([xpos_lob,1+1+xpos_upb]);
ylim([0,1+ypos_upb]);
%figbig;


