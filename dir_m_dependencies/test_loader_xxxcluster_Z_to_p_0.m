function [ZR_p_s0000,ZR_p_s0000_] = test_loader_xxxcluster_Z_to_p_0(gamma,trace_);

verbose=0;
if (verbose>0); disp(sprintf(' %% [entering test_loader_xxxcluster_Z_to_p_0]')); end;

n_shuffle = numel(trace_)-1;
if (n_shuffle<=2); disp(sprintf(' %% Warning! too few shuffles for test_loader_xxxcluster_Z_to_p_0')); end;
n_iteration = size(trace_{1},1);
%%%%%%%%;
if (n_iteration<=1);
ZR_p_s0000 = 1;
ZR_p_s0000_ = 1;
end;%if (n_iteration<=1);
%%%%%%%%;
if (n_iteration>1);
%%%%%%%%;
QR_ = zeros(n_iteration,1+n_shuffle);
QC_ = zeros(n_iteration,1+n_shuffle);
for nshuffle=0:n_shuffle;
tmp_d = min(length(trace_{1}(:,1)),length(trace_{1+nshuffle}(:,1)));
QR_(1:tmp_d,1+nshuffle) = trace_{1+nshuffle}(1:tmp_d,4);
QC_(1:tmp_d,1+nshuffle) = trace_{1+nshuffle}(1:tmp_d,5);
end;%for nshuffle=1:n_shuffle;
n_iter_ = trace_{1}(:,1);
r_rem_ = trace_{1}(:,2);
c_rem_ = trace_{1}(:,3);
%%%%%%%%;
QR_avg_ = mean(QR_(:,2:end),2); QR_std_ = std(QR_(:,2:end),[],2);
ZR_ = (QR_ - repmat(QR_avg_,1,1+n_shuffle))./repmat(QR_std_,1,1+n_shuffle);
QC_avg_ = mean(QC_(:,2:end),2); QC_std_ = std(QC_(:,2:end),[],2);
ZC_ = (QC_ - repmat(QC_avg_,1,1+n_shuffle))./repmat(QC_std_,1,1+n_shuffle);
%%%%%%%%;
iteration_alo = max(1,floor(n_iteration*gamma));
iteration_ahi = min(n_iteration-1,floor(n_iteration*(1-gamma)));
iteration_avg_ = 1:iteration_ahi; 
dr_ = diff(r_rem_); dc_ = diff(c_rem_); 
dr2_ = transpose(dr_(iteration_avg_))/sum(dr_(iteration_avg_)); 
dc2_ = transpose(dc_(iteration_avg_))/sum(dc_(iteration_avg_));
iteration_top_ = iteration_alo:iteration_ahi;
tr_avg_s0000 = dr2_*ZR_(iteration_avg_,1);
tr_avg_ = dr2_*ZR_(iteration_avg_,2:end);
tr_avg_p_ = zeros(n_shuffle,1);
tr_top_s0000 = max(ZR_(iteration_top_,1),[],1); if (verbose>1); disp(tr_top_s0000); end;
tr_top_ = max(ZR_(iteration_top_,2:end),[],1);
tr_top_p_ = zeros(n_shuffle,1);
p_ra_ = zeros(n_shuffle,1);
for np=(1:n_shuffle);
tr_top_p_(np) = (length(find(tr_top_>tr_top_(np))) + 0.5*length(find(tr_top_==tr_top_(np))))/n_shuffle;
tr_avg_p_(np) = (length(find(tr_avg_>tr_avg_(np))) + 0.5*length(find(tr_avg_==tr_avg_(np))))/n_shuffle;
tmp_tau = min([tr_top_p_(np),tr_avg_p_(np)]); tmp_tau = max(0.5/n_shuffle,tmp_tau);
ls_rm = find(tr_top_(:)>=prctile(tr_top_(:),100*(1-tmp_tau)));
ls_ra = find(tr_avg_(:)>=prctile(tr_avg_(:),100*(1-tmp_tau)));
p_ra_(np) = length(unionall({ls_rm,ls_ra}))/n_shuffle;
end;%for np=(1:n_shuffle);
tr_top_s0000_p = (length(find(tr_top_>tr_top_s0000)) + 0.5*length(find(tr_top_==tr_top_s0000)))/n_shuffle;
tr_avg_s0000_p = (length(find(tr_avg_>tr_avg_s0000)) + 0.5*length(find(tr_avg_==tr_avg_s0000)))/n_shuffle;
tmp_tau = min([tr_top_s0000_p,tr_avg_s0000_p]); tmp_tau = max(0.5/n_shuffle,tmp_tau);
ls_rm = find(tr_top_(:)>=prctile(tr_top_(:),100*(1-tmp_tau)));
ls_ra = find(tr_avg_(:)>=prctile(tr_avg_(:),100*(1-tmp_tau)));
ZR_p_s0000 = length(unionall({ls_rm,ls_ra}))/n_shuffle;
if (verbose>0); disp(sprintf('ZR_p_s0000 %0.6f',ZR_p_s0000)); end;
%%%%%%%%;
ZR_s0000_ = ZR_(:,1);
ZR_p_s0000_ = zeros(n_iteration,1);
for niteration=1:n_iteration;
tmp_upb = ZR_s0000_(niteration);
tmp_p = Z_to_p(gamma,n_iteration,r_rem_,c_rem_,min(tmp_upb,ZR_s0000_),n_shuffle,tr_top_,tr_avg_);
ZR_p_s0000_(niteration) = tmp_p;
end;%for niteration=1:n_iteration;
%%%%%%%%;
flag_plot=(verbose>0);
if flag_plot;
figure;
subplot(1,2,1);
hold on;
l10plim=[0,2];
cmap = colormap('jet'); clen = size(cmap,1); %cmap = cmap(end:-1:1,:);
Msize1 = 25; Msize2 = 35;
for np=1:n_shuffle;
nc = max(1,min(clen,floor(clen*((-log10(p_ra_(np))-min(l10plim))/diff(l10plim)))));
plot(tr_top_(np),tr_avg_(np),'.','Color',cmap(nc,:),'MarkerSize',Msize1);
end;%for np=1:n_shuffle;
for no_flag=0:0;%for no_flag=0:NO-1;
plot(tr_top_s0000,tr_avg_s0000,'x','Color',[0,0,0],'MarkerSize',Msize2);
plot(tr_top_s0000,tr_avg_s0000,'o','Color',[0,0,0],'MarkerSize',Msize2);
end;%for no_flag=0:NO-1;
hold off;
%xlim([-1.50,+3.25]);ylim([-1.75,+2.75]);
if (verbose>1); disp(sprintf('xlim %0.2f %0.2f ylim %0.2f %0.2f',xlim(),ylim())); end;
xlabel('row Z-score (top)'); ylabel('row Z-score (avg)'); 
title('scatterplot of distribution of top vs avg: bicluster (x) and permutations (dots)');
%set(gca,'Xtick',[],'Ytick',[]);
axis equal;
subplot(1,2,2);
yl_ = [min(ZR_(:,2:end),[],'all'),max(ZR_(:,2:end),[],'all')];
yl_ = mean(yl_) + 1.25*diff(yl_)/2*[-1,+1];
hold on;
Z_ij_ = find(ZR_p_s0000_<0.05);
plot(n_iter_,ZR_(:,2:end),'k-','Linewidth',1);
plot(n_iter_,min(yl_(2),ZR_s0000_),'r.-','Linewidth',2);
plot(n_iter_(Z_ij_),min(yl_(2),ZR_(Z_ij_,1)),'go');
figbig;
end;%if flag_plot;
%%%%%%%%;
end;%if (n_iteration>1);
%%%%%%%%;

if (verbose>0); disp(sprintf(' %% [finished test_loader_xxxcluster_Z_to_p_0]')); end;

function p_s0000 = Z_to_p(gamma,n_iteration,r_rem_,c_rem_,ZR_s0000_,n_shuffle,tr_top_,tr_avg_);
iteration_alo = max(1,floor(n_iteration*gamma));
iteration_ahi = min(n_iteration-1,floor(n_iteration*(1-gamma)));
iteration_avg_ = 1:iteration_ahi; 
dr_ = diff(r_rem_); dc_ = diff(c_rem_); 
dr2_ = transpose(dr_(iteration_avg_))/sum(dr_(iteration_avg_)); 
dc2_ = transpose(dc_(iteration_avg_))/sum(dc_(iteration_avg_));
iteration_top_ = iteration_alo:iteration_ahi;
tr_avg_s0000 = dr2_*ZR_s0000_(iteration_avg_);
tr_top_s0000 = max(ZR_s0000_(iteration_top_));
tr_top_s0000_p = (length(find(tr_top_>tr_top_s0000)) + 0.5*length(find(tr_top_==tr_top_s0000)))/n_shuffle;
tr_avg_s0000_p = (length(find(tr_avg_>tr_avg_s0000)) + 0.5*length(find(tr_avg_==tr_avg_s0000)))/n_shuffle;
tmp_tau = min([tr_top_s0000_p,tr_avg_s0000_p]); tmp_tau = max(0.5/n_shuffle,tmp_tau);
ls_rm = find(tr_top_(:)>=prctile(tr_top_(:),100*(1-tmp_tau)));
ls_ra = find(tr_avg_(:)>=prctile(tr_avg_(:),100*(1-tmp_tau)));
p_s0000 = length(unionall({ls_rm,ls_ra}))/n_shuffle;

